From 68aa9bf63ba49214576603655f9037615b6f346c Mon Sep 17 00:00:00 2001
From: ThomasHeniart <thomas.heniart@devfactory.com>
Date: Wed, 9 Jan 2019 10:22:12 +0100
Subject: [PATCH] My submission
XOV: XO_0_0_1

---
 .idea/codeStyles/Project.xml                       |   11 +
 .idea/codeStyles/codeStyleConfig.xml               |    5 +
 .idea/dictionaries/thomas.xml                      |    3 +
 .idea/encodings.xml                                |    6 +
 .idea/gradle.xml                                   |   18 +
 .idea/inspectionProfiles/Project_Default.xml       |    5 +
 .idea/misc.xml                                     |   10 +
 .idea/uiDesigner.xml                               |  124 ++
 .idea/vcs.xml                                      |    6 +
 .idea/workspace.xml                                | 1795 ++++++++++++++++++++
 .../META-INF/cross-library-java_main.kotlin_module |  Bin 0 -> 16 bytes
 out/production/classes/application.properties      |   14 +
 .../techtrial/CrossLibraryApplication.class        |  Bin 0 -> 741 bytes
 .../techtrial/controller/BookController.class      |  Bin 0 -> 2774 bytes
 .../techtrial/controller/MemberController.class    |  Bin 0 -> 5611 bytes
 .../controller/TransactionController.class         |  Bin 0 -> 3313 bytes
 .../com/crossover/techtrial/dto/TopMemberDTO.class |  Bin 0 -> 1526 bytes
 .../crossover/techtrial/dto/TransactionDTO.class   |  Bin 0 -> 1049 bytes
 .../exceptions/BookAlreadyIssuedException.class    |  Bin 0 -> 513 bytes
 .../exceptions/BookAlreadyReturnedException.class  |  Bin 0 -> 523 bytes
 .../exceptions/BookNotFoundException.class         |  Bin 0 -> 488 bytes
 .../exceptions/InvalidTimeRangeException.class     |  Bin 0 -> 515 bytes
 .../exceptions/TooManyBooksIssuedException.class   |  Bin 0 -> 520 bytes
 .../exceptions/TransactionNotFoundException.class  |  Bin 0 -> 523 bytes
 .../exceptions/UserAlreadyExistsException.class    |  Bin 0 -> 518 bytes
 .../techtrial/factory/TransactionFactory.class     |  Bin 0 -> 1681 bytes
 .../com/crossover/techtrial/model/Book.class       |  Bin 0 -> 2201 bytes
 .../com/crossover/techtrial/model/Member.class     |  Bin 0 -> 3562 bytes
 .../techtrial/model/MembershipStatus.class         |  Bin 0 -> 1158 bytes
 .../crossover/techtrial/model/Transaction.class    |  Bin 0 -> 2728 bytes
 .../techtrial/repositories/BookRepository.class    |  Bin 0 -> 475 bytes
 .../techtrial/repositories/MemberRepository.class  |  Bin 0 -> 1194 bytes
 .../repositories/TransactionRepository.class       |  Bin 0 -> 1086 bytes
 .../crossover/techtrial/service/BookService.class  |  Bin 0 -> 420 bytes
 .../techtrial/service/BookServiceImpl.class        |  Bin 0 -> 2872 bytes
 .../techtrial/service/MemberService.class          |  Bin 0 -> 433 bytes
 .../techtrial/service/MemberServiceImpl.class      |  Bin 0 -> 1952 bytes
 .../techtrial/service/TopMemberService.class       |  Bin 0 -> 401 bytes
 .../techtrial/service/TopMemberServiceImpl.class   |  Bin 0 -> 5299 bytes
 .../techtrial/service/TransactionService.class     |  Bin 0 -> 611 bytes
 .../techtrial/service/TransactionServiceImpl.class |  Bin 0 -> 4963 bytes
 .../classes/db/changelog/db.changelog-1.0.xml      |   43 +
 .../classes/db/changelog/db.changelog-2.0.xml      |   23 +
 .../classes/db/changelog/db.changelog-master.xml   |    7 +
 out/production/classes/logback-spring.xml          |   11 +
 .../META-INF/cross-library-java_main.kotlin_module |  Bin 0 -> 16 bytes
 .../techtrial/CrossLibraryApplicationTest.class    |  Bin 0 -> 354 bytes
 .../techtrial/controller/BookControllerTest.class  |  Bin 0 -> 5508 bytes
 .../controller/MemberControllerTest.class          |  Bin 0 -> 6921 bytes
 .../controller/TransactionControllerTest.class     |  Bin 0 -> 3880 bytes
 .../techtrial/factory/TransactionFactoryTest.class |  Bin 0 -> 2913 bytes
 .../techtrial/service/BookServiceImplTest.class    |  Bin 0 -> 4224 bytes
 .../techtrial/service/MemberServiceImplTest.class  |  Bin 0 -> 4246 bytes
 .../service/TopMemberServiceImplTest.class         |  Bin 0 -> 5234 bytes
 .../service/TransactionServiceImplTest.class       |  Bin 0 -> 8054 bytes
 .../techtrial/util/HttpEntityHelper.class          |  Bin 0 -> 1206 bytes
 .../techtrial/controller/BookController.java       |   74 +-
 .../techtrial/controller/MemberController.java     |  132 +-
 .../controller/TransactionController.java          |   83 +-
 .../com/crossover/techtrial/dto/TopMemberDTO.java  |  123 +-
 .../crossover/techtrial/dto/TransactionDTO.java    |   38 +
 .../exceptions/BookAlreadyIssuedException.java     |   10 +
 .../exceptions/BookAlreadyReturnedException.java   |   10 +
 .../exceptions/BookNotFoundException.java          |   10 +
 .../exceptions/GlobalExceptionHandler.java         |   29 -
 .../exceptions/InvalidTimeRangeException.java      |   10 +
 .../exceptions/TooManyBooksIssuedException.java    |   10 +
 .../exceptions/TransactionNotFoundException.java   |   10 +
 .../exceptions/UserAlreadyExistsException.java     |   10 +
 .../techtrial/factory/TransactionFactory.java      |   33 +
 .../java/com/crossover/techtrial/model/Book.java   |  127 +-
 .../java/com/crossover/techtrial/model/Member.java |  220 +--
 .../com/crossover/techtrial/model/Transaction.java |  142 +-
 .../techtrial/repositories/MemberRepository.java   |   13 +-
 .../repositories/TransactionRepository.java        |   11 +-
 .../crossover/techtrial/service/BookService.java   |   17 +-
 .../techtrial/service/BookServiceImpl.java         |   59 +-
 .../crossover/techtrial/service/MemberService.java |   17 +-
 .../techtrial/service/MemberServiceImpl.java       |   53 +-
 .../techtrial/service/TopMemberService.java        |   10 +
 .../techtrial/service/TopMemberServiceImpl.java    |   54 +
 .../techtrial/service/TransactionService.java      |   15 +
 .../techtrial/service/TransactionServiceImpl.java  |   98 ++
 .../resources/db/changelog/db.changelog-2.0.xml    |   23 +
 .../resources/db/changelog/db.changelog-master.xml |    7 +-
 .../techtrial/controller/BookControllerTest.java   |  111 ++
 .../techtrial/controller/MemberControllerTest.java |  175 +-
 .../controller/TransactionControllerTest.java      |   73 +
 .../techtrial/factory/TransactionFactoryTest.java  |   54 +
 .../techtrial/service/BookServiceImplTest.java     |  108 ++
 .../techtrial/service/MemberServiceImplTest.java   |  107 ++
 .../service/TopMemberServiceImplTest.java          |   94 +
 .../service/TransactionServiceImplTest.java        |  199 +++
 .../crossover/techtrial/util/HttpEntityHelper.java |   20 +
 94 files changed, 3877 insertions(+), 593 deletions(-)
 create mode 100644 .idea/codeStyles/Project.xml
 create mode 100644 .idea/codeStyles/codeStyleConfig.xml
 create mode 100644 .idea/dictionaries/thomas.xml
 create mode 100644 .idea/encodings.xml
 create mode 100644 .idea/gradle.xml
 create mode 100644 .idea/inspectionProfiles/Project_Default.xml
 create mode 100644 .idea/misc.xml
 create mode 100644 .idea/uiDesigner.xml
 create mode 100644 .idea/vcs.xml
 create mode 100644 .idea/workspace.xml
 create mode 100644 out/production/classes/META-INF/cross-library-java_main.kotlin_module
 create mode 100644 out/production/classes/application.properties
 create mode 100644 out/production/classes/com/crossover/techtrial/CrossLibraryApplication.class
 create mode 100644 out/production/classes/com/crossover/techtrial/controller/BookController.class
 create mode 100644 out/production/classes/com/crossover/techtrial/controller/MemberController.class
 create mode 100644 out/production/classes/com/crossover/techtrial/controller/TransactionController.class
 create mode 100644 out/production/classes/com/crossover/techtrial/dto/TopMemberDTO.class
 create mode 100644 out/production/classes/com/crossover/techtrial/dto/TransactionDTO.class
 create mode 100644 out/production/classes/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.class
 create mode 100644 out/production/classes/com/crossover/techtrial/exceptions/BookAlreadyReturnedException.class
 create mode 100644 out/production/classes/com/crossover/techtrial/exceptions/BookNotFoundException.class
 create mode 100644 out/production/classes/com/crossover/techtrial/exceptions/InvalidTimeRangeException.class
 create mode 100644 out/production/classes/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.class
 create mode 100644 out/production/classes/com/crossover/techtrial/exceptions/TransactionNotFoundException.class
 create mode 100644 out/production/classes/com/crossover/techtrial/exceptions/UserAlreadyExistsException.class
 create mode 100644 out/production/classes/com/crossover/techtrial/factory/TransactionFactory.class
 create mode 100644 out/production/classes/com/crossover/techtrial/model/Book.class
 create mode 100644 out/production/classes/com/crossover/techtrial/model/Member.class
 create mode 100644 out/production/classes/com/crossover/techtrial/model/MembershipStatus.class
 create mode 100644 out/production/classes/com/crossover/techtrial/model/Transaction.class
 create mode 100644 out/production/classes/com/crossover/techtrial/repositories/BookRepository.class
 create mode 100644 out/production/classes/com/crossover/techtrial/repositories/MemberRepository.class
 create mode 100644 out/production/classes/com/crossover/techtrial/repositories/TransactionRepository.class
 create mode 100644 out/production/classes/com/crossover/techtrial/service/BookService.class
 create mode 100644 out/production/classes/com/crossover/techtrial/service/BookServiceImpl.class
 create mode 100644 out/production/classes/com/crossover/techtrial/service/MemberService.class
 create mode 100644 out/production/classes/com/crossover/techtrial/service/MemberServiceImpl.class
 create mode 100644 out/production/classes/com/crossover/techtrial/service/TopMemberService.class
 create mode 100644 out/production/classes/com/crossover/techtrial/service/TopMemberServiceImpl.class
 create mode 100644 out/production/classes/com/crossover/techtrial/service/TransactionService.class
 create mode 100644 out/production/classes/com/crossover/techtrial/service/TransactionServiceImpl.class
 create mode 100644 out/production/classes/db/changelog/db.changelog-1.0.xml
 create mode 100644 out/production/classes/db/changelog/db.changelog-2.0.xml
 create mode 100644 out/production/classes/db/changelog/db.changelog-master.xml
 create mode 100644 out/production/classes/logback-spring.xml
 create mode 100644 out/test/classes/META-INF/cross-library-java_main.kotlin_module
 create mode 100644 out/test/classes/com/crossover/techtrial/CrossLibraryApplicationTest.class
 create mode 100644 out/test/classes/com/crossover/techtrial/controller/BookControllerTest.class
 create mode 100644 out/test/classes/com/crossover/techtrial/controller/MemberControllerTest.class
 create mode 100644 out/test/classes/com/crossover/techtrial/controller/TransactionControllerTest.class
 create mode 100644 out/test/classes/com/crossover/techtrial/factory/TransactionFactoryTest.class
 create mode 100644 out/test/classes/com/crossover/techtrial/service/BookServiceImplTest.class
 create mode 100644 out/test/classes/com/crossover/techtrial/service/MemberServiceImplTest.class
 create mode 100644 out/test/classes/com/crossover/techtrial/service/TopMemberServiceImplTest.class
 create mode 100644 out/test/classes/com/crossover/techtrial/service/TransactionServiceImplTest.class
 create mode 100644 out/test/classes/com/crossover/techtrial/util/HttpEntityHelper.class
 create mode 100644 src/main/java/com/crossover/techtrial/dto/TransactionDTO.java
 create mode 100644 src/main/java/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.java
 create mode 100644 src/main/java/com/crossover/techtrial/exceptions/BookAlreadyReturnedException.java
 create mode 100644 src/main/java/com/crossover/techtrial/exceptions/BookNotFoundException.java
 delete mode 100644 src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java
 create mode 100644 src/main/java/com/crossover/techtrial/exceptions/InvalidTimeRangeException.java
 create mode 100644 src/main/java/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.java
 create mode 100644 src/main/java/com/crossover/techtrial/exceptions/TransactionNotFoundException.java
 create mode 100644 src/main/java/com/crossover/techtrial/exceptions/UserAlreadyExistsException.java
 create mode 100644 src/main/java/com/crossover/techtrial/factory/TransactionFactory.java
 create mode 100644 src/main/java/com/crossover/techtrial/service/TopMemberService.java
 create mode 100644 src/main/java/com/crossover/techtrial/service/TopMemberServiceImpl.java
 create mode 100644 src/main/java/com/crossover/techtrial/service/TransactionService.java
 create mode 100644 src/main/java/com/crossover/techtrial/service/TransactionServiceImpl.java
 create mode 100644 src/main/resources/db/changelog/db.changelog-2.0.xml
 create mode 100644 src/test/java/com/crossover/techtrial/controller/BookControllerTest.java
 create mode 100644 src/test/java/com/crossover/techtrial/controller/TransactionControllerTest.java
 create mode 100644 src/test/java/com/crossover/techtrial/factory/TransactionFactoryTest.java
 create mode 100644 src/test/java/com/crossover/techtrial/service/BookServiceImplTest.java
 create mode 100644 src/test/java/com/crossover/techtrial/service/MemberServiceImplTest.java
 create mode 100644 src/test/java/com/crossover/techtrial/service/TopMemberServiceImplTest.java
 create mode 100644 src/test/java/com/crossover/techtrial/service/TransactionServiceImplTest.java
 create mode 100644 src/test/java/com/crossover/techtrial/util/HttpEntityHelper.java

diff --git a/.idea/codeStyles/Project.xml b/.idea/codeStyles/Project.xml
new file mode 100644
index 0000000..aac5413
--- /dev/null
+++ b/.idea/codeStyles/Project.xml
@@ -0,0 +1,11 @@
+<component name="ProjectCodeStyleConfiguration">
+  <code_scheme name="Project" version="173">
+    <codeStyleSettings language="JavaScript">
+      <indentOptions>
+        <option name="INDENT_SIZE" value="2" />
+        <option name="CONTINUATION_INDENT_SIZE" value="2" />
+        <option name="TAB_SIZE" value="2" />
+      </indentOptions>
+    </codeStyleSettings>
+  </code_scheme>
+</component>
\ No newline at end of file
diff --git a/.idea/codeStyles/codeStyleConfig.xml b/.idea/codeStyles/codeStyleConfig.xml
new file mode 100644
index 0000000..b9d18bf
--- /dev/null
+++ b/.idea/codeStyles/codeStyleConfig.xml
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="PREFERRED_PROJECT_CODE_STYLE" value="GoogleStyle" />
+  </state>
+</component>
\ No newline at end of file
diff --git a/.idea/dictionaries/thomas.xml b/.idea/dictionaries/thomas.xml
new file mode 100644
index 0000000..ec0359f
--- /dev/null
+++ b/.idea/dictionaries/thomas.xml
@@ -0,0 +1,3 @@
+<component name="ProjectDictionaryState">
+  <dictionary name="thomas" />
+</component>
\ No newline at end of file
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
index 0000000..c2bae49
--- /dev/null
+++ b/.idea/encodings.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding" defaultCharsetForPropertiesFiles="UTF-8">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
new file mode 100644
index 0000000..3d29d71
--- /dev/null
+++ b/.idea/gradle.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleHome" value="$USER_HOME$/Optiva/UnifiedCharging-Platform-platform_vapc/keymanagementbatch" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+          </set>
+        </option>
+        <option name="useAutoImport" value="true" />
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
index 0000000..8d66637
--- /dev/null
+++ b/.idea/inspectionProfiles/Project_Default.xml
@@ -0,0 +1,5 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+  </profile>
+</component>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
index 0000000..ba31317
--- /dev/null
+++ b/.idea/misc.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="JavaScriptSettings">
+    <option name="languageLevel" value="JSX" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
index 0000000..e96534f
--- /dev/null
+++ b/.idea/uiDesigner.xml
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
index 0000000..94a25f7
--- /dev/null
+++ b/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
index 0000000..cff66a8
--- /dev/null
+++ b/.idea/workspace.xml
@@ -0,0 +1,1795 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="7f479d21-7ce5-4825-8e73-0475fb0e2b9a" name="Default" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/dto/TransactionDTO.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyReturnedException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/BookNotFoundException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/InvalidTimeRangeException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/TransactionNotFoundException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/UserAlreadyExistsException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/factory/TransactionFactory.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TopMemberService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TopMemberServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TransactionService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TransactionServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/db/changelog/db.changelog-2.0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/BookControllerTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/TransactionControllerTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/factory/TransactionFactoryTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/BookServiceImplTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/MemberServiceImplTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/TopMemberServiceImplTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/TransactionServiceImplTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/util/HttpEntityHelper.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/BookController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/BookController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/MemberController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/MemberController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/TransactionController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/TransactionController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/dto/TopMemberDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/dto/TopMemberDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Book.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Book.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Member.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Member.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Transaction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Transaction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/repositories/MemberRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/repositories/MemberRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/repositories/TransactionRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/repositories/TransactionRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/BookService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/BookService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/BookServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/BookServiceImpl.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/MemberService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/MemberService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/MemberServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/MemberServiceImpl.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/db/changelog/db.changelog-master.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/db/changelog/db.changelog-master.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/MemberControllerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/MemberControllerTest.java" afterDir="false" />
+    </list>
+    <ignored path="$PROJECT_DIR$/.gradle/" />
+    <ignored path="$PROJECT_DIR$/build/" />
+    <ignored path="$PROJECT_DIR$/out/" />
+    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
+    <option name="TRACKING_ENABLED" value="true" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="CodeInsightWorkspaceSettings">
+    <option name="optimizeImportsOnTheFly" value="true" />
+  </component>
+  <component name="CoverageDataManager">
+    <SUITE FILE_PATH="coverage/cross_library_java$MemberServiceImplTest.ic" NAME="MemberServiceImplTest Coverage Results" MODIFIED="1546950458708" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>com.crossover.techtrial.service.*</FILTER>
+    </SUITE>
+    <SUITE FILE_PATH="coverage/cross_library_java$com_crossover_techtrial_in_cross_library_java_test.ic" NAME="com.crossover.techtrial in cross-library-java_test Coverage Results" MODIFIED="1547025573380" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>com.crossover.techtrial.*</FILTER>
+    </SUITE>
+    <SUITE FILE_PATH="coverage/cross_library_java$MemberControllerTest.ic" NAME="MemberControllerTest Coverage Results" MODIFIED="1546951929073" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>com.crossover.techtrial.controller.*</FILTER>
+    </SUITE>
+    <SUITE FILE_PATH="coverage/cross_library_java$All_in_cross_library_java_test.ic" NAME="All in cross-library-java_test Coverage Results" MODIFIED="1546949460813" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/cross_library_java$com_in_cross_library_java_test.ic" NAME="com in cross-library-java_test Coverage Results" MODIFIED="1546970312164" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>com.*</FILTER>
+    </SUITE>
+  </component>
+  <component name="ExternalProjectsData">
+    <projectState path="$PROJECT_DIR$">
+      <ProjectState />
+    </projectState>
+  </component>
+  <component name="FileEditorManager">
+    <leaf>
+      <file leaf-file-name="TransactionController.java" pinned="false" current-in-tab="true">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/TransactionController.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="300">
+              <caret line="37" column="7" selection-start-line="37" selection-start-column="7" selection-end-line="37" selection-end-column="7" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="TransactionService.java" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TransactionService.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="135">
+              <caret line="9" column="25" lean-forward="true" selection-start-line="9" selection-start-column="25" selection-end-line="9" selection-end-column="25" />
+              <folding>
+                <element signature="imports" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="TransactionDTO.java" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/dto/TransactionDTO.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="300">
+              <caret line="20" column="31" selection-start-line="20" selection-start-column="31" selection-end-line="20" selection-end-column="31" />
+              <folding>
+                <element signature="e#475#476#0" expanded="true" />
+                <element signature="e#623#624#0" expanded="true" />
+                <element signature="e#652#653#0" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="TransactionServiceImpl.java" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TransactionServiceImpl.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="256">
+              <caret line="38" column="29" selection-start-line="38" selection-start-column="29" selection-end-line="38" selection-end-column="29" />
+              <folding>
+                <element signature="imports" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="TransactionServiceImplTest.java" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/TransactionServiceImplTest.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="2790">
+              <caret line="186" column="35" selection-start-line="186" selection-start-column="35" selection-end-line="186" selection-end-column="35" />
+              <folding>
+                <element signature="imports" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+    </leaf>
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Interface" />
+        <option value="Singleton" />
+        <option value="JUnit4 Test Class" />
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="FindInProjectRecents">
+    <dirStrings>
+      <dir>$PROJECT_DIR$/src/main/java/com/crossover/techtrial/query</dir>
+      <dir>$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions</dir>
+    </dirStrings>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GradleLocalSettings">
+    <option name="myGradleHomes">
+      <map>
+        <entry key="$PROJECT_DIR$" value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3" />
+      </map>
+    </option>
+    <option name="myGradleVersions">
+      <map>
+        <entry key="$PROJECT_DIR$" value="4.3" />
+      </map>
+    </option>
+    <option name="availableProjects">
+      <map>
+        <entry>
+          <key>
+            <ExternalProjectPojo>
+              <option name="name" value="cross-library-java" />
+              <option name="path" value="$PROJECT_DIR$" />
+            </ExternalProjectPojo>
+          </key>
+          <value>
+            <list>
+              <ExternalProjectPojo>
+                <option name="name" value="cross-library-java" />
+                <option name="path" value="$PROJECT_DIR$" />
+              </ExternalProjectPojo>
+            </list>
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="availableTasks">
+      <map>
+        <entry key="$PROJECT_DIR$">
+          <value>
+            <list>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays the sub-projects of root project 'cross-library-java'." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="projects" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Generates Gradle wrapper files." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="wrapper" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Verifies code coverage metrics based on specified rules for the test task." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="jacocoTestCoverageVerification" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="reportCobertura" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Assembles an executable jar archive containing the main classes and their dependencies." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="bootJar" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Generates the Eclipse classpath file." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="eclipseClasspath" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Assembles a jar archive containing the main classes." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="jar" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays the configuration model of root project 'cross-library-java'. [incubating]" />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="model" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Processes main resources." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="processResources" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays the tasks runnable from root project 'cross-library-java'." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="tasks" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Initializes a new Gradle build." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="init" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Runs the unit tests." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="test" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays the dependency management declared in root project 'cross-library-java'." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="dependencyManagement" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Compiles main Java source." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="compileJava" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Runs all checks." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="check" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays all dependencies declared in root project 'cross-library-java'." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="dependencies" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Generates all Eclipse files." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="eclipse" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Processes test resources." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="processTestResources" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Generates the Eclipse JDT settings file." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="eclipseJdt" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Assembles and tests this project and all projects it depends on." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="buildNeeded" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Generates the Eclipse project file." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="eclipseProject" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays the components produced by root project 'cross-library-java'. [incubating]" />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="components" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="buildDependents" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="cleanEclipseClasspath" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Cleans all Eclipse files." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="cleanEclipse" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Assembles main classes." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="classes" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays the dependent components of components in root project 'cross-library-java'. [incubating]" />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="dependentComponents" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays all buildscript dependencies declared in root project 'cross-library-java'." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="buildEnvironment" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="cleanEclipseProject" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Assembles test classes." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="testClasses" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Generates Javadoc API documentation for the main source code." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="javadoc" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="cleanEclipseJdt" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Runs this project as a Spring Boot application." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="bootRun" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays the insight into a specific dependency in root project 'cross-library-java'." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="dependencyInsight" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Generates code coverage report for the test task." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="jacocoTestReport" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="reportJacoco" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Assembles the outputs of this project." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="assemble" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Deletes the build directory." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="clean" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Compiles test Java source." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="compileTestJava" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays a help message." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="help" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Assembles and tests this project." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="build" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="reportTest" />
+              </ExternalTaskPojo>
+              <ExternalTaskPojo>
+                <option name="description" value="Displays the properties of root project 'cross-library-java'." />
+                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
+                <option name="name" value="properties" />
+              </ExternalTaskPojo>
+            </list>
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="modificationStamps">
+      <map>
+        <entry key="$PROJECT_DIR$" value="4632863262000" />
+        <entry key="$PROJECT_DIR$/.gradle" value="0" />
+        <entry key="$PROJECT_DIR$/build.gradle" value="3200816834" />
+        <entry key="$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.properties" value="61580767" />
+      </map>
+    </option>
+    <option name="projectBuildClasspath">
+      <map>
+        <entry key="$PROJECT_DIR$">
+          <value>
+            <ExternalProjectBuildClasspathPojo>
+              <option name="modulesBuildClasspath">
+                <map>
+                  <entry key="$PROJECT_DIR$">
+                    <value>
+                      <ExternalModuleBuildClasspathPojo>
+                        <option name="entries">
+                          <list>
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-gradle-plugin/2.0.2.RELEASE/d283fee446dd4fb54100c034fe8cecfa0a869498/spring-boot-gradle-plugin-2.0.2.RELEASE-sources.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-gradle-plugin/2.0.2.RELEASE/b35e0fcf1acca8c38899af0f06269955f1bf553c/spring-boot-gradle-plugin-2.0.2.RELEASE.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.github.ksoichiro/gradle-console-reporter/0.5.0/35404b6df83b97f507d39c2743972a0355aa181d/gradle-console-reporter-0.5.0-sources.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.github.ksoichiro/gradle-console-reporter/0.5.0/ce052a5043f1560b4b61876edd04b14993f1f42e/gradle-console-reporter-0.5.0.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-loader-tools/2.0.2.RELEASE/fb36a0b30c22e3f260e3dad1c54a12c181c36228/spring-boot-loader-tools-2.0.2.RELEASE-sources.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-loader-tools/2.0.2.RELEASE/f1460752eda55972571a9651fcdfcb6cceef183d/spring-boot-loader-tools-2.0.2.RELEASE.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/io.spring.gradle/dependency-management-plugin/1.0.5.RELEASE/e9f2761e13da4228793ee5fcaa983889e68c4c61/dependency-management-plugin-1.0.5.RELEASE-sources.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/io.spring.gradle/dependency-management-plugin/1.0.5.RELEASE/3589987a66349bdc10b18c6c4a5463ffd084c908/dependency-management-plugin-1.0.5.RELEASE.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-compress/1.14/43a23e357fa7b187c261520914c0b001ea1a62a2/commons-compress-1.14-sources.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-compress/1.14/7b18320d668ab080758bf5383d6d8fcf750babce/commons-compress-1.14.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/5.0.6.RELEASE/86ca74938ace10c2aff781b6d93888435baf7474/spring-core-5.0.6.RELEASE-sources.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/5.0.6.RELEASE/984a52455b1be596b7f1a29f62d21d2f483eb764/spring-core-5.0.6.RELEASE.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/5.0.6.RELEASE/ca475012ae43a0745d3cfc0bae4e52de0fddc29f/spring-jcl-5.0.6.RELEASE-sources.jar" />
+                            <option value="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/5.0.6.RELEASE/295ee4e8657e9c1fd327735c01d5fbce339cc44d/spring-jcl-5.0.6.RELEASE.jar" />
+                          </list>
+                        </option>
+                        <option name="path" value="$PROJECT_DIR$" />
+                      </ExternalModuleBuildClasspathPojo>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+              <option name="name" value="cross-library-java" />
+              <option name="projectBuildClasspath">
+                <list>
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-native-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-runtime-api-info-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-wrapper-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-logging-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-installation-beacon-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-base-services-groovy-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-model-core-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-core-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/ant-1.9.6.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-build-cache-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/groovy-all-2.4.12.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-kotlin-dsl-tooling-builders-0.12.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-process-services-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-cli-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-docs-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-persistent-cache-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/ant-launcher-1.9.6.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-base-services-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-build-option-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-messaging-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-jvm-services-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-launcher-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-kotlin-dsl-0.12.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-resources-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-model-groovy-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-core-api-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-kotlin-dsl-tooling-models-0.12.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/gradle-tooling-api-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-platform-native-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-jacoco-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-plugins-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-build-comparison-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-language-native-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-version-control-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-javascript-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-ide-play-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-language-scala-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-tooling-api-builders-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-announce-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-plugin-use-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-platform-base-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-language-jvm-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-ear-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-publish-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-composite-builds-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-dependency-management-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-testing-native-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-build-cache-http-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-workers-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-plugin-development-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-diagnostics-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-ide-native-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-antlr-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-reporting-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-osgi-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-language-java-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-language-groovy-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-scala-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-resources-http-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-platform-play-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-ide-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-resources-gcs-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-maven-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-platform-jvm-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-testing-base-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-testing-jvm-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-build-init-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-test-kit-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-ivy-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-resources-sftp-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-signing-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/ivy-2.2.0.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-resources-s3-4.3.jar" />
+                  <option value="$USER_HOME$/.gradle/wrapper/dists/gradle-4.3-bin/452wx51oxqsia28686mgqhot6/gradle-4.3/lib/plugins/gradle-code-quality-4.3.jar" />
+                  <option value="$PROJECT_DIR$/buildSrc/src/main/java" />
+                  <option value="$PROJECT_DIR$/buildSrc/src/main/groovy" />
+                </list>
+              </option>
+            </ExternalProjectBuildClasspathPojo>
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="projectSyncType">
+      <map>
+        <entry key="$PROJECT_DIR$" value="RE_IMPORT" />
+        <entry key="$USER_HOME$/Optiva/UnifiedCharging-Platform-platform_vapc/batch" value="PREVIEW" />
+        <entry key="$USER_HOME$/Optiva/UnifiedCharging-Platform-platform_vapc/keymanagement" value="PREVIEW" />
+        <entry key="$USER_HOME$/Optiva/UnifiedCharging-Platform-platform_vapc/keymanagementbatch" value="PREVIEW" />
+        <entry key="$USER_HOME$/Optiva/UnifiedCharging-Platform-platform_vapc/logging" value="PREVIEW" />
+        <entry key="$USER_HOME$/Optiva/UnifiedCharging-Platform-platform_vapc/umb" value="PREVIEW" />
+        <entry key="$USER_HOME$/Optiva/UnifiedCharging-Platform-platform_vapc/umf" value="PREVIEW" />
+        <entry key="$USER_HOME$/crossblogs-java-se" value="PREVIEW" />
+      </map>
+    </option>
+  </component>
+  <component name="IdeDocumentHistory">
+    <option name="CHANGED_PATHS">
+      <list>
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/model/MemberMock.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/MemberService.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/BookService.java" />
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/util/HttpEntityHelper.java" />
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/factory/TransactionFactoryTest.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/repositories/MemberRepository.java" />
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/MemberServiceImplTest.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/BookNotFoundException.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/UserAlreadyExistsException.java" />
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/BookControllerTest.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/BookController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyIssued.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/BookAlreadyReturnedException.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/TransactionNotFoundException.java" />
+        <option value="$PROJECT_DIR$/src/main/resources/db/changelog/db.changelog-master.xml" />
+        <option value="$PROJECT_DIR$/src/main/resources/db/changelog/db.changelog-2.0.xml" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/query/TopMembersSQLQuery.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/InvalidTimeRangeException.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TopMemberService.java" />
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/TopMemberServiceImplTest.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/repositories/TransactionRepository.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/MemberController.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Member.java" />
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/MemberControllerTest.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/factory/TransactionFactory.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TopMemberServiceImpl.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Transaction.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/BookServiceImpl.java" />
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/BookServiceImplTest.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/MemberServiceImpl.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Book.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/dto/TopMemberDTO.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/dto/TransactionDTO.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TransactionService.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TransactionServiceImpl.java" />
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/TransactionControllerTest.java" />
+        <option value="$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/TransactionServiceImplTest.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/TransactionController.java" />
+      </list>
+    </option>
+  </component>
+  <component name="JsBowerSettings">
+    <node-interpreter value="project" />
+    <exe-path />
+    <config-path />
+  </component>
+  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
+  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
+  <component name="JsFlowSettings">
+    <service-enabled>true</service-enabled>
+    <exe-path />
+    <annotation-enable>false</annotation-enable>
+    <other-services-enabled>true</other-services-enabled>
+    <auto-save>true</auto-save>
+  </component>
+  <component name="JsGulpfileManager">
+    <detection-done>true</detection-done>
+    <sorting>DEFINITION_ORDER</sorting>
+  </component>
+  <component name="MavenImportPreferences">
+    <option name="importingSettings">
+      <MavenImportingSettings>
+        <option name="excludeTargetFolder" value="false" />
+        <option name="importAutomatically" value="true" />
+      </MavenImportingSettings>
+    </option>
+  </component>
+  <component name="NamedScopeManager">
+    <scope name="Unnamed" pattern="*" />
+  </component>
+  <component name="NodePackageJsonFileManager">
+    <packageJsonPaths />
+  </component>
+  <component name="ProjectFrameBounds" extendedState="6">
+    <option name="x" value="-1920" />
+    <option name="y" value="-464" />
+    <option name="width" value="1920" />
+    <option name="height" value="1057" />
+  </component>
+  <component name="ProjectInspectionProfilesVisibleTreeState">
+    <entry key="Project Default">
+      <profile-state>
+        <expanded-state>
+          <State>
+            <id />
+          </State>
+          <State>
+            <id>ActionScript specificJavaScript</id>
+          </State>
+          <State>
+            <id>Android &gt; Lint &gt; Lint</id>
+          </State>
+          <State>
+            <id>Batch Applications Issues</id>
+          </State>
+          <State>
+            <id>Flow type checkerJavaScript</id>
+          </State>
+          <State>
+            <id>GeneralJavaScript</id>
+          </State>
+          <State>
+            <id>HTML</id>
+          </State>
+          <State>
+            <id>Hibernate inspections</id>
+          </State>
+          <State>
+            <id>J2ME issuesJava</id>
+          </State>
+          <State>
+            <id>Java</id>
+          </State>
+          <State>
+            <id>JavaScript</id>
+          </State>
+          <State>
+            <id>Portability issuesJava</id>
+          </State>
+          <State>
+            <id>Spring</id>
+          </State>
+          <State>
+            <id>Spring CoreSpring</id>
+          </State>
+          <State>
+            <id>Struts</id>
+          </State>
+          <State>
+            <id>Struts 1Struts</id>
+          </State>
+          <State>
+            <id>TypeScript</id>
+          </State>
+          <State>
+            <id>Web Services</id>
+          </State>
+          <State>
+            <id>XML</id>
+          </State>
+          <State>
+            <id>XMLSpring CoreSpring</id>
+          </State>
+        </expanded-state>
+        <selected-state>
+          <State>
+            <id>JavaFX</id>
+          </State>
+        </selected-state>
+      </profile-state>
+    </entry>
+  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectView">
+    <navigator proportions="" version="1">
+      <foldersAlwaysOnTop value="true" />
+    </navigator>
+    <panes>
+      <pane id="PackagesPane" />
+      <pane id="AndroidView" />
+      <pane id="Scope" />
+      <pane id="ProjectPane">
+        <subPane>
+          <expand>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="controller" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="dto" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="exceptions" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="factory" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="model" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="repositories" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="service" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="resources" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="resources" type="462c0819:PsiDirectoryNode" />
+              <item name="db" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="main" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="resources" type="462c0819:PsiDirectoryNode" />
+              <item name="db" type="462c0819:PsiDirectoryNode" />
+              <item name="changelog" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="controller" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="factory" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="service" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="cross-library-java" type="b2602c69:ProjectViewProjectNode" />
+              <item name="cross-library-java" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="src" type="462c0819:PsiDirectoryNode" />
+              <item name="test" type="8a07ba80:GradleTreeStructureProvider$GradleModuleDirectoryNode" />
+              <item name="java" type="462c0819:PsiDirectoryNode" />
+              <item name="com" type="462c0819:PsiDirectoryNode" />
+              <item name="crossover" type="462c0819:PsiDirectoryNode" />
+              <item name="techtrial" type="462c0819:PsiDirectoryNode" />
+              <item name="util" type="462c0819:PsiDirectoryNode" />
+            </path>
+          </expand>
+          <select />
+        </subPane>
+      </pane>
+    </panes>
+  </component>
+  <component name="PropertiesComponent">
+    <property name="JavaScriptWeakerCompletionTypeGuess" value="true" />
+    <property name="RequestMappingsPanelOrder0" value="0" />
+    <property name="RequestMappingsPanelOrder1" value="1" />
+    <property name="RequestMappingsPanelWidth0" value="75" />
+    <property name="RequestMappingsPanelWidth1" value="75" />
+    <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="aspect.path.notification.shown" value="true" />
+    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit4" />
+    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4" value="" />
+    <property name="extract.method.default.visibility" value="private" />
+    <property name="last_directory_selection" value="$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service" />
+    <property name="nodejs_interpreter_path.stuck_in_default_project" value="/usr/local/bin/node" />
+    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
+    <property name="project.structure.last.edited" value="Project" />
+    <property name="project.structure.proportion" value="0.0" />
+    <property name="project.structure.side.proportion" value="0.2" />
+    <property name="settings.editor.selected.configurable" value="settings.github" />
+  </component>
+  <component name="RecentsManager">
+    <key name="CreateTestDialog.RecentsKey">
+      <recent name="com.crossover.techtrial.factory" />
+      <recent name="com.crossover.techtrial.service" />
+      <recent name="com.crossover.techtrial.controller" />
+    </key>
+    <key name="CreateTestDialog.Recents.Supers">
+      <recent name="" />
+    </key>
+    <key name="CreateClassDialog.RecentsKey">
+      <recent name="com.crossover.techtrial.service" />
+    </key>
+  </component>
+  <component name="RunDashboard">
+    <option name="ruleStates">
+      <list>
+        <RuleState>
+          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
+        </RuleState>
+        <RuleState>
+          <option name="name" value="StatusDashboardGroupingRule" />
+        </RuleState>
+      </list>
+    </option>
+  </component>
+  <component name="RunManager" selected="JUnit.com.crossover.techtrial in cross-library-java_test">
+    <configuration default="true" type="Applet" factoryName="Applet">
+      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
+    </configuration>
+    <configuration default="true" type="Application" factoryName="Application">
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+    </configuration>
+    <configuration name="MemberControllerTest.givenInvalidTimeRangeWhenGetTopMembersThenBadRequest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="cross-library-java_test" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.crossover.techtrial.controller.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="PACKAGE_NAME" value="com.crossover.techtrial.controller" />
+      <option name="MAIN_CLASS_NAME" value="com.crossover.techtrial.controller.MemberControllerTest" />
+      <option name="METHOD_NAME" value="givenInvalidTimeRangeWhenGetTopMembersThenBadRequest" />
+      <option name="TEST_OBJECT" value="method" />
+      <option name="VM_PARAMETERS" value="-ea" />
+      <option name="PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="singleModule" />
+      </option>
+      <patterns />
+    </configuration>
+    <configuration name="TopMemberServiceImplTest.givenValidWhenGetTopMembersFromStartTimeToEndTimeThenException" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="cross-library-java_test" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.crossover.techtrial.service.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="PACKAGE_NAME" value="com.crossover.techtrial.service" />
+      <option name="MAIN_CLASS_NAME" value="com.crossover.techtrial.service.TopMemberServiceImplTest" />
+      <option name="METHOD_NAME" value="givenValidWhenGetTopMembersFromStartTimeToEndTimeThenException" />
+      <option name="TEST_OBJECT" value="method" />
+      <option name="VM_PARAMETERS" value="-ea" />
+      <option name="PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="singleModule" />
+      </option>
+      <patterns />
+    </configuration>
+    <configuration name="TransactionServiceImplTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="cross-library-java_test" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.crossover.techtrial.exceptions.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="PACKAGE_NAME" value="com.crossover.techtrial.service" />
+      <option name="MAIN_CLASS_NAME" value="com.crossover.techtrial.service.TransactionServiceImplTest" />
+      <option name="METHOD_NAME" />
+      <option name="TEST_OBJECT" value="class" />
+      <option name="VM_PARAMETERS" value="-ea" />
+      <option name="PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="singleModule" />
+      </option>
+      <patterns />
+    </configuration>
+    <configuration name="TransactionServiceImplTest.givenFiveBooksIssuedAndNotReturnedWhenIssueBookToMemberThenException" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="cross-library-java_test" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.crossover.techtrial.service.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="PACKAGE_NAME" value="com.crossover.techtrial.service" />
+      <option name="MAIN_CLASS_NAME" value="com.crossover.techtrial.service.TransactionServiceImplTest" />
+      <option name="METHOD_NAME" value="givenFiveBooksIssuedAndNotReturnedWhenIssueBookToMemberThenException" />
+      <option name="TEST_OBJECT" value="method" />
+      <option name="VM_PARAMETERS" value="-ea" />
+      <option name="PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="singleModule" />
+      </option>
+      <patterns />
+    </configuration>
+    <configuration default="true" type="JUnit" factoryName="JUnit">
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="PACKAGE_NAME" />
+      <option name="MAIN_CLASS_NAME" />
+      <option name="METHOD_NAME" />
+      <option name="TEST_OBJECT" value="class" />
+      <option name="VM_PARAMETERS" value="-ea" />
+      <option name="PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="singleModule" />
+      </option>
+      <patterns />
+    </configuration>
+    <configuration name="com.crossover.techtrial in cross-library-java_test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="cross-library-java_test" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.crossover.techtrial.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="PACKAGE_NAME" value="com.crossover.techtrial" />
+      <option name="MAIN_CLASS_NAME" />
+      <option name="METHOD_NAME" />
+      <option name="TEST_OBJECT" value="package" />
+      <option name="VM_PARAMETERS" value="-ea" />
+      <option name="PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="singleModule" />
+      </option>
+      <patterns />
+    </configuration>
+    <configuration name="CrossLibraryApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
+      <module name="cross-library-java_main" />
+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.crossover.techtrial.CrossLibraryApplication" />
+    </configuration>
+    <configuration default="true" type="TestNG" factoryName="TestNG">
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="SUITE_NAME" />
+      <option name="PACKAGE_NAME" />
+      <option name="MAIN_CLASS_NAME" />
+      <option name="METHOD_NAME" />
+      <option name="GROUP_NAME" />
+      <option name="TEST_OBJECT" value="CLASS" />
+      <option name="VM_PARAMETERS" value="-ea" />
+      <option name="PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <option name="OUTPUT_DIRECTORY" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="singleModule" />
+      </option>
+      <option name="USE_DEFAULT_REPORTERS" value="false" />
+      <option name="PROPERTIES_FILE" />
+      <properties />
+      <listeners />
+    </configuration>
+    <configuration default="true" type="Remote" factoryName="Remote">
+      <option name="USE_SOCKET_TRANSPORT" value="true" />
+      <option name="SERVER_MODE" value="false" />
+      <option name="SHMEM_ADDRESS" value="javadebug" />
+      <option name="HOST" value="localhost" />
+      <option name="PORT" value="5005" />
+    </configuration>
+    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
+      <module name="" />
+      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
+      <option name="PROGRAM_PARAMETERS" />
+      <predefined_log_file id="idea.log" enabled="true" />
+    </configuration>
+    <list>
+      <item itemvalue="Spring Boot.CrossLibraryApplication" />
+      <item itemvalue="JUnit.com.crossover.techtrial in cross-library-java_test" />
+      <item itemvalue="JUnit.TransactionServiceImplTest" />
+      <item itemvalue="JUnit.TopMemberServiceImplTest.givenValidWhenGetTopMembersFromStartTimeToEndTimeThenException" />
+      <item itemvalue="JUnit.TransactionServiceImplTest.givenFiveBooksIssuedAndNotReturnedWhenIssueBookToMemberThenException" />
+      <item itemvalue="JUnit.MemberControllerTest.givenInvalidTimeRangeWhenGetTopMembersThenBadRequest" />
+    </list>
+    <recent_temporary>
+      <list>
+        <item itemvalue="JUnit.com.crossover.techtrial in cross-library-java_test" />
+        <item itemvalue="JUnit.MemberControllerTest.givenInvalidTimeRangeWhenGetTopMembersThenBadRequest" />
+        <item itemvalue="JUnit.TransactionServiceImplTest.givenFiveBooksIssuedAndNotReturnedWhenIssueBookToMemberThenException" />
+        <item itemvalue="JUnit.TransactionServiceImplTest" />
+        <item itemvalue="JUnit.TopMemberServiceImplTest.givenValidWhenGetTopMembersFromStartTimeToEndTimeThenException" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SvnConfiguration">
+    <configuration />
+  </component>
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="7f479d21-7ce5-4825-8e73-0475fb0e2b9a" name="Default" comment="" />
+      <created>1546948073571</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1546948073571</updated>
+      <workItem from="1546948076914" duration="39582000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TestHistory">
+    <history-entry file="TopMemberServiceImplTest_givenValidWhenGetTopMembersFromStartTimeToEndTimeThenException - 2019.01.08 at 23h 13m 27s.xml">
+      <configuration name="TopMemberServiceImplTest.givenValidWhenGetTopMembersFromStartTimeToEndTimeThenException" configurationId="JUnit" />
+    </history-entry>
+    <history-entry file="com_crossover_techtrial_in_cross-library-java_test - 2019.01.09 at 08h 49m 00s.xml">
+      <configuration name="com.crossover.techtrial in cross-library-java_test" configurationId="JUnit" />
+    </history-entry>
+    <history-entry file="TransactionServiceImplTest - 2019.01.09 at 09h 19m 45s.xml">
+      <configuration name="TransactionServiceImplTest" configurationId="JUnit" />
+    </history-entry>
+    <history-entry file="TransactionServiceImplTest - 2019.01.09 at 09h 21m 58s.xml">
+      <configuration name="TransactionServiceImplTest" configurationId="JUnit" />
+    </history-entry>
+    <history-entry file="com_crossover_techtrial_in_cross-library-java_test - 2019.01.09 at 09h 56m 31s.xml">
+      <configuration name="com.crossover.techtrial in cross-library-java_test" configurationId="JUnit" />
+    </history-entry>
+    <history-entry file="com_crossover_techtrial_in_cross-library-java_test - 2019.01.09 at 09h 58m 52s.xml">
+      <configuration name="com.crossover.techtrial in cross-library-java_test" configurationId="JUnit" />
+    </history-entry>
+    <history-entry file="TransactionServiceImplTest_givenFiveBooksIssuedAndNotReturnedWhenIssueBookToMemberThenException - 2019.01.09 at 09h 59m 15s.xml">
+      <configuration name="TransactionServiceImplTest.givenFiveBooksIssuedAndNotReturnedWhenIssueBookToMemberThenException" configurationId="JUnit" />
+    </history-entry>
+    <history-entry file="MemberControllerTest_givenInvalidTimeRangeWhenGetTopMembersThenBadRequest - 2019.01.09 at 09h 59m 53s.xml">
+      <configuration name="MemberControllerTest.givenInvalidTimeRangeWhenGetTopMembersThenBadRequest" configurationId="JUnit" />
+    </history-entry>
+    <history-entry file="MemberControllerTest_givenInvalidTimeRangeWhenGetTopMembersThenBadRequest - 2019.01.09 at 10h 03m 45s.xml">
+      <configuration name="MemberControllerTest.givenInvalidTimeRangeWhenGetTopMembersThenBadRequest" configurationId="JUnit" />
+    </history-entry>
+    <history-entry file="com_crossover_techtrial_in_cross-library-java_test - 2019.01.09 at 10h 04m 38s.xml">
+      <configuration name="com.crossover.techtrial in cross-library-java_test" configurationId="JUnit" />
+    </history-entry>
+  </component>
+  <component name="TimeTrackingManager">
+    <option name="totallyTimeSpent" value="39582000" />
+  </component>
+  <component name="ToolWindowManager">
+    <frame x="-1920" y="-464" width="1920" height="1057" extended-state="6" />
+    <editor active="true" />
+    <layout>
+      <window_info anchor="right" id="Palette" />
+      <window_info anchor="bottom" id="Event Log" sideWeight="0.50078124" side_tool="true" weight="0.32859176" />
+      <window_info anchor="right" id="Maven Projects" />
+      <window_info anchor="bottom" id="Database Changes" show_stripe_button="false" />
+      <window_info id="Capture Tool" />
+      <window_info id="Designer" />
+      <window_info anchor="bottom" id="Docker" show_stripe_button="false" />
+      <window_info anchor="bottom" id="Build" sideWeight="0.49921876" weight="0.32859176" />
+      <window_info anchor="right" id="Database" />
+      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
+      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
+      <window_info id="UI Designer" />
+      <window_info anchor="bottom" id="Debug" order="3" weight="0.39979655" />
+      <window_info anchor="bottom" id="TODO" order="6" />
+      <window_info anchor="bottom" id="Messages" weight="0.32960325" />
+      <window_info anchor="right" id="Palette&#9;" />
+      <window_info id="Image Layers" />
+      <window_info anchor="bottom" id="Java Enterprise" />
+      <window_info anchor="right" id="Quick Notes" />
+      <window_info anchor="right" id="Capture Analysis" />
+      <window_info anchor="right" id="TCPMON" />
+      <window_info anchor="bottom" id="Run" order="2" weight="0.32960325" />
+      <window_info anchor="bottom" id="Version Control" />
+      <window_info anchor="right" id="Coverage" side_tool="true" visible="true" weight="0.18802084" />
+      <window_info anchor="bottom" id="Spring" />
+      <window_info anchor="bottom" id="Terminal" />
+      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.16666667" />
+      <window_info anchor="right" id="Bean Validation" />
+      <window_info id="Web" side_tool="true" />
+      <window_info anchor="bottom" id="SonarLint" />
+      <window_info anchor="bottom" id="Find" order="1" weight="0.32960325" />
+      <window_info anchor="right" id="Gradle" />
+      <window_info anchor="right" id="Theme Preview" />
+      <window_info id="Favorites" side_tool="true" />
+      <window_info anchor="right" id="Commander" order="0" weight="0.4" />
+      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
+      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
+      <window_info anchor="bottom" id="Message" order="0" />
+      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
+    </layout>
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="1" />
+  </component>
+  <component name="VcsContentAnnotationSettings">
+    <option name="myLimit" value="2678400000" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <option name="time" value="5" />
+    </breakpoint-manager>
+  </component>
+  <component name="editorHistoryManager">
+    <entry file="file://$PROJECT_DIR$/Readme.md">
+      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
+        <state split_layout="SECOND">
+          <first_editor />
+          <second_editor />
+        </state>
+      </provider>
+    </entry>
+    <entry file="jar:///Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/src.zip!/java/util/Collections.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="199">
+          <caret line="4179" column="34" selection-start-line="4179" selection-start-column="34" selection-end-line="4179" selection-end-column="34" />
+          <folding>
+            <element signature="e#167000#167001#0" expanded="true" />
+            <element signature="e#167065#167066#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/UserAlreadyExistsException.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="60">
+          <caret line="4" column="51" selection-start-line="4" selection-start-column="51" selection-end-line="4" selection-end-column="51" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/BookNotFoundException.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="30">
+          <caret line="2" column="13" selection-start-line="2" selection-start-column="13" selection-end-line="2" selection-end-column="13" />
+          <folding>
+            <element signature="e#143#144#0" expanded="true" />
+            <element signature="e#180#181#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="60">
+          <caret line="4" column="76" lean-forward="true" selection-start-line="4" selection-start-column="4" selection-end-line="4" selection-end-column="76" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/5.0.6.RELEASE/80d2ad911e4381ea99237aa00332271f132b2eb3/spring-web-5.0.6.RELEASE-sources.jar!/org/springframework/http/HttpStatus.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="-682">
+          <caret line="190" column="4" selection-start-line="190" selection-start-column="4" selection-end-line="190" selection-end-column="4" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/TransactionNotFoundException.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="60">
+          <caret line="4" column="79" selection-start-line="4" selection-start-column="79" selection-end-line="4" selection-end-column="79" />
+          <folding>
+            <element signature="e#157#158#0" expanded="true" />
+            <element signature="e#179#180#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyReturnedException.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="30">
+          <caret line="2" column="13" selection-start-line="2" selection-start-column="13" selection-end-line="2" selection-end-column="13" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-test/5.0.6.RELEASE/14f837d78a638a79f51f1cd9dd8ff80733153530/spring-test-5.0.6.RELEASE-sources.jar!/org/springframework/test/context/junit4/statements/RunBeforeTestExecutionCallbacks.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="484">
+          <caret line="72" selection-start-line="72" selection-end-line="72" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/5.0.6.RELEASE/80d2ad911e4381ea99237aa00332271f132b2eb3/spring-web-5.0.6.RELEASE-sources.jar!/org/springframework/web/client/RestTemplate.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="999">
+          <caret line="731" selection-start-line="731" selection-end-line="731" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-test/2.0.2.RELEASE/52069c628c3bcb16473d528fbf24f76e9c0b902e/spring-boot-test-2.0.2.RELEASE-sources.jar!/org/springframework/boot/test/web/client/TestRestTemplate.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="129">
+          <caret line="814" selection-start-line="814" selection-end-line="814" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/db/changelog/db.changelog-2.0.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="30">
+          <caret line="2" column="24" lean-forward="true" selection-start-line="2" selection-start-column="24" selection-end-line="2" selection-end-column="24" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/db/changelog/db.changelog-1.0.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="315">
+          <caret line="21" column="21" lean-forward="true" selection-start-line="21" selection-start-column="21" selection-end-line="22" selection-end-column="30" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/db/changelog/db.changelog-master.xml">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="75">
+          <caret line="5" column="46" selection-start-line="5" selection-start-column="46" selection-end-line="5" selection-end-column="46" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/query/TopMembersSQLQuery.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="210">
+          <caret line="14" column="38" selection-start-line="14" selection-start-column="38" selection-end-line="14" selection-end-column="38" />
+          <folding>
+            <element signature="imports" expanded="true" />
+            <element signature="e#108#109#0" expanded="true" />
+            <element signature="e#151#152#0" expanded="true" />
+            <element signature="e#380#381#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/InvalidTimeRangeException.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="60">
+          <caret line="4" column="81" lean-forward="true" selection-start-line="4" selection-start-column="4" selection-end-line="4" selection-end-column="81" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/resources/application.properties">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/CrossLibraryApplication.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="180">
+          <caret line="15" lean-forward="true" selection-start-line="15" selection-end-line="15" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="60">
+          <caret line="4" column="80" lean-forward="true" selection-start-line="4" selection-start-column="4" selection-end-line="4" selection-end-column="80" />
+          <folding>
+            <element signature="e#155#156#0" expanded="true" />
+            <element signature="e#175#176#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="165">
+          <caret line="14" column="7" selection-start-line="14" selection-start-column="7" selection-end-line="14" selection-end-column="7" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/javax.validation/validation-api/2.0.1.Final/4b714a5167580122e46ead3317ffcdcdbd67c5f0/validation-api-2.0.1.Final-sources.jar!/javax/validation/ConstraintViolationException.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="180">
+          <caret line="19" column="13" selection-start-line="19" selection-start-column="13" selection-end-line="19" selection-end-column="13" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/BookController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="484">
+          <caret line="56" column="87" lean-forward="true" selection-start-line="56" selection-start-column="12" selection-end-line="56" selection-end-column="87" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/factory/TransactionFactory.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="330">
+          <caret line="24" column="14" selection-start-line="24" selection-start-column="14" selection-end-line="24" selection-end-column="14" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/MemberController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="756">
+          <caret line="93" column="79" selection-start-line="93" selection-start-column="79" selection-end-line="93" selection-end-column="79" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/repositories/BookRepository.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="150">
+          <caret line="14" column="17" selection-start-line="14" selection-start-column="17" selection-end-line="14" selection-end-column="17" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/repositories/MemberRepository.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="225">
+          <caret line="21" column="27" selection-start-line="21" selection-start-column="27" selection-end-line="21" selection-end-column="27" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/repositories/TransactionRepository.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="225">
+          <caret line="22" column="4" selection-start-line="22" selection-start-column="4" selection-end-line="22" selection-end-column="4" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/BookServiceImpl.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="195">
+          <caret line="21" column="17" selection-start-line="21" selection-start-column="17" selection-end-line="21" selection-end-column="17" />
+          <folding>
+            <element signature="e#615#616#0" expanded="true" />
+            <element signature="e#667#668#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/MemberService.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="240">
+          <caret line="19" column="27" selection-start-line="19" selection-start-column="27" selection-end-line="19" selection-end-column="27" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/MemberServiceImpl.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="420">
+          <caret line="37" column="34" selection-start-line="37" selection-start-column="34" selection-end-line="37" selection-end-column="34" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TopMemberService.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="120">
+          <caret line="8" column="23" selection-start-line="8" selection-start-column="23" selection-end-line="8" selection-end-column="23" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TopMemberServiceImpl.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="465">
+          <caret line="33" column="25" lean-forward="true" selection-start-line="33" selection-start-column="25" selection-end-line="33" selection-end-column="25" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/util/HttpEntityHelper.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="120">
+          <caret line="8" column="4" selection-start-line="8" selection-start-column="4" selection-end-line="8" selection-end-column="4" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/TopMemberServiceImplTest.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="825">
+          <caret line="55" column="44" selection-start-line="55" selection-start-column="44" selection-end-line="55" selection-end-column="44" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/MemberServiceImplTest.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="636">
+          <caret line="92" lean-forward="true" selection-start-line="92" selection-end-line="92" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/BookServiceImplTest.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="-279">
+          <caret line="31" column="42" selection-start-line="31" selection-start-column="42" selection-end-line="31" selection-end-column="42" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/factory/TransactionFactoryTest.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="615">
+          <caret line="41" column="5" lean-forward="true" selection-start-line="41" selection-start-column="5" selection-end-line="41" selection-end-column="5" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/MemberControllerTest.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="2130">
+          <caret line="144" column="97" selection-start-line="144" selection-start-column="97" selection-end-line="144" selection-end-column="97" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/BookControllerTest.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="705">
+          <caret line="47" column="38" lean-forward="true" selection-start-line="43" selection-start-column="4" selection-end-line="47" selection-end-column="38" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/BookService.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="240">
+          <caret line="19" column="9" selection-start-line="19" selection-start-column="9" selection-end-line="19" selection-end-column="9" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Transaction.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="795">
+          <caret line="82" column="38" selection-start-line="82" selection-start-column="38" selection-end-line="82" selection-end-column="38" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/MembershipStatus.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="105">
+          <caret line="9" column="12" selection-start-line="9" selection-start-column="12" selection-end-line="9" selection-end-column="12" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Member.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="928">
+          <caret line="94" column="26" selection-start-line="94" selection-start-column="26" selection-end-line="94" selection-end-column="26" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/model/Book.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="225">
+          <caret line="23" column="71" lean-forward="true" selection-start-line="23" selection-start-column="4" selection-end-line="23" selection-end-column="71" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/dto/TopMemberDTO.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="150">
+          <caret line="12" column="71" selection-start-line="12" selection-start-column="71" selection-end-line="12" selection-end-column="71" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/dto/TransactionDTO.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="300">
+          <caret line="20" column="31" selection-start-line="20" selection-start-column="31" selection-end-line="20" selection-end-column="31" />
+          <folding>
+            <element signature="e#475#476#0" expanded="true" />
+            <element signature="e#623#624#0" expanded="true" />
+            <element signature="e#652#653#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/controller/TransactionControllerTest.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="681">
+          <caret line="62" column="106" selection-start-line="62" selection-start-column="106" selection-end-line="62" selection-end-column="106" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TransactionServiceImpl.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="256">
+          <caret line="38" column="29" selection-start-line="38" selection-start-column="29" selection-end-line="38" selection-end-column="29" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/service/TransactionService.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="135">
+          <caret line="9" column="25" lean-forward="true" selection-start-line="9" selection-start-column="25" selection-end-line="9" selection-end-column="25" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/test/java/com/crossover/techtrial/service/TransactionServiceImplTest.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="2790">
+          <caret line="186" column="35" selection-start-line="186" selection-start-column="35" selection-end-line="186" selection-end-column="35" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/crossover/techtrial/controller/TransactionController.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="300">
+          <caret line="37" column="7" selection-start-line="37" selection-start-column="7" selection-end-line="37" selection-end-column="7" />
+        </state>
+      </provider>
+    </entry>
+  </component>
+  <component name="masterDetails">
+    <states>
+      <state key="GlobalLibrariesConfigurable.UI">
+        <settings>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="JdkListConfigurable.UI">
+        <settings>
+          <last-edited>1.8</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="ProjectJDKs.UI">
+        <settings>
+          <last-edited>1.6</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.19541779" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="ProjectLibrariesConfigurable.UI">
+        <settings>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="ScopeChooserConfigurable.UI">
+        <settings>
+          <last-edited>Unnamed</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+          <order>
+            <scope name="Unnamed" />
+          </order>
+        </settings>
+      </state>
+    </states>
+  </component>
+</project>
\ No newline at end of file
diff --git a/out/production/classes/META-INF/cross-library-java_main.kotlin_module b/out/production/classes/META-INF/cross-library-java_main.kotlin_module
new file mode 100644
index 0000000000000000000000000000000000000000..e0dc0c303bf7a525c885d53ff381003d25f6a149
GIT binary patch
literal 16
RcmZQzU|?ooU|@t|ZU6vK01*HH

literal 0
HcmV?d00001

diff --git a/out/production/classes/application.properties b/out/production/classes/application.properties
new file mode 100644
index 0000000..bddee0f
--- /dev/null
+++ b/out/production/classes/application.properties
@@ -0,0 +1,14 @@
+#Database connection Parameters
+spring.datasource.url: jdbc:mysql://localhost:3306/crosslibrary?createDatabaseIfNotExist=true&useSSL=false
+spring.datasource.username=root
+spring.datasource.password=
+spring.datasource.driver-class-name=com.mysql.jdbc.Driver
+
+spring.jpa.hibernate.ddl-auto=none
+
+spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
+spring.data.rest.base-path=/api
+
+logging.level.root=INFO
+logging.level.org.hibernate.SQL=INFO
+logging.level.org.springframework=INFO
diff --git a/out/production/classes/com/crossover/techtrial/CrossLibraryApplication.class b/out/production/classes/com/crossover/techtrial/CrossLibraryApplication.class
new file mode 100644
index 0000000000000000000000000000000000000000..ca8c98187c731817fc365653582fe48a220a8fa7
GIT binary patch
literal 741
zcmb7CO;6iE5Pcg04kmmwP+BM#ZXpL&NL4REND!$f3#6tB2Tp5uF&pgNXuSsdvp9h`
z@B{c!h*^V#58;3hGnzMF@6Gz@`QZ`3Pi%!~VlBYe5bO9B;5)<IzS7DaFwAs!Mhwk?
z`6n5cBc<hWna9%p6>&yLCo+l1M#3r|zkyA6p$dk*C^0!ttSJg}B`tR{xo}jN@qx!8
z6<cBdA5JEjN`zBJ_i0fslxA4(o<(DEC3q%u%7@gY(|$!n*px=EPDwL_LsQyB{#KsZ
z)(1;={al8PKc#jmmm^guVt%N#aTN)geh?X(@?zq*o?DU2Yhy2YY>eZgbS5$ST&1Oz
zd{~tnQKGJ*jakew@K34_u+hdQelV=OOFxOnGI0#O4;j63sO_gWvnAay?$%B?$V5@}
zr(A7ks#cQd<c;HlH>v({Ybyx$={~m6pkK#-4KOd8Y(Nnw&&bdA?!a!Vbc?J{0}GfZ
z+kP!TNHGX$W04Tw{Hq!Uv^tI6J!Ved`$Nir>H;j)X0#|;CcJ@_%6>tIyx+A7ya4LV
B#!LVJ

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/controller/BookController.class b/out/production/classes/com/crossover/techtrial/controller/BookController.class
new file mode 100644
index 0000000000000000000000000000000000000000..abdfb738738970674b27cf99c26ebda27e923118
GIT binary patch
literal 2774
zcmb_e{ZkuN6g@AbEQBRssUKA<wO{hRt))O4iUNgx7y=TCI{x5nHm_kz*p0g{AmjKy
zsiW4`8U5Wq%JID2kOU_g7e|=v?tA;*z31L@?|J*@U$1@#FpJMK7{q)(Oe_rGF79QJ
z!=iq=uP;jmJ~HreKbEnQfq~Tw`tZQOnt^qJfs*g<7iDnhI#OUd@AwCn6Zm21AIiW|
z(%DmiYger>USh4ZmgfX|7hTU)O9D5?&a`uUS0KIWm+5jS?|QOOKPbsy$1YVlb3X4o
zc6HaLUyd7-X|?Bu0=K)maePk&ezi)}8slnnNSJ*Usq`cbOpcA`{h(rnwZQc%&jR~E
z9{It(wWn0g+LmF>_d>bmDOVkHV}H@Dc($qsgykgPxtM=$AKF%3xm7FghH9}Z>I3GW
z8UfBN@n7KLcAd@-<gOdKjDFekd}S+_s03y^B0rKPtK@oR%Wkf<9!j-g*J_NACet-r
z?J*Y1uDO<`n+XZ+L#Z<&u-TotHgIQ2S~~V|ElJP<_5as@!c+^~Nu10rKWxk9mD2=m
z*}8<33{EkX-1xTqx-LUjXIa<V01I{7Ez6bT$7O-sSX@U{+pAc4pJbke2Em%W*OdeL
zjU#JOT}9Pb@YT9s_sVN0(*)D2dDJ+D{|Q52u&8WjpEVY>ClyA({_kiLlQz<<Ve4Cs
zZrUw>Coq?sN_N7Du;|Y4$en=EFeQ*F`t`t(>#o+JkrjGq>Bx-kX@P~r&Zs7;wLNEI
z7!OTkF=XJ8iN|<i;1d&hY?vru)5I1&rTK0G{BMLY4V`pNtAo~V%HoN-kvdfmn@k(n
zHc`ZmiKp1rAU_kh)eS{gm1UJgnitjTX6d<flt9mz7W&C<#yXrStU9*9a<$51fO>mc
zM#<O*onq{u-2y2sZui@3GDdZ#9!hJS6nK(Qqq+s!CZyEfXB6wW!ROlHH5xpTjjLVL
z@QCMFOfVI{u(|Wq`sUNZ1A*%u%QnhfYYP*cVfr^@7}^!aec^<Hh}9y$1fm0lM@9nw
zxi-~kY;Bv_*$ez5eZJ?$ckw<yT?Y9nL)LVE@F~sbVZ6rcd5+dOpW;0;@d9FE@@J%e
z;3$O=UbE=o^%8fyhklIW0!MGetMNLY^j{{jDroIZyv6m}<~&D&_rZyuka~$8fnSmS
zo)fXz-st6x$ebB3Y?!+kt$7>o@Sf$Hclo>YB}7O7f&eZPigvI<OB!@mJD7ZlbE!@q
zX4(K}n}D-S$rW0QeO+z(y4L3FI&B*|h8uifXJD-1_!#G+oQyUc_r{Jlena0EKcau?
z7i6YhVBimKV)%@~;PO@~=Q*=L67ELGF7w?GsTjvZ6wPQ8<0vLEMH|z!!fX``%rx*?
gO}wq#+=Rw!YP`4j`!K|9+MDHE3U{LQI^%P|-;<ssBme*a

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/controller/MemberController.class b/out/production/classes/com/crossover/techtrial/controller/MemberController.class
new file mode 100644
index 0000000000000000000000000000000000000000..4928b582a354d36f3f82976aa969cebff0a4b2b3
GIT binary patch
literal 5611
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
I@f7_30Db(UcmMzZ

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/controller/TransactionController.class b/out/production/classes/com/crossover/techtrial/controller/TransactionController.class
new file mode 100644
index 0000000000000000000000000000000000000000..85e38399ef00749b54373855faa922ceb1c05765
GIT binary patch
literal 3313
zcmcInZFdtz6n-WxU6O`Upj1KB0<EMkunLs7K#{&lF>SC7#fplX&5$fjcjE2@<aqq%
z@%N}lMD!f}?vL{L%r<S7HaVu8<A=@e-krJkdG5XQ%;fKXe*Y7|MU+!Gg6l~f#*GxF
zaI+U5;#M!FF=JuY!kmTqBtF9J6c%tNh5h*0Le5wgQ%K{E8NOs8Z{e<mPb@489M*y3
zhmNZ~<*&%#iRVgzi#b<q*lwW0P(6`>t)*Mhf#+21aC3-V*flFF&~x4MJv}9GIrBOW
zMpp&8XH<y*4(2>xF4Z@RGAKC3DlLa|%5|!%4pH#EVeHlwFBG`eHkzw^9jI!R9Ab!P
zwygwx$P2@|oK|YRpcbWxC~&_${*qR4SF?qDb~LAgvK`g}&o4g;oDKO@1?zT2>zchR
z!<zC#Ip=FnKVvjODkpM}ohOc6b^NluT<4b!Iroh#Yo-Jo(w>dn8Wq|G?~>B<s_vKK
zllx-jBsPJGwz+A+MBu=RcHH$vrxs<{!V3FGAi3g|eMi>=qW}K?$<6h)I5*f4)p*Xc
zQ_Rw_M&?$%&|^c~@_nTplR@^wWXpm)l|{Sg`6b)g9&6uKp(fcHD@UK*HAhzj`faD?
z*|9_loO(6dUB{GJ%iuM`F3Yd$GSt(mWP0LgAemY}YQg5R63Av^jgnJ@xR*{l5F@Zq
zBCDOw1S+o|V6Wx6)Okr9?N*vK$?PnK{cVicS+De+y_r6NJ;kVONr|bu&uR+9*A5*E
zq*hctaOJ#b1n797S(~PSoHI*V;7Z5zs0g|_J)6cL3TX`BsD*oJtYXc=XKB2R2Nph0
z;|qK#aHE|V@6dx=)j&F>XA4HpnxY^u)xrFNQj3oN%=BQm%fY2q`ev4s*$pVITPjEG
z(DiUzjx0P(<108+ku-{M4OeFMN(XRS%3B%|P8v2I3Eb?!NvvSIq_Q&)21X;R%h4Kr
zC9iFX{MW9-#n{{d^2Nu})$FgPY3HUO(3LTp<C#`<XtB=-B-FY<uhEz3x>qfkJuSW9
z`!blRI$<cOk(V<ai^*`z4_C|icByZFHV|0b<F3&z#_r8P;6jIKiSyv1FETq^TyYKD
zti_&W_H^6ew|M~AToK$r=kv?c3$wFxO9CS;wIV8Ga|-jEDoed6!_X;HeFj*rW`nHo
zFc$4t`AkR7c2A923Y9=THHWIK>9OQezVL89e{X4aM{XJ$Q0IlgNgh*=@Yu?BGy=z`
zE<O+94gS8#w|UwVyr;%qK#Yw)N8%^GC2)+teH;tCi*5`dNl(Z5Hn=$&Z{Y;rI4|<b
zGZp3X9gZ|UpJQJ%bMiNIjs1ee_)Byr@DlqH_;K+M>|gsC$%$W)ns|ZUzZ!-EH1tJ=
zXsQ9-Ls#Z*MfYKzox37fgLDs!@yj@aPhc2lF@kduyfH!;KtDkb5$H(tbTWcGxea*|
zr*N8phv_AS1W#8ZJc+-DGki}VgHhi5_<fAm_ydTLG0xIv8J6exASi$DH@N=L;5yvo
zday0m2#BH7PcP<vs6lBn(^qM^M)=u?$`HRbseo{|az2a?aGod(fgT7$paK5EHu#I%
o;3p&SX#@Teugf8>(DPN!O)#1vOCO90e99}u=V|_{x!;rg7uLD$SpWb4

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/dto/TopMemberDTO.class b/out/production/classes/com/crossover/techtrial/dto/TopMemberDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..4949bd88dbab7f53cc585f0e41788b6fb97441bf
GIT binary patch
literal 1526
zcma)**-qO)6o&sv?1TiDJrwA^&?aVap>WX+iKUf5DO^Bv?}Sk>B%aE4xM*+sNUhX}
zsuz8LzD1v-Qq^-N222_%WO?Sy%vrwqef;y!_a6Y3u$)I0vpHli$HP1i4i8VVSjb{A
zi>CrZp$t5?QISFDDgWK(hJe@-xVEnRFmnB<;x<~+JXsCD{rdg!NT9DNn^hTX?o(*_
z&^>mYhU?dzvhwRM1PtG8N`aBY$!-*Q`plF~*J}vms!AQLtCk-Lj3yj6{YchjKv^;`
zJ>QE~1h$Hab6p~_juZcP=QL-jLTu}5pV$V=o-emse2G1`+R(JBMhdv31FhptBRcRx
z0lQpNO{W&9FjU7fa3WbdpbNPTXFpQTo_haQ%dxSyL)`s!8Fkhy&q%S9V2cIn50fsV
z|J;v3vy^6A>o|5H#hH>>O44yCBooBvoT86Xyza=|N6xWn(eB#0_=OAEPo)yDC?erD
zo~&`|#YOVFsuk4a8;?aCPHHjFjbWjHB@06swlKoO00u3LVoacTRZ*$Q&U<X9dMInu
zG-G<pQ_ik#UGGEZGp38B3hq&RXF&qM#1wMKlig2$LkbqXM4)YA(lcS{nV@LSk#7Ox
zG+w9GC-OIGp0ZCM?AbO__FNljd!`M;o;2Dpzv$Qr_MxhvSc9T-6g_|my67Z5Q}pt`
zs58;(2CdkiNrbkTC8aH<No$LF3_8DwTQQA8Gy9wNR~VnkNKpw;S>Bx1MXZiPTtwhD
z?$8cjWre)CL`K7(W9Rj5iQsIVVZ7sYhM9>m1@4ltom@$fR5!?6Pmud~&<iBh4YEKW
zi<f|~O02-co*?ONkma5r)4f5`-5}2h<oP8a{E-;s5gyaX>LwL2yFp&{1Sz5v2VeL!
VW;e(xfvjBu!ac$uHX)=i^A{L-2s;1(

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/dto/TransactionDTO.class b/out/production/classes/com/crossover/techtrial/dto/TransactionDTO.class
new file mode 100644
index 0000000000000000000000000000000000000000..ae3708ae0b7c03abf38556a5b5245d3d9c1464b3
GIT binary patch
literal 1049
zcmb7?&2G~`6ot>kNnD47l(ZBmKW#~ol2G9V>_A1(3aQA@MMET(jx$Q#CLYP2bOA2~
z5>*ik9)P#tIgk)%Y|}sp5-dEw_n!ORGyd}Z(`Nt=aHoP2)*KYEZiWpTw{0|SYzizU
zG7kMwPsT~8qE~yn0^+$qZAV3k_9NZ%M-y2(dy;(o`t9wpz`|IL`!e1eFx5NqPkeXe
zM?=?B(eR-_xv$i*xhp>kqfl=PSgm$Xptz$3QlRdIk$gEZ0$sm9;z`3(0jv9D;66Vr
z>ccP**zy83c7s?Yi8_(7t7UMg4XiuR%I(H}l=y)r^=@~cwVSP3p4q)2xiFOa#d!;j
zR(m#xA<3^H+keQm|BuUI#izL~4yAvtD+g*42l82Hd|3LuoqNXFD(YCQqKaA-7f}=F
z{JS4~o$2H3_m5<t1(wsJP`L-`n}=_V=h)yMQ39U~7FJ<nfoq4qO#u~tte&n3z`4vj
zLUFvr-F?o2bE$I%@jeY}a5QOPVv*EK=_(DvGA?sx1Xgl^*Nn7yRyP8jyQe60woYM9
zr5Y3g>lIngK_eA3lIvMoE=hru)0C+jt0*gQ1y}PjF6WH%0}AgLRG?JW49GH%@fxkj
zntaS?(~q6;P1CbBSLxmLRAMCyJ7=<UCc*o8B-T{Q*b1!8CAl%5#Oh4bGm<7rHvd9m
MJTV^JOq;*;1K$?CEC2ui

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.class b/out/production/classes/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.class
new file mode 100644
index 0000000000000000000000000000000000000000..566cfc97002c442bf21bc09d4492d1026a734bb4
GIT binary patch
literal 513
zcmbtROHaZ;5dIdBVg(;XJa`dr;K5$><SV>Ph>avvn|LBi*}!7yns!U{XL&O5;1BRe
z8K?L<7*A%BnVoOG$$UHW`u6++-~d|&HVUvz<WM%S$xv?gdKZI+)9*CeH-oP0UU%9I
zmNVsZZU;OZ+pdmeI6h)1wNw~u9%_#ViD1Yd%TVf5hHS0wG2~imMCh6$LvfkRh9bJ+
z!+;RWQ9chm9?3NS1ao>KV}>)wS2Np>R2-|hh-@wV3C-hyE$)4BrzMTFn@Zg_f=KYu
zLpP2SG3tEPNR{cTB=W_%Oh@hfP2Ep_#BlPjdFj4LOqGAAsmg_%A_}N5Z2#=6pM+Y@
z#J5g{O6~Vb>mGJNi=)d>H<pm6Xi%0RV`K#^lQ#)DTp)n4XJwv{eO!=M$eUCE5%WYX
T(yK@fL_-Oy6zLq~GgyBI+LVUi

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/exceptions/BookAlreadyReturnedException.class b/out/production/classes/com/crossover/techtrial/exceptions/BookAlreadyReturnedException.class
new file mode 100644
index 0000000000000000000000000000000000000000..039fcea4e6d513af42f02449dd80b9b7e996fd1d
GIT binary patch
literal 523
zcmbtRJx>Bb5Pb^>h~UR57FN)Kh1Y1M(eP#C1(E|Vu_DW{fz@Nz?ClZ#Sym<%{s4cJ
zaX{3<#KufAv-9Rn=IzYe`^zhUW9;X!lZR742D>@zF_fFV-qo<-`JG1lX6SbY*M7It
zW^lY)KId-4)x_;vBh}=Tq14hUwp`hOM~Ps_o=GL`IYYWu4;V5nJtlO^lS*`x*+`fH
zA4P;Xo(_2wa3dG_3e4E4j2RkUsAq0ybR6rsFs>Ehl;-is6%V1fw~|J>O|9=5kr90S
z=nI<|CB~hvD(Ncpbz(wsDHp@4f02(Czhb!f=gh_4NK%D=YO0u(s3P(xGaUTv&QFw;
zGx4pKI%~gITMtkLEs$<R-B?4GVve#D86(SMoqU0ilO+P=4xQ99(oaj$2KfRNK*TIj
Ui}Wf|1JO{zCPg|6`4qN401;@4_5c6?

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/exceptions/BookNotFoundException.class b/out/production/classes/com/crossover/techtrial/exceptions/BookNotFoundException.class
new file mode 100644
index 0000000000000000000000000000000000000000..eb5ee3ca8ce9a056a3bb75330ecaa7d2154b3343
GIT binary patch
literal 488
zcmbVJO;5r=5Pb_sYX#IQ9z5X<JlKmSMvVthE;el<*ehAe3ae$;v|Hle@?_${AK;HN
zPKh4}J()>ncHX|pn|=HC{_+ao5IYt&ZMY69*s`$A(CCKY)hGyuqkec3Trjx)9ba%S
z;cDs)Oe)p%l%d|!Dl=S}h$p#VsGdnB%{fE4-H8|~Jv||G-Iq!P`Ft$WAs;7%xW0~g
z67f_P{U=y4Gnp}*__3aQajLUSFGT7Y5zk1EC!TnW#e<O~>2<Zf547p)Tum;&U|Pr-
z=sb-@UluC6f3gmWcQ73PSEcZV)LTlM)@`9*gN-Js{rGd8D<kLPdohM)`?r0a2zwxt
z=mTgPE2vVns4G!03LC4G9YT(l2w?5IrDv3%mZUYx4qbqVRif7DRHFf+p^gSsvYv7Y
F8y`E}eO&+m

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/exceptions/InvalidTimeRangeException.class b/out/production/classes/com/crossover/techtrial/exceptions/InvalidTimeRangeException.class
new file mode 100644
index 0000000000000000000000000000000000000000..99dfd791e054a32b054b79bbcd59f3e0bd0d757a
GIT binary patch
literal 515
zcmbtRO-}+b5Pbz?aRonCG0}s;8+vdrdXkV3M6=1t0mxoSDGk&tt=a7o|CT2c5B>mu
zlyR1z9*if`WTx}xP3Lvy{p0lwz$FeH>{Z~oC}H2h0fQIxqfQvyj7PzJZ#?Mq?|KA=
z4}8h}nCqE8w29KQYld3a=+ts;BOYgxq1;kh*)~J5c@{C0x@Jn~PN=l(XN!qUMtl+z
z;)O==IO2)Q<26{abCoi*Ltz%aNKBfVrA&M)#hm)_*q2X2K3YXB{Xj2ytfnKikONXA
zdtWIM<ql1j2zjgWPA7jdFY^B|wEokL;b{GS!;+Lnl51&*xk;t2qJlcZ@z2->na)|?
zS{dri-%~w{a0;3o?S`tcfiiiAq5>U8r-DtgE+JPd1aQv1!V8MeE7BHOml7ainW$B|
RRjGhzs9~EtZG>zAyPxY-hfe?i

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.class b/out/production/classes/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.class
new file mode 100644
index 0000000000000000000000000000000000000000..e14a360050d0e25aa14b4755df3ad00f7589e312
GIT binary patch
literal 520
zcmbtRO;5r=5Pb_s5y6l8aqv`c;K5$>q#+7oLM$|~*u)cA$_7^3u4%VKf0ic`5B>mu
zlyOS@IGA`blg#YAd6RiN^Y;Go3g8es1~w`%t0-a9z!t;y&~-=sv%$@%?YfuVsONdt
z-E#)hx#e?ihdiFzo=#*uJ!YtPRGexaYoCXiU?`u+Sn3u-vC;GyN*y&Jbj^{m7-Z2{
zBtt$92{9cN@X+Up%=1sMq-Qc^ICTOQ*+HVxRLw<VYZ1(79uIBt5Quv%X{0?=s?X!c
zwo-R#FHJKs>3$VSR@GBk5{L_#&$9mD9^`*wX#H<uzBHw*hy+>VT#+Rgl4_`6n_>57
zaaUQaWhB0}QfK4$UYkDlK-;4OQ8$)Qrf5)BAY)_|ER(Mia<o7IW8W-1qxiHSt&p!$
Y0YoelwMMTRH4qJTtWu<#kS}2U140yu-T(jq

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/exceptions/TransactionNotFoundException.class b/out/production/classes/com/crossover/techtrial/exceptions/TransactionNotFoundException.class
new file mode 100644
index 0000000000000000000000000000000000000000..66545eaf7abe9b77adf0cac220c2e6d2e7788276
GIT binary patch
literal 523
zcmbtRO;5r=5Pb_sv4S5}Ja~c|c(4~eX*3N=V$zfZYOiD|E37HIrri?%mM0Sr{s4cJ
zaY|GUCSJ@WGdpkIWZuraf4sf{IK`oby&4=F73^C$U}%OzFBo~f@OBW4gF!g%5AK3%
z2FHKkOYSCI&D@bmrJ9{HG<sTPhAR{CBo_?T3#p{JWGHvK5ksY?r-bhKQi&j6Ohg*;
zNkWL@>zF4IPi2vRffX~C8H4A?df~>Y&N96escS?$r+GYa#ZxREjiixom~xfzxJUwR
z`Z`zBo9`;=vPU{kW6_tzu=Zc%lj2tlSO1(@>}@TnrL<|?7ozH@p~-Nx-rX=)MlQsU
zTI%flUTrr*8?->W5p`n&Rf-m6B{D`<!zOu~kh2v6SjSH31?A@zX^Xr~1rV`H)H=QD
Q)Ic;euuYN9LcWCEPrr$ahX4Qo

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/exceptions/UserAlreadyExistsException.class b/out/production/classes/com/crossover/techtrial/exceptions/UserAlreadyExistsException.class
new file mode 100644
index 0000000000000000000000000000000000000000..8d25cceeccbe8fb42ecbb36ce7996abf2ea5ad3f
GIT binary patch
literal 518
zcmbtRO;5r=5Pb_sv4S5(jPWAgz=OT$$*&NsiAm#uLZc_LlntyYt=ZiY{8^q%Jop3r
zQN{tk4#tz2WM=2ho6Osp*SF^v0EgJJuu+0zqkyV~O@?YO@H+jL-|<=(w|(#CD(D6b
zj(^9e+>LoMas#7eGCF3cw9`Zzo|urwnP4cM$V8emhJ2$LG8EeBkkB<>CgM7q420_P
zK}?9_rxA}suH-!b1Pf*?HN&|dr4u(&sn+RKDA$N+O!Ii`idiJ?jiixoPYczGmEgk%
zZzi?T-dBxO*+H7ANL<SKsNKJ*2lF2>oc?Pb!*-W+*E3R7=O2>lVxg&w5^4-PKa1;R
ziIEfWEta9y_`TO=h&|Bu=seVoB@`)Il;y}6SqaPJZ9<L~2w?3yxhLcw7o-*PHWfg`
WB2mlqDpLc|P{Arix(WFl*53grH;I4%

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/factory/TransactionFactory.class b/out/production/classes/com/crossover/techtrial/factory/TransactionFactory.class
new file mode 100644
index 0000000000000000000000000000000000000000..dd53395cda1c7f8e115aba2d214082928cdffe33
GIT binary patch
literal 1681
zcmb_cT~E_s6n<W4DeKCo0!~1gAZ%<<1w>`2Q3#P_%7uhP@48Z;(6veX4#KrJ{v1D&
zK_u}9_@j*HZObT-Woq0--;X`#InOzLPJjOT{sX`QUZjx5q>3&~smLL((s5crL4_=C
zWE90?M#U_2v3sE4p}<Tjm}5wLHGka=xZ#=>!$R5gs=DcWLEs%)zRoRkkNdXa=sSkV
zJ^xtW^bI$lz3sVc(N&2^b}fEEvY5;N8;!K$ZIg(evh7-LYt@S7ZyFVcZaS82*XGX|
z+H?6WhW@f=8qStM!szc9Bk?^uU>K{^Y-c;E((_+=-oZ<E`;8?i8IE#I<yA?5qYHeg
z1tuaZHLo<HN(iAoNflydm}tQr=BKKwvEa!T_*e_Wr~g=4dEYoRbZ%EIeZ}$2gTE|Q
zHboFa-!&ex3%@WCL!m`=ms{AmY&x+S)OX}v(^|8IMTQcv*qF1T0u9~h(Qp$33g$H$
zmq!|I;SNK-nbWVmI1P(<tl<fsDp=A`!m@^EAUDo6qi8-X4837r9mCz#H!Ay<$;t3n
zT1{OGjstF0SFIhR=I{@mOBLRrvAO~zODTcHg<lw^{^;e4`AJdC`7q>LMV%X+;)X8L
zhZDGJaBGtcLUZYQM-0W>HGxUVmtshIH^~qb8$0VkP$QO+Wc+1xehXRpW_8gQk3kjh
zly)*w=tUph^wVjCR`HX*f_<iyI!4cq@U|Om!U8dJo>qaCr%%xKg*I&=RHYR}ClTEs
z?X(Dlp)eUE+hk&b*Mw;&ggRX)o}#@DNhFL|qJ#q>!&roh83>Qt7!Fxgk~<paBQwUV
zAL%R;PxcJ*`xA65Ng1h7hmw(sb#!K=nNy_dP&0{SgJD31`Y=o)N2tP4qPrU=Ux>&W
x$+L~**+%j#VTH&P6_>?5DytLYjXsTs0)g}y(j-Xx1}3_dY;2lN6JhQ5e*+(qvR(iH

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/model/Book.class b/out/production/classes/com/crossover/techtrial/model/Book.class
new file mode 100644
index 0000000000000000000000000000000000000000..6ef0ddc2a69d9b05cbb0110b0ba1ba5d6b4f9ae1
GIT binary patch
literal 2201
zcmah}+j84f6kW1x%W<4KbuJ|#B_WjJ*hx$av_LK;aV~Y5OPjcXw3Jq{HL(&|GM3yS
z@F%<jFL{8O;&fn!;fc=h7kmW|FqCy9rM`>{<MBCX@3Sv!@4b$G|L3P)0KAKbQ6#X^
z1qG{Oxfw+cYf;=1O9JZ(HiTwVXf_pWMG?hH1h>V0M=aYB>_m_k$GZx46?`nA*Vd}K
zYV2xNTer-+xg`nGnuMOLW!jEvI=iY-(?X{U_R~N9`szqRKrhm1{ZM_ZW(?Il$gErD
z!Hk5V?V9Q6Wo=it^?gHIFip!*9fq_e47%oDWGW(w?Pz8}%jAl58t-tis+n3<b+n?J
znMM)Y5%R(Df7&xs{<xwE``ps<W<HnSlMr%r$Iv7sn(*#8Roz8A+#z|^GHPX$L4u}Q
zrek<kH+5%Tf}EV#r8a97sg1AernXrt?`ze(%3?(VtH36zY$au18FWfItG~2fu*#W2
z)v|5tu~yAETA@S?s*x!(nvq$wtRrR&9cWIDy-g%1n$Y^)4cXphU$Xs9z>3f{?^W90
z;{Br52>pGFf#wjtfg7Zx+9j_(7MmlWN|o~@9e55`HM?dw<i(Do7LGR5id!QY$2;xw
znrg7nmdIQChg!jznYhQ^S^I~rGw?5&!*WVml@&Oa2Sq}3$EsBe+KMjv+9jGZEyyOJ
z)4Z0+Ip>(&8|pAj7owQuK7+*YCN9S?gy9%o$GCz|Vti5WDcFnQ9`2J{|39S|W-u$^
zLWBGs=*60D6h#>>+_C$5aV~~W@jxt}vAD@GmxpugC3PR+3SUqohSv-U{jN&4GCS^z
z)W7tob*^D4$k5_?)-yqXtfAT*LSG93TqRo&Rx1_FB)g_MO}~j#Ed|lB#r|xjFSTc9
z6@H0`0y2itj{%+s`Rxke0{?72<yR@6r!>O-BIVaKjAD!mj>W(3=Kco%muxB{JaBeg
z-=ar`yTm<|I)(HD4*?{(hFxVJCU}l{21p@INx~$ixVAb!LE!r~=kbot({4uLJkL}C
z?%`DWM+6$FqptQcLQEmj4|-O9dI8O=Tf*D8(gBFv4kXnP$W^@KJGTIl+ks3INaiI#
zybeo(_<pRX1S=Et_1@9h;9T$MNGZkEJcA;Chp0H#5qxx}mm7Myj?kmIkrTSg?f?dv
z7KA7>c!=RI;u_cME|4)Vh2Ifjag8^8{kV$vc?#eI`c5JEoRpCjd?<0o(sOps7Xp%W
zyG^D$AERHzpMDi;D*Y`&!IShegyfS{9pN<p-v}Z7E0hhdw%8==`V9lL;6Vs=M80-C
zo`5xqd-?2M7D63e?tQRP?;3dy0tjJ_oWFr?zUv+=;uU1c@?}zbg`8bwRW~_~HCo-G
z)dsbjT(|hUg9q5gL*$!!q`qK{N{@M#H_DhdNMx@^=b$K|*x%@9lj89>@A)<Ho3KqA
z@iLM>Bf58r?nJDP9&d!_5^?X$N_rB#T<SRAPP@G(+9iD)0W2_LfEdK9jq{Y{zQjCy
Hn#=zJLR7rr

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/model/Member.class b/out/production/classes/com/crossover/techtrial/model/Member.class
new file mode 100644
index 0000000000000000000000000000000000000000..0ad85cc09b6596300e7563bdef0603e49fd92c5c
GIT binary patch
literal 3562
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
N*=@=y&*ZbP{0}6d_V@q*

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/model/MembershipStatus.class b/out/production/classes/com/crossover/techtrial/model/MembershipStatus.class
new file mode 100644
index 0000000000000000000000000000000000000000..03dc4aa13b1e4245b0e206917533fd8d189f2a9c
GIT binary patch
literal 1158
zcmbVL?{Csz5Pn`Lv~*=-l}*9<YfcAj(&6wEWZA|rS;X<7lZ5!G)CyfnYiQx`QkFQQ
z(d@H-l=0qzj;UYpZE}};@436@?!A8h@%bBoGRg@E*p!h&UPM|%LB=AsxY(AkB$IQS
zBc4cD=DH|B<ysT5!w^5HogTO93_A_e>uct~^L=k*4Ya^Ad%?gq9IfxYu^jEC)$dpX
zzh}SG10xvv6$a_}<X5zK*l5;X)Q=d%jn+ZqRb6K&y`Dd1d}KI7%V*fl<^LmGs1a9&
zrH1WVCqqv7)aW>LBZhgKZyAnqjWc6pXpZ4_HJv(iyOsR>MAe388cxfg2~mM*6~Q(7
zR80N50u8!qyLPb0u=)=I$N3h65cF*7JfYiNmnJ-*Owk;7NLACB1|QC(uDip2bzbIs
z^lq~54F{(6+~$*6`SW3md^`$n@Ks7HDB&qXalYM9kio8kySS%d2`L53T&PGfEM5(t
z^Jj>ej^`4ObS^*BTeEX!nE`QqHao4FWB7h$2KM{?u4k?6muSHk>F*HsGn@fHnn;A2
zcmSy^?~o&qzzSBuaFeWc()`F{u#bpbBKn>zhFc`#p-(1!2H7dTjL76x6$+mayM(~;
zk!$$dbfZjT*KjBF(`X3AE0z$Y4-gAmYZr)r2;H;guEIs!=hX2a#H>TY!;mmfV^Jgg
z9DIS$R>kNAq;n)fLl#0~AvBa&Xe8rb2^SsHwzY*Z7W8&(jHG@J#tBUNRl}4END})j
R$xX<_c~X1>j|dmR<Dao-3bz0N

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/model/Transaction.class b/out/production/classes/com/crossover/techtrial/model/Transaction.class
new file mode 100644
index 0000000000000000000000000000000000000000..e296ae9f2c644e00434036f132e36e31b889a2d1
GIT binary patch
literal 2728
zcma)7Yf~Fl7=BL34G4rn1$#Bt+J;-VD%DmlQZ8+S0V;$j){0AVfUU_cv%6u$@spqZ
zEsoAqI-@iG0DqL@bM|Z?#HIAZp7Wmf`keQ2_Md<M{2Rao_PQ{DwNCV7T`eWGY^bHI
zmM>HIstYNsrLn2@uhsG_jc?L;p2oLnY^Cv?;+ZLIr%*|uD$wUi*D`Bm>3Wu9Zxj{;
z#F9YIykmR5Y5Qff){u#x9^`)h^_R6-ftaO?iZ9Fq)2NyDu2FRC-ARE<YYp4C>auKk
z)^<%kv~9;XeY*4n1_SjUjC~cv^QB#pMxjch8xexX(w462%W4prN@>qm=iS5C>N8U5
za9=9@!ouQ8sZiP!h;KX2_X0PI6{l`gT*vdA1L+#RtnB&f)<)f_%9=4pEgD{nK(lPx
zhb3p#R*tVn$d??;o_A`Ex=n?+ZPukgN=4mLdAjJz9qFq3R<+VfppdM~`nGfhZk+>c
zInbl$PHho5?XEH#t2+hHYcSZQ0F<Fp&r(#(+5)8|o@jMB0`M`|9_41s+1awRql|XD
zCjEwM3-mU{ZpcVZS+?cR2z2C!%e?D6QzwuuTDDwisOywW)?J`KKv6cCU!Fr|+~2d<
z2&3oRx8$0(XI50(5Po7;`UPgOKR>K5+1hUjPYVa~?J|WfMN?H(rkKWWRQ(hkYLnaf
zH?dG*IvGaSNFaZ1pp$AcRMTwuykMb~3fIeUs=UX=ztYT1Wchm;=9K!?Fjo=U%6<0O
zeX|L&#~zxTwC}8QbnIO=cQbfU7R_bVy4IbBTak|})eL<t6}_Y0jOeCZ<kR6F(pY!%
z>6apCA<DY>3^cnVgAegh2A6RqgBy4+gJFzhFoy9A?qXbE=;VFUz~&lOt*S<@6;bY)
zRh`a2Vn;2!Qfe%xW_OyE9m~~&;UnEUmeaElj2s!+CPQb19PvDZ&ruW@etoaCq=QgS
zK(21TkQJXf4Oo_AtOu{M^`oAtq`AK@ZH~ftYqy6fZyk<Pmu1dQ>FXeqXY1o#{zV2r
z7)Ua=Z()%15dS<eyv>i<=J_hm7kIkH{W{O@NaSc3Q*{W%7kRo#@%!9wdAN<dN8^|(
zQnbcsQ-c)@HM+Uq;YWLermX7!1s@<oCOd)a1mhXp1^2|rD~R7o#Bh&mGGGqjW75ii
z3it%~xeGkNr(91PzeMae3R{iuMjB6IDm0#<c8oU3k<mX8I|<zta3>h>Uf^L+YlYzz
zG@Vp|Y0N|b>1YRXKN84in2iF`(GFyaK&H<CqRS`n5OWbg;_X0YBZ16gAqq&m9moQK
zES>>GcZs0<Q3Q}gJCG-lKpx{s6p%zakRpLBp8-TSqd*}NNU|Ns(?}po(Lj>zKuQF%
zaRw0G{6f7j;iV4PN2-yFe<8K`3hDmNBXo_hagWg5pV4%OqI)zQS9GtY6N=7iI;rSB
j(nq+^exJ>j`xL{DjWJnjGFF0TAWLeM=cmNNIsM{4p0P~=

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/repositories/BookRepository.class b/out/production/classes/com/crossover/techtrial/repositories/BookRepository.class
new file mode 100644
index 0000000000000000000000000000000000000000..f3324dc85bf2f5009219aea5c415c3691e0c282e
GIT binary patch
literal 475
zcmb7=%}N6?6oqf9cKYKVxbh{upzfv!D!3XDrr^R|nz@c?XL8F;rYiVkE_?tVN=#=l
z6+ywp$tC3HeCK?8zP$s$IUFRgo4{TI`wE6rTRI&YAqB75T(2}%+Ld@ao0AD?#!{kR
zigo3K=$f8b7Fg(@QE18D29_7RmZr$N?Ibf?qY?I=S0ot7JO;74!kP=J@QQhnesjv$
zmFY#QU^L}M4Bgl&vK+0iZ9Y9&lPNgP8y9R%ch=ikMVHQT(803v3MPNC`hbRoP<Jmd
zCm*6(&*(m&=Os&^Vk>q83eJ8@(FM2U+b|nS1&2QyRB-zL3i~Po^rBjpxNb+J9_&EB
Qoe2!$9LMuv)aV|@UraohGXMYp

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/repositories/MemberRepository.class b/out/production/classes/com/crossover/techtrial/repositories/MemberRepository.class
new file mode 100644
index 0000000000000000000000000000000000000000..0f0beaef023f13011bd2326b0a8a48da10449d1a
GIT binary patch
literal 1194
zcmbtTO>Yx15PeS4Y}$l2EwoU+%9l_m5*88_Qd3n52&76&ixSiWH)q#PU3S-z*D2&L
z@N2l11LDk&LX0<Q5(KG&IPBUp_Pm+*X8hyl*KYux;XxS%-1e~H);k{VdbsD|K11n9
zCE<(yUdZsU=AVdD!6T7$xUZ8={n5bDvnt{TU8{5=qB_HTOLY=qdqy(s&lI%d2Ri0~
z(P^qrrQucv$JQtj@mPm4;%{W!mZrW-;GQd}5k(9uwaNUxN-Z64|Ka=x?DBx@t5_()
z-<~YJMdf6SXDXCo?YxdmtvxG^Xh)I?EW9K}3`@RB<bKc5dgo4vj;{j|9SWjN_Rv|d
z$0}ubK2;whyE;`?8zs}BOwDswpVHMPNgT9KWMHSY?ej!?hc|s~Iy~(<>PJSz@}o8%
zcqpvkqr83oR&?mRk%TR6EbYemXOw;-Z#Gu0%?mBvGl6`qoHVP0{*Qs5xItuCZ}t+a
zVtJ@iMVd8|L|fs;kR;o=sP@$IKpV-$D1tX-YU#_eQvQ<s)FnDH%+vco1!Yti7Jr}r
z3Otk;wx*55NTa{?hM_t}8_3PD`+s^DX}mB8h9cEGSD?p&5?S+P<*-0Du^8Ex$X>(}
zP;HREO8#ZK_moyftG9Uu#_%NzU7>$5b1&mE?HveR!4<4#;U3n=<HENnQI6K~=Hu_k
hogtsQ5TZPQKz>-`Ra~Rs9M*B&fe`2o`fk3*tzYlBRT}^R

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/repositories/TransactionRepository.class b/out/production/classes/com/crossover/techtrial/repositories/TransactionRepository.class
new file mode 100644
index 0000000000000000000000000000000000000000..d818ee2895eb1eaeebefc445e021ccba660bcef3
GIT binary patch
literal 1086
zcmb_bOHbS|5FYbd9_9Tgt$L_9AbP<P;zSVAE(i%JbfsO?Loby#nN1Cjz1R-0XZ}?W
z{Q>+a#AJiAIRNcS97fg`&*b}N=JUhjpT7XG51TbuufawQJ~H^)l{#+p8^&DyI*aQ%
zJ`o<9-4^=H>hGCS47PW|OK~H(5<20b(Mj;F_>g(2c(doF(Lx0bX4*2*f(nsA`@f0~
z!^osOvc@@cgO+=YetRp0;;D&I@e3=o6H(3(91+8pTy0&cM!zbvf&LazGdOuB^)f|L
z8VQxBT@VTi#V=e`dkLlU#B%)(zZtc&owBoYOgm_cWxTkLtv5&e+(Yx9Nuw&fuehMu
zxx~l^p|J^fJu7w6wIan^W3PBDyx<ml#z}8%pC8*SZk2Ep)(YXkcDVy)+a|LSo=Qa~
z`&{wIkYYD?D}zt1Oy~RlA)V|ftZQw&$erXE9KNO8c^(;yT$B~Oh0aq9s7b^$-t~<2
z7?0C?0tN@KxwssIL{~NQP%ML`;o~aC%3yEwxlS?CF-DO~8lPY=0h5HL2#rCF@HEVn
gc$V-Sd?@ieRTY^FusEn#f@M1AC}V|U^(U-70S=X7j{pDw

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/service/BookService.class b/out/production/classes/com/crossover/techtrial/service/BookService.class
new file mode 100644
index 0000000000000000000000000000000000000000..209066b99f718458639f7572fa78dc4d92e26c61
GIT binary patch
literal 420
zcma)2%SyyR5Uk#f$?p2ZugD@e7ZD*MxQ7KL;2~cyPR2OvYzAf~0e{VdAK*ucy;*M}
z<kVDmbx~Dc-yfd<u5g;+IKv4cZFIc1mT;ag%Z==%=%TTrG$9s*d1abb#?EWP%^$*T
zsoYj5??Q0B_9ANa8oiNLY+bFbSULAr+_6j&WX}qZ`Iv|07!qOjV%mE3{!kOH^SyH`
z+eVbGZHkc^i^_Fg>9w)!?rdkb(!MuJU+$V9T>O_W>}f;7-xn4b>KjZvJ#Vy%DS<HI
dzJX~%m?B|(z-WS$afTVdbB+b?2#3Sv=m#p1dvE{%

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/service/BookServiceImpl.class b/out/production/classes/com/crossover/techtrial/service/BookServiceImpl.class
new file mode 100644
index 0000000000000000000000000000000000000000..ea94d6f493eeddef86048d3f60bfce709c6d5ec6
GIT binary patch
literal 2872
zcmbVO{ddz;7=CV7o2?Dq+y;UoAPnd>Bu)e;o#-~13=1foL;Su=@4B!wDM>oqf2HRr
z9Pk{EKYRR}JU%x`*UYUulOK}Y``-8Cc|ULd`sc+T0N%q^5yO}nLK*KGxKhLbW=bSq
z)#PiVWSJ}BL)_4`j|_aQzw@IIxLL#!J~eR5z_Nkc0_8Q|-@LEde&|Gguq|-4X8SG6
z4*W3mw^U$7%HD_qN4i$f<#JSLE$kAj3KZrX&xvjb%vN4X!{n+!e$j6zf#I6tsk@!l
znhI9rnoG)P&9|kyDv5*pl$eh;oKRq<ueneKTaK+_to3BQ+-kcTY*R(^u1m$0$=V~i
zC9O{6xK_;xBc2x9DhPc~?*vBno*&zdX1m=*bnQR9bA6$;=%^b5tKOi+p}N!bWYh`h
z>+Bv#hgOph<rX#E?w^5--O0m%6A*2IiNmoDt~*|1VSBkDaIKPr!j)drs`*~CdPs8x
zU5{Er8uy+80aKsdYe$anN#<@m6YVaQvAn(y`Opz8*8NUkt0hNQ-MB9DOyOMCl_GHB
ze#eWPmRfZ}ht)Xmd441{C>CR-<_AqHYzL0lTn}VRJ@JE0D~wd2{D_5OrRu6C#_*Ym
zS1~Fu)~mqzAduU-@C?*U+`(NF_wYHRK`2oe1+sldMH_x294_FC5!@dhLVW})Ccea~
zfd?kO!b1~h@wLF&etq1l0TUPS%?Q379>jMe_};`1_|bqgu?Abf>ZhPjUlC>ONSv~J
zYmb!8_L=@4N(2TfdJJ6YCv(6A5-@c2#Z7&z+d(msWd>hQ4VK0r+kVlNArm#Wizg;l
zi)espKbo!G#E<IaY6<IT3S2x~Z_$f_v~AU92&`0JZ^UG0&U(kQb@5n>ETB$H1;jbp
zi(?nP_RkM)N_#`#OjhAuc^$$F`}vS*$<!?tY=6cWZ>F)vcZDp~P{ami1m<|wFKg;2
z9S7YX@xZ(5M@xRkYuxOT>F@v(BXGKFAhx{YSiRG3yG|xByMPIl7#BBGD;t6TgxA5o
z!P(J~hCWlHRRfNRNAL{zCfayxAYk|OQs8)7{-&~OvbENbY(Kd!?c}a3wR$@P^q^4V
z#OQEhn#-Q2g1D>{tL^V>lv904Bj1u<!&Tu#B3R9&sLorLb2CHPCAh+A@^XiX$%AFH
zVM@&|O4qGBk?x~%Z(t>t<bZ5&WbfNJoJ6xPTNwsA0_XQ+V!y}<oI02fZ}Deon7=?H
zd~$m5@-HdR^%%zaKFZw^={bIjQ_mo#rhh~37w&R6#&?;&Sl}v;*D!?ReCu7z&D{y^
zC>Lwxm5JB!2G6w4$CT4t=YGe)!)M6XrhY~4IbPvpeE1ZF2QOd%&oP+8^v`4)$QV0`
zLA*)Wr!vOQrN#zn;3QA!Hl<8{6Uu3>&XAI$9E%v|_|`BMNYOCL+Who$4CU}AirQl0
zUV(fBnXy#fajT38oaZ^G3NEJlT*~Qy98dL?a=3Hp1%coxj-;9sUy8Ba3QCxawVz4k
zcC;Tyg(vJ{9KjT($=&rRp<E&*kGEr_mtpa%vA)A^i%*g3O@wfng7>-CDVe2(4{#mT
Kc(s5<eDW_PHz#WV

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/service/MemberService.class b/out/production/classes/com/crossover/techtrial/service/MemberService.class
new file mode 100644
index 0000000000000000000000000000000000000000..336cd1c62dee0fcbf93b9989e66b024b808ed524
GIT binary patch
literal 433
zcma)&%}T>S6ot=iW7F1O`V{FxXX8Sw2)Yo2sEa(obaIVTCK;HS1bj6YK7bD;PMd-Y
z5wf}m?ztcLoUiYXPXL!VO>vy!gphdIG2uDOm92$x)_dEr6M@xRa9SEs+melV;(E<)
zwH#(6OkZ_V-oHPVgsUvy$W96)n@Z%isfJV1E#=M_!XjJtls0H1a_z&4Fe`M`$k4i&
z;QEi@X4tQ{5i~Ds>l8m|6G@9cYr(G5iZ8am6VCsu$M?2<LHi@Z*>B{R^@dfL5D24K
dJ}^!QV<bSF2bk<;ifP=>;&z02REIlt^aFLBfUE!j

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/service/MemberServiceImpl.class b/out/production/classes/com/crossover/techtrial/service/MemberServiceImpl.class
new file mode 100644
index 0000000000000000000000000000000000000000..a49b1c742ac6bc44985ea0b92a4db16142be9abd
GIT binary patch
literal 1952
zcmbVMYfscz7=F$$ONUNDz!C2&-f#f5x`G!#c2Ng486;tp#E+#MhohZ#(so$+=1<aO
zSHqgP`)!l`O`FX=r|rOijzK@P=k~nM^Pcx|{`v2ZPXMOy$V5NvK3KSBq8HbT_z5@k
zZ_2>5ftw}_*m`}-#BJQsvl#=k2IdUh6&P&D#+nRQWHX3V9E4i}x2kT?u-!0-qF_^o
zb}ZeEI8=^jhi#OSk-fCfa8{sqPWdXH7nmu3C&&1zK>mKPE(H!%l`o&Pw0BRPHIF;P
z)xdSURfoQCoo(jh4HXI8=qeb=a8tQ5^S73+9ygjE9nMG2CW)VPceg=byv%lXysO9_
z7z2?;RbcF(76bCNiely0)36Hk*J8(gwd6FDdoq^-g%`?Szqj>xUEp@P`qJ5SY|ruQ
zb~W(p2luUz`leY1_mc<=1kG3lzT>t1D5aQItUP-;J7eTV_U2-%+0Mt@7w~fji^4p4
z4SmN2&ttaB;~i90Mu*3JHC6YWxD_&MGoJyzLC35Gt<aT=N*C5hdfATJxT>QoaD1iZ
z$EqP$Ris#Q3%(!3j*bs2u3Qbmx*at`ChbM&G~};A_{xrA8Ok7LJnW2a*1{0xEgZt2
zg`e?@fdvcqaNoi)JP^3ht=T$DO5kocn0)QZBrTEsjHSNdh0<Bys_1HpD(y21XHYS)
zXyG9qSh$3;!1Zp7WchN#uwZtJZh7scbYp=l-$WzOQ`S9RsLQz0a1`@gYNs)&<r-fa
zR<po#H{P#4LITCKNiuRiM7u6$+z0OBu}<UkzHGByzHEzK-U-aQF@f#xn&HoP`B(&D
z#fv1)@(u3?TaaH)mkZzbJm*6g=KnBPi`>s~G$%elOiccc+&ivvDDgjl9{!KeVg!9S
z${9FI&>W9)MZ1JmknI?bXPj?{(U#?j-;kSpkDhJhb6C3kH-?g(ZTyhKU+8`N5ytZm
zDEvumPog+XE#M@TPtn8E7-f-Z)zOr1N41O-MCp5-Ao3*jP7_st_!pxFe&op++N3w!
z$h;|K+I`v;@gAo3U`N?Z?sXAGjCClMb`(pD<vB7I8Hw|_K=ei0T01*q+!4A9IO@1g
raV0pKT6G&m0j-tBwKqALOmsAZj$#_m@dPtL++;Glj4K>9{wnZ4ENBV^

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/service/TopMemberService.class b/out/production/classes/com/crossover/techtrial/service/TopMemberService.class
new file mode 100644
index 0000000000000000000000000000000000000000..aba1db8fa4c8285df31468b42ed677e43491ceb8
GIT binary patch
literal 401
zcmb_YyH3ME5ZnzR&ZD8>8z4=Ng3c(Fab=Xk{(;M7<y>_3MR#j|90ec1M<LcRf+`)|
zjAnO6GoN4Y9{}(Ss{|GaED;`R;>w?M+tV90dkQfRzA0G;u53e<e{Bx~K*%18lkT-*
zVXE*(yG%0;T6$Gjk4neZslrB15f-JbTg_b%%kw{2z7)nc$^;*y?<puIbL3#PQwR1+
zs*Sa>YL{*$ep&i17|N}a{QF<Iq|jSKo1r1X(>2RDp8eVW{2|<3wsE?x)oy<x!!rbg
WiHr?^Q-m9s3cnRLftjG>g67{Wxqh+$

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/service/TopMemberServiceImpl.class b/out/production/classes/com/crossover/techtrial/service/TopMemberServiceImpl.class
new file mode 100644
index 0000000000000000000000000000000000000000..292aac8073cc75421b6277075c975892c128c0f2
GIT binary patch
literal 5299
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

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/service/TransactionService.class b/out/production/classes/com/crossover/techtrial/service/TransactionService.class
new file mode 100644
index 0000000000000000000000000000000000000000..35b4da352833d55d8a6b6859b21a008b8e5caa06
GIT binary patch
literal 611
zcmb_aO-}+b6r2Kr;P=6J@dv=gCdM0TBH4IaLn3?eSjq#7-8Qyeh=0w4KfoVlEG!8e
z<Ur!-y=JB}uk-r-^Z5nf1}6<1HE_&uro1nxXYE^NpC})aV|Zz&(&k(`>%E<k<ALOB
za7t)C3YKS17%yZ{)+AZK+u2Ia?TGXyy~}X!C=|{t4c9shckOg4W`b*BCOoxfvZL<h
zSeem-*1eBJ1nQ5UOB)JvBEyiZ<b%p7%1faav@D*wrSBg=r$maNG*6Wear)*!O^k>S
zAcpsUki6X?yZh+h8rZ@~dQ>_NaIvw70lArybhXHk;d<Npd`a8f$?7J<={o=Za7r@N
i85k<@y8zW1Llre3);-jhwSoPJHzQg>D|QFV?(i2juf|6J

literal 0
HcmV?d00001

diff --git a/out/production/classes/com/crossover/techtrial/service/TransactionServiceImpl.class b/out/production/classes/com/crossover/techtrial/service/TransactionServiceImpl.class
new file mode 100644
index 0000000000000000000000000000000000000000..8fb887e3553e62fe52f7c9158b2fb16ea550e610
GIT binary patch
literal 4963
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
JDNnx+{14xXl3f4*

literal 0
HcmV?d00001

diff --git a/out/production/classes/db/changelog/db.changelog-1.0.xml b/out/production/classes/db/changelog/db.changelog-1.0.xml
new file mode 100644
index 0000000..e4e52fe
--- /dev/null
+++ b/out/production/classes/db/changelog/db.changelog-1.0.xml
@@ -0,0 +1,43 @@
+<?xml version="1.1" encoding="UTF-8" standalone="no"?>
+<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
+    <changeSet author="crossover" id="1001122001_create_tables">
+        <createTable tableName="member">
+            <column autoIncrement="true" name="id" type="BIGINT">
+                <constraints primaryKey="true" primaryKeyName="pk_me"/>
+            </column>
+            <column name="name" type="VARCHAR(255)"/>
+            <column name="email" type="VARCHAR(255)"/>
+            <column name="membership_status" type="VARCHAR(255)"/>
+            <column name="membership_start_date" type="Datetime"/>
+        </createTable>
+        <createTable tableName="book">
+            <column autoIncrement="true" name="id" type="BIGINT">
+                <constraints primaryKey="true" primaryKeyName="pk_book"/>
+            </column>
+            <column name="title" type="VARCHAR(255)"/>
+        </createTable>
+        <createTable tableName="transaction">
+            <column autoIncrement="true" name="id" type="BIGINT">
+                <constraints primaryKey="true" primaryKeyName="transaction"/>
+            </column>
+            <column name="book_id" type="BIGINT"/>
+            <column name="member_id" type="BIGINT"/>
+            <column name="date_of_issue" type="DATETIME"/>
+            <column name="date_of_return" type="DATETIME"/>
+        </createTable>
+        <addForeignKeyConstraint baseColumnNames="book_id"
+            baseTableName="transaction"
+            constraintName="fk_transaction_book"
+            onDelete="CASCADE"
+            onUpdate="RESTRICT"
+            referencedColumnNames="id"
+            referencedTableName="book"/>
+          <addForeignKeyConstraint baseColumnNames="member_id"
+            baseTableName="transaction"
+            constraintName="fk_transaction_member"
+            onDelete="CASCADE"
+            onUpdate="RESTRICT"
+            referencedColumnNames="id"
+            referencedTableName="member"/>
+    </changeSet>
+</databaseChangeLog>
diff --git a/out/production/classes/db/changelog/db.changelog-2.0.xml b/out/production/classes/db/changelog/db.changelog-2.0.xml
new file mode 100644
index 0000000..1d86cb8
--- /dev/null
+++ b/out/production/classes/db/changelog/db.changelog-2.0.xml
@@ -0,0 +1,23 @@
+<?xml version="1.1" encoding="UTF-8" standalone="no"?>
+<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
+    <changeSet author="thomas_heniart" id="01082019_change_set">
+        <dropForeignKeyConstraint baseTableName="transaction" constraintName="fk_transaction_book"/>
+        <dropForeignKeyConstraint baseTableName="transaction" constraintName="fk_transaction_member"/>
+        <addForeignKeyConstraint baseColumnNames="book_id"
+            baseTableName="transaction"
+            constraintName="fk_transaction_book"
+            onDelete="NO ACTION"
+            onUpdate="RESTRICT"
+            referencedColumnNames="id"
+            referencedTableName="book"/>
+        <addForeignKeyConstraint baseColumnNames="member_id"
+            baseTableName="transaction"
+            constraintName="fk_transaction_member"
+            onDelete="NO ACTION"
+            onUpdate="RESTRICT"
+            referencedColumnNames="id"
+            referencedTableName="member"/>
+    </changeSet>
+</databaseChangeLog>
\ No newline at end of file
diff --git a/out/production/classes/db/changelog/db.changelog-master.xml b/out/production/classes/db/changelog/db.changelog-master.xml
new file mode 100644
index 0000000..9930574
--- /dev/null
+++ b/out/production/classes/db/changelog/db.changelog-master.xml
@@ -0,0 +1,7 @@
+<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
+                        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
+    <include file="db/changelog/db.changelog-1.0.xml"/>
+    <include file="db/changelog/db.changelog-2.0.xml"/>
+</databaseChangeLog>
\ No newline at end of file
diff --git a/out/production/classes/logback-spring.xml b/out/production/classes/logback-spring.xml
new file mode 100644
index 0000000..fb397ea
--- /dev/null
+++ b/out/production/classes/logback-spring.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<configuration>
+    <include resource="org/springframework/boot/logging/logback/defaults.xml" />
+    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}/}spring.log}"/>
+    <include resource="org/springframework/boot/logging/logback/file-appender.xml" />
+    <include resource="org/springframework/boot/logging/logback/console-appender.xml" />
+    <root level="INFO">
+        <appender-ref ref="FILE" />
+        <appender-ref ref="CONSOLE"/>
+    </root>
+</configuration>
\ No newline at end of file
diff --git a/out/test/classes/META-INF/cross-library-java_main.kotlin_module b/out/test/classes/META-INF/cross-library-java_main.kotlin_module
new file mode 100644
index 0000000000000000000000000000000000000000..e0dc0c303bf7a525c885d53ff381003d25f6a149
GIT binary patch
literal 16
RcmZQzU|?ooU|@t|ZU6vK01*HH

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/CrossLibraryApplicationTest.class b/out/test/classes/com/crossover/techtrial/CrossLibraryApplicationTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..66daaa1cb338f3a2982e8697e50e7c34f3dfa8e7
GIT binary patch
literal 354
zcmbV|ze)o^5XQf`+#hpZOz;U}7cJaEtrS55R)-b|>G#&fY}nj}y-gsGWhGen06vsB
z8>}syfsgrq%paJq?~hLa*BF)PVNl?tz>tvNnbw4RLT_@uAf!|Gq6x#=wEAhgZnU4v
z#xgmrosxDTy@~!8reSG1!cDE*S}5<j&h4}pL91opMk}U~)u!>%?;kcBYm^MewR7Et
zTS7T=Td(w^i3i4i^j@yyPF6^f5w8Ami!h2Cgq7{9cy3l&1)L$_Kg1wTUd@`b69*4u
d7w@1q1_=t*oH0=1h_yP@8T#zw_%UmO>Ic4{S@-||

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/controller/BookControllerTest.class b/out/test/classes/com/crossover/techtrial/controller/BookControllerTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..2b1bc1190fddb04302ee832bc3f7665e316d6b29
GIT binary patch
literal 5508
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

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/controller/MemberControllerTest.class b/out/test/classes/com/crossover/techtrial/controller/MemberControllerTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..773e22a5d07557c0b56d4e753c69003efccc4a99
GIT binary patch
literal 6921
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
BtXKd5

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/controller/TransactionControllerTest.class b/out/test/classes/com/crossover/techtrial/controller/TransactionControllerTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..e40975f91c622e7613f4b3f32e4cbc07bf0be569
GIT binary patch
literal 3880
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

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/factory/TransactionFactoryTest.class b/out/test/classes/com/crossover/techtrial/factory/TransactionFactoryTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..a33294e0bf4884824c634ef87ffbcd5f5e49a03f
GIT binary patch
literal 2913
zcmbVOjds*T6#k~&l5PmFlu|5J1ckc0MWTp^7SYmfwb)WE+ZHN{X`1b(%_fj!3;2is
z;v@JNqAh#$93Q~f@I5?!lce1&uvFZ0c4l(te)rz_=H8q9_0R8r0yu@AR19E5!Fd%O
z7|G%wM&&S;MG507-od*nCU8N;dzh3PQ&M(OuBKJIj}PQ(Mh=(cP?oY;6?2$ZaT!;n
z(FOVVp&YJC>_;j-#x=S6M1i4TQ9vD^xLg{$Ha1c&3G`2{7;A<e+BHj`^i0DUGeWD(
zr(uDt={b&NhMq5Qc+&Hi^_9A7hq_;PtUxdMzUPl_YEZp@rtV5Rb9P`aI@XBmdZ7{8
zo*M|{Qt%nVsh(N%yj6jtlcrbGP2URwZ_V=c&@!u`ZySzY^Oh_}KTj=c_e2J2p1Ep=
zo<7By!W}iMwrDZB!EKC8MS4VJLn{bJ9l{0nrj8zoxZmk|H|Z?&4L2}M8T>dW&%Z5j
zs;!SotfH46Ldh7<+T`pUP3H@9JoP9~C9r4GcCCwb8GYFxS<wN>{+z+1^EnY_!m3U7
z&ioJ8Wge97y8<hmz0ON7-7>A~(QPO&H~Eb3^So8@e0e3MWqZwXCF3LRQq0+Wm4dqM
zETs?U`7JtS>ZG;>cBc3f7-}1Re8VXyV@PL8a)$1+rjwAUUh?X`X^q>GvVjybxh9D?
zAv0RwU@GPOy6ZBxn4t4^Se3M_8BU!h23yi9rb8wdlkCDQ?~Moohcz6>ivoupUjrHr
z;aLq&;~51@8Z1;4ENiI3R<NRB6^??M1{a=&7m(Lbz;!uL{e}h~frcW6G(3mrH5|jB
zh7ffHYZ`9imV(<FKE-DmKF1dtzQi33U*T&F-{4yX-)Z<BKWO+7cLh$jtEl#gDtROK
zQ7>=|cUhlaTw&!4>}!g)GDx7e*)$eB*P5<Wm}X4z+487BU#hN}yCnTU6V=jcWLbI>
zZV(zSjSS@<jW49ciLy+WrcLQ<Vo6|Ea61UC+L%=_>JAO|=F`wvi^x4qWYQ42D)udl
z2F|1-*mRZho|s5m-RvL7)6iI$R%<ynV>tQbH^u5&w!%0nlNo%Pr+acM^nG}7o3a+T
zn{R76)ttA{NqTRJzfE4+h5e|uQ25Wv0tyL|4T|Oc7;;i45ZEs(yK2--pM{`L8KGIV
ze0JUr*?x=3rKSpFxDYjt2N9$-OQgA4t{SOSP6Ho}ldpy>!;Z-k$Zs3?)+=o{Ve+Lt
zU6}|1+0zDE^8LY-Q|zF0qi#3?g><f(Ro`<xeKeX{F@*)bE2CnG&Ov4!%Wz3^)I+B$
ztoZywlI3X)lF{LD_i%nf{@T|8j__M%fZs<7XLe7n_R3ZYV!7VI`3UC@*%(u@qmhh#
z@*x?UYqZDK8qMsgoHNv88|Qd}Pv_9d6_6|5hbaDmjw|=kxsJ>)5kluEzovlw#P#DP
zuC!PmFXJSi1YV)7&dAo)#MWT(9=h&f#|D%Jx*N!@LoF76gWAB(b!f!~cCBM~(?bt!
zgRg>pjQ0><1jpF_o1O*}Pp7COV}Esvjnk3;*S7rs%zYW_EPd_fe-HmT>34%4Ih->?
z8|abp2KH^BH<9e;oNJNvQKD_&Km$)@_>cFR;r5}6PIUB=fI%Mr3_obg3`>UG7YC4p
z+=~(JzRsW@4*m^lcVl?#A_|dJUin_-?@X>c*OTjMp#N8NNymcj;tT)|(8XCkb>Pj2
OiJja%$NyU<-u@RdJszI`

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/service/BookServiceImplTest.class b/out/test/classes/com/crossover/techtrial/service/BookServiceImplTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..a4f9329b91d6a9f8be2c6efc0976b403b14e4d27
GIT binary patch
literal 4224
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
BIfeiL

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/service/MemberServiceImplTest.class b/out/test/classes/com/crossover/techtrial/service/MemberServiceImplTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..bd388c97b8049d53c153ef5de03d0cabe25dca4f
GIT binary patch
literal 4246
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
F{{iilT)6-M

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/service/TopMemberServiceImplTest.class b/out/test/classes/com/crossover/techtrial/service/TopMemberServiceImplTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..33478ad8f3857685d61bf74b70d4e4826c61d2e1
GIT binary patch
literal 5234
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
LrTlwY3@`sL?+3dO

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/service/TransactionServiceImplTest.class b/out/test/classes/com/crossover/techtrial/service/TransactionServiceImplTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..85df2f32923daf3732f21942a16af205774ec925
GIT binary patch
literal 8054
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

literal 0
HcmV?d00001

diff --git a/out/test/classes/com/crossover/techtrial/util/HttpEntityHelper.class b/out/test/classes/com/crossover/techtrial/util/HttpEntityHelper.class
new file mode 100644
index 0000000000000000000000000000000000000000..8614810bd41897c727d439331269eff091492430
GIT binary patch
literal 1206
zcmbVMTTc@~7(G)erAsMTE(+etMQA}-Z!ZQUAp}B6FQlzacrw%NSO&Md&F(D9zcN19
zL=t`XM;X7_Z7hjE)Q8=j`R4o1cjla#{qghbHvlj3!axey1m+W17{Q`}7?u)vY+xAK
zB$lzFN4W&@1`Mnwu*NW1DA(#c<$7VKUZ|Ac?p3RmDnq7t%FnoIbEj?Alqa3`Cd1gS
z>-dU0s=@6*Fbr==N2+axp<KSf5Z`rM6df;0N0ft3Q+RdWv?-D)x)!$^+>?6V560Dr
z^cl>e<#tTVbA8`E6P~Grbwd5PZ3ar(=7Cb(Jx57(ejx0w@QB4!Tc|;J-}MfC*I{^-
z`;&6M=z49_?`r<<Jl+u>T<^VkLYS9;2{PVvTjva;dgVaymhgz#^3BElJgQFCWZU5?
z@Mx>0|7EdtiG8JcDlE0RP1r`w4LnQiOReMdVB3)z8``84CUBc!ZeUn7AjLXj@1rHU
zN@{V||4C$qY@N)>S~mCT%^k;8*`~<K$bHF`&`qB(EZwMYU!nxoQ`mr+!c#nBSiG?&
zGF!txXP6l5Dbj>AxJqC;d<)m2mPAYP`gxZGoY*-!Di(I5lYUsMlxYXoyZpP5d`SC3
z(dk#hQ4!Qi?r#e9wRnA*ao^f2Yr_Ly3T!3A`&HuI&3ps%7@|83ki!^5n!e*Siy=-=
zOj}Qp3`MpmkI^^1+5@{l>^Kwe;nw#scaq-vUjU3!T?$h)N=4b2#thApxP!Ztp^@H%
z*ud-shL3wl6xTju<O`A)FpgK(dKmpgNik^9G&Kd07$F+tRIGt#!bY>0rB#G0bGS#%
P?$a!W2Q+#ZjvoC2BlAqj

literal 0
HcmV?d00001

diff --git a/src/main/java/com/crossover/techtrial/controller/BookController.java b/src/main/java/com/crossover/techtrial/controller/BookController.java
index a171514..31d9f77 100644
--- a/src/main/java/com/crossover/techtrial/controller/BookController.java
+++ b/src/main/java/com/crossover/techtrial/controller/BookController.java
@@ -1,56 +1,60 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.controller;
 
+import com.crossover.techtrial.exceptions.BookNotFoundException;
+import com.crossover.techtrial.model.Book;
+import com.crossover.techtrial.service.BookService;
 import java.util.List;
-import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RestController;
-import com.crossover.techtrial.model.Book;
-import com.crossover.techtrial.service.BookService;
+import org.springframework.web.server.ResponseStatusException;
 
 /**
  * BookController for Book related APIs.
- * @author crossover
  *
+ * @author crossover
  */
 @RestController
 public class BookController {
-  
-  @Autowired 
-  private BookService bookService;
-  
-  /*
-   * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
-   */
-  @GetMapping(path ="/api/book")
-  public ResponseEntity<List<Book>> getBooks() {
-    return ResponseEntity.ok(bookService.getAll());
-  }
 
-  /*
-   * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
-   */
-  @PostMapping(path ="/api/book")
-  public ResponseEntity<Book> saveBook(@RequestBody Book book) {
-    return ResponseEntity.ok(bookService.save(book));
-  }
-  
-  /*
-   * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
-   */
-  @GetMapping(path = "/api/book/{book-id}")
-  public ResponseEntity<Book> getRideById(@PathVariable(name="book-id",required=true)Long bookId){
-    Book book = bookService.findById(bookId);
-    if (book!=null)
-      return ResponseEntity.ok(book);
-    return ResponseEntity.notFound().build();
-  }
+    private BookService bookService;
+
+    public BookController(final BookService bookService) {
+        this.bookService = bookService;
+    }
+
+    /*
+     * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
+     */
+    @GetMapping(path = "/api/book")
+    public ResponseEntity<List<Book>> getBooks() {
+        return ResponseEntity.ok(bookService.getAll());
+    }
+
+    /*
+     * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
+     */
+    @PostMapping(path = "/api/book")
+    public ResponseEntity<Book> saveBook(@RequestBody final Book book) {
+        return ResponseEntity.ok(bookService.save(book));
+    }
 
-  
+    /*
+     * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
+     */
+    @GetMapping(path = "/api/book/{book-id}")
+    public ResponseEntity<Book> getRideById(@PathVariable(name = "book-id") final Long bookId) {
+        try {
+            return ResponseEntity.ok(bookService.findById(bookId));
+        } catch (BookNotFoundException e) {
+            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage(), e);
+        }
+    }
 }
diff --git a/src/main/java/com/crossover/techtrial/controller/MemberController.java b/src/main/java/com/crossover/techtrial/controller/MemberController.java
index 7f613ce..d16f647 100644
--- a/src/main/java/com/crossover/techtrial/controller/MemberController.java
+++ b/src/main/java/com/crossover/techtrial/controller/MemberController.java
@@ -1,13 +1,20 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.controller;
 
+import com.crossover.techtrial.dto.TopMemberDTO;
+import com.crossover.techtrial.exceptions.InvalidTimeRangeException;
+import com.crossover.techtrial.exceptions.UserAlreadyExistsException;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.service.MemberService;
+import com.crossover.techtrial.service.TopMemberService;
 import java.time.LocalDateTime;
-import java.util.ArrayList;
 import java.util.List;
-import org.springframework.beans.factory.annotation.Autowired;
+import javax.validation.ConstraintViolation;
+import javax.validation.ConstraintViolationException;
 import org.springframework.format.annotation.DateTimeFormat;
+import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
@@ -15,69 +22,78 @@ import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.RestController;
-import com.crossover.techtrial.dto.TopMemberDTO;
-import com.crossover.techtrial.model.Member;
-import com.crossover.techtrial.service.MemberService;
+import org.springframework.web.server.ResponseStatusException;
 
 /**
- * 
  * @author crossover
  */
 
 @RestController
 public class MemberController {
-  
-  @Autowired
-  MemberService memberService;
-  /*
-   * PLEASE DO NOT CHANGE SIGNATURE OR METHOD TYPE OF END POINTS
-   */
-  @PostMapping(path = "/api/member")
-  public ResponseEntity<Member> register(@RequestBody Member p) {
-    return ResponseEntity.ok(memberService.save(p));
-  }
-  
-  /*
-   * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
-   */
-  @GetMapping(path = "/api/member")
-  public ResponseEntity<List<Member>> getAll() {
-    return ResponseEntity.ok(memberService.findAll());
-  }
-  
-  /*
-   * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
-   */
-  @GetMapping(path = "/api/member/{member-id}")
-  public ResponseEntity<Member> getMemberById(@PathVariable(name="member-id", required=true)Long memberId) {
-    Member member = memberService.findById(memberId);
-    if (member != null) {
-      return ResponseEntity.ok(member);
+
+    private static final String DEFAULT_CONSTRAINT_ERROR = "Constraint violation";
+
+    private MemberService memberService;
+    private TopMemberService topMemberService;
+
+    public MemberController(final MemberService memberService, final TopMemberService topMemberService) {
+        this.memberService = memberService;
+        this.topMemberService = topMemberService;
     }
-    return ResponseEntity.notFound().build();
-  }
-  
-  
-  /**
-   * This API returns the top 5 members who issued the most books within the search duration. 
-   * Only books that have dateOfIssue and dateOfReturn within the mentioned duration should be counted.
-   * Any issued book where dateOfIssue or dateOfReturn is outside the search, should not be considered. 
-   * 
-   * DONT CHANGE METHOD SIGNATURE AND RETURN TYPES
-   * @return
-   */
-  @GetMapping(path = "/api/member/top-member")
-  public ResponseEntity<List<TopMemberDTO>> getTopMembers(
-      @RequestParam(value="startTime", required=true) @DateTimeFormat(pattern="yyyy-MM-dd'T'HH:mm:ss") LocalDateTime startTime,
-      @RequestParam(value="endTime", required=true) @DateTimeFormat(pattern="yyyy-MM-dd'T'HH:mm:ss") LocalDateTime endTime){
-    List<TopMemberDTO> topDrivers = new ArrayList<>();
+
+    /*
+     * PLEASE DO NOT CHANGE SIGNATURE OR METHOD TYPE OF END POINTS
+     */
+    @PostMapping(path = "/api/member")
+    public ResponseEntity<Member> register(@RequestBody final Member p) {
+        try {
+            return ResponseEntity.ok(memberService.save(p));
+        } catch (UserAlreadyExistsException e) {
+            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, e.getMessage(), e);
+        } catch (ConstraintViolationException e) {
+            throw new ResponseStatusException(HttpStatus.BAD_REQUEST,
+                    e.getConstraintViolations().stream().map(ConstraintViolation::getMessageTemplate).findFirst()
+                            .orElse(
+                                    DEFAULT_CONSTRAINT_ERROR), e);
+        }
+    }
+
+    /*
+     * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
+     */
+    @GetMapping(path = "/api/member")
+    public ResponseEntity<List<Member>> getAll() {
+        return ResponseEntity.ok(memberService.findAll());
+    }
+
+    /*
+     * PLEASE DO NOT CHANGE API SIGNATURE OR METHOD TYPE OF END POINTS
+     */
+    @GetMapping(path = "/api/member/{member-id}")
+    public ResponseEntity<Member> getMemberById(@PathVariable(name = "member-id") final Long memberId) {
+        final Member member = memberService.findById(memberId);
+        if (member != null) {
+            return ResponseEntity.ok(member);
+        }
+        return ResponseEntity.notFound().build();
+    }
+
+
     /**
-     * Your Implementation Here. 
-     * 
+     * This API returns the top 5 members who issued the most books within the search duration.
+     * Only books that have dateOfIssue and dateOfReturn within the mentioned duration should be counted.
+     * Any issued book where dateOfIssue or dateOfReturn is outside the search, should not be considered.
+     *
+     * DONT CHANGE METHOD SIGNATURE AND RETURN TYPES
      */
-    
-    return ResponseEntity.ok(topDrivers);
-    
-  }
-  
+    @GetMapping(path = "/api/member/top-member")
+    public ResponseEntity<List<TopMemberDTO>> getTopMembers(
+            @RequestParam(value = "startTime") @DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss") final LocalDateTime startTime,
+            @RequestParam(value = "endTime") @DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss") final LocalDateTime endTime) {
+        try {
+            return ResponseEntity.ok(topMemberService.getTopFiveMembersFromStartTimeToEndTime(startTime, endTime));
+        } catch (InvalidTimeRangeException e) {
+            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, e.getMessage(), e);
+        }
+    }
 }
diff --git a/src/main/java/com/crossover/techtrial/controller/TransactionController.java b/src/main/java/com/crossover/techtrial/controller/TransactionController.java
index 83f41b8..8b34729 100644
--- a/src/main/java/com/crossover/techtrial/controller/TransactionController.java
+++ b/src/main/java/com/crossover/techtrial/controller/TransactionController.java
@@ -1,57 +1,62 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.controller;
 
-import java.time.LocalDateTime;
-import java.util.Map;
-import org.springframework.beans.factory.annotation.Autowired;
+import com.crossover.techtrial.dto.TransactionDTO;
+import com.crossover.techtrial.exceptions.BookAlreadyIssuedException;
+import com.crossover.techtrial.exceptions.BookAlreadyReturnedException;
+import com.crossover.techtrial.exceptions.BookNotFoundException;
+import com.crossover.techtrial.exceptions.TooManyBooksIssuedException;
+import com.crossover.techtrial.exceptions.TransactionNotFoundException;
+import com.crossover.techtrial.model.Transaction;
+import com.crossover.techtrial.service.TransactionService;
+import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.PatchMapping;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RestController;
-import com.crossover.techtrial.model.Transaction;
-import com.crossover.techtrial.repositories.BookRepository;
-import com.crossover.techtrial.repositories.MemberRepository;
-import com.crossover.techtrial.repositories.TransactionRepository;
+import org.springframework.web.server.ResponseStatusException;
 
 /**
  * @author kshah
- *
  */
 @RestController
 public class TransactionController {
-  
-  @Autowired TransactionRepository transactionRepository;
-  
-  @Autowired BookRepository bookRepository;
-  
-  @Autowired MemberRepository memberRepository;
-  /*
-   * PLEASE DO NOT CHANGE SIGNATURE OR METHOD TYPE OF END POINTS
-   * Example Post Request :  { "bookId":1,"memberId":33 }
-   */
-  @PostMapping(path = "/api/transaction")
-  public ResponseEntity<Transaction> issueBookToMember(@RequestBody Map<String, Long> params){
-    
-    Long bookId = params.get("bookId");
-    Long memberId = params.get("memberId");
-    Transaction transaction = new Transaction();
-    transaction.setBook(bookRepository.findById(bookId).orElse(null));
-    transaction.setMember(memberRepository.findById(memberId).get());
-    transaction.setDateOfIssue(LocalDateTime.now());    
-    return ResponseEntity.ok().body(transactionRepository.save(transaction));
-  }
-  /*
-   * PLEASE DO NOT CHANGE SIGNATURE OR METHOD TYPE OF END POINTS
-   */
-  @PatchMapping(path= "/api/transaction/{transaction-id}/return")
-  public ResponseEntity<Transaction> returnBookTransaction(@PathVariable(name="transaction-id") Long transactionId){
-    Transaction transaction = transactionRepository.findById(transactionId).get();
-    transaction.setDateOfReturn(LocalDateTime.now());
-    return ResponseEntity.ok().body(transaction);
-  }
 
+    private TransactionService transactionService;
+
+    public TransactionController(final TransactionService transactionService) {
+        this.transactionService = transactionService;
+    }
+
+    /*
+     * PLEASE DO NOT CHANGE SIGNATURE OR METHOD TYPE OF END POINTS
+     * Example Post Request :  { "bookId":1,"memberId":33 }
+     */
+    @PostMapping(path = "/api/transaction")
+    public ResponseEntity<Transaction> issueBookToMember(@RequestBody final TransactionDTO transactionDTO) {
+        try {
+            return ResponseEntity.ok().body(transactionService.issueBookToMember(transactionDTO));
+        } catch (BookAlreadyIssuedException | TooManyBooksIssuedException e) {
+            throw new ResponseStatusException(HttpStatus.FORBIDDEN, e.getMessage(), e);
+        } catch (BookNotFoundException e) {
+            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage(), e);
+        }
+    }
+
+    /*
+     * PLEASE DO NOT CHANGE SIGNATURE OR METHOD TYPE OF END POINTS
+     */
+    @PatchMapping(path = "/api/transaction/{transaction-id}/return")
+    public ResponseEntity<Transaction> returnBookTransaction(
+            @PathVariable(name = "transaction-id") final Long transactionId) {
+        try {
+            return ResponseEntity.ok().body(transactionService.returnBookTransaction(transactionId));
+        } catch (TransactionNotFoundException | BookAlreadyReturnedException e) {
+            throw new ResponseStatusException(HttpStatus.FORBIDDEN, e.getMessage(), e);
+        }
+    }
 }
diff --git a/src/main/java/com/crossover/techtrial/dto/TopMemberDTO.java b/src/main/java/com/crossover/techtrial/dto/TopMemberDTO.java
index dd80ffd..3f7bc85 100644
--- a/src/main/java/com/crossover/techtrial/dto/TopMemberDTO.java
+++ b/src/main/java/com/crossover/techtrial/dto/TopMemberDTO.java
@@ -1,72 +1,67 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.dto;
 
+import java.io.Serializable;
+
 /**
  * @author crossover
- *
  */
-public class TopMemberDTO {
-  
-  /**
-   * Constructor for TopMemberDTO
-   * @param memberId
-   * @param name
-   * @param email
-   * @param bookCount
-   */
-  public TopMemberDTO(Long memberId,
-      String name, 
-      String email, 
-      Integer bookCount) {
-    this.name = name;
-    this.email = email;
-    this.memberId = memberId;
-    this.bookCount = bookCount;
-  }
-  
-  public TopMemberDTO() {
-    
-  }
-  
-  private Long memberId;
-  
-  private String name;
-  
-  private String email;
-  
-  private Integer bookCount;
-
-  public Long getMemberId() {
-    return memberId;
-  }
-
-  public void setMemberId(Long memberId) {
-    this.memberId = memberId;
-  }
-
-  public String getName() {
-    return name;
-  }
-
-  public void setName(String name) {
-    this.name = name;
-  }
-
-  public String getEmail() {
-    return email;
-  }
-
-  public void setEmail(String email) {
-    this.email = email;
-  }
-
-  public Integer getBookCount() {
-    return bookCount;
-  }
-
-  public void setBookCount(Integer bookCount) {
-    this.bookCount = bookCount;
-  }
+public class TopMemberDTO implements Serializable {
+
+    private static final long serialVersionUID = -5241781253380015253L;
+
+    /**
+     * Constructor for TopMemberDTO
+     */
+    public TopMemberDTO(final Long memberId,
+            final String name,
+            final String email,
+            final Integer bookCount) {
+        this.name = name;
+        this.email = email;
+        this.memberId = memberId;
+        this.bookCount = bookCount;
+    }
+
+    private Long memberId;
+
+    private String name;
+
+    private String email;
+
+    private Integer bookCount;
+
+    public Long getMemberId() {
+        return memberId;
+    }
+
+    public void setMemberId(final Long memberId) {
+        this.memberId = memberId;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(final String name) {
+        this.name = name;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(final String email) {
+        this.email = email;
+    }
+
+    public Integer getBookCount() {
+        return bookCount;
+    }
+
+    public void setBookCount(final Integer bookCount) {
+        this.bookCount = bookCount;
+    }
 }
diff --git a/src/main/java/com/crossover/techtrial/dto/TransactionDTO.java b/src/main/java/com/crossover/techtrial/dto/TransactionDTO.java
new file mode 100644
index 0000000..72a900c
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/dto/TransactionDTO.java
@@ -0,0 +1,38 @@
+package com.crossover.techtrial.dto;
+
+import java.io.Serializable;
+
+public class TransactionDTO implements Serializable {
+
+    private static final long serialVersionUID = -5241781253380015253L;
+
+    private Long memberId;
+    private Long bookId;
+
+    public TransactionDTO() {
+
+    }
+
+    public TransactionDTO(Long memberId, Long bookId) {
+        this.memberId = memberId;
+        this.bookId = bookId;
+    }
+
+    public Long getMemberId() {
+        return memberId;
+    }
+
+    public TransactionDTO setMemberId(Long memberId) {
+        this.memberId = memberId;
+        return this;
+    }
+
+    public Long getBookId() {
+        return bookId;
+    }
+
+    public TransactionDTO setBookId(Long bookId) {
+        this.bookId = bookId;
+        return this;
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.java b/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.java
new file mode 100644
index 0000000..eb704f8
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyIssuedException.java
@@ -0,0 +1,10 @@
+package com.crossover.techtrial.exceptions;
+
+public class BookAlreadyIssuedException extends RuntimeException {
+
+    private static final String BOOK_ALREADY_ISSUED = "Book already issued";
+
+    public BookAlreadyIssuedException() {
+        super(BOOK_ALREADY_ISSUED);
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyReturnedException.java b/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyReturnedException.java
new file mode 100644
index 0000000..019f0dc
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/exceptions/BookAlreadyReturnedException.java
@@ -0,0 +1,10 @@
+package com.crossover.techtrial.exceptions;
+
+public class BookAlreadyReturnedException extends RuntimeException {
+
+    private static final String BOOK_ALREADY_RETURNED = "Book already returned";
+
+    public BookAlreadyReturnedException() {
+        super(BOOK_ALREADY_RETURNED);
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/exceptions/BookNotFoundException.java b/src/main/java/com/crossover/techtrial/exceptions/BookNotFoundException.java
new file mode 100644
index 0000000..e06e12b
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/exceptions/BookNotFoundException.java
@@ -0,0 +1,10 @@
+package com.crossover.techtrial.exceptions;
+
+public class BookNotFoundException extends RuntimeException {
+
+    private static final String BOOK_NOT_FOUND = "Book not found";
+
+    public BookNotFoundException() {
+        super(BOOK_NOT_FOUND);
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java b/src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java
deleted file mode 100644
index e39127a..0000000
--- a/src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java
+++ /dev/null
@@ -1,29 +0,0 @@
-package com.crossover.techtrial.exceptions;
-
-import java.util.AbstractMap;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
-import org.springframework.stereotype.Component;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-
-@ControllerAdvice
-@Component
-public class GlobalExceptionHandler {
-
-  private static final Logger LOG = LoggerFactory.getLogger(GlobalExceptionHandler.class);
-
-  /**
-   * Global Exception handler for all exceptions.
-   */
-  @ExceptionHandler
-  public ResponseEntity<AbstractMap.SimpleEntry<String, String>> handle(Exception exception) {
-    // general exception
-    LOG.error("Exception: Unable to process this request. ", exception);
-    AbstractMap.SimpleEntry<String, String> response =
-        new AbstractMap.SimpleEntry<>("message", "Unable to process this request.");
-    return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(response);
-  }
-}
diff --git a/src/main/java/com/crossover/techtrial/exceptions/InvalidTimeRangeException.java b/src/main/java/com/crossover/techtrial/exceptions/InvalidTimeRangeException.java
new file mode 100644
index 0000000..c416974
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/exceptions/InvalidTimeRangeException.java
@@ -0,0 +1,10 @@
+package com.crossover.techtrial.exceptions;
+
+public class InvalidTimeRangeException extends RuntimeException {
+
+    private static final String INVALID_TIME_RANGE = "Invalid time range chosen";
+
+    public InvalidTimeRangeException() {
+        super(INVALID_TIME_RANGE);
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.java b/src/main/java/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.java
new file mode 100644
index 0000000..244c871
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/exceptions/TooManyBooksIssuedException.java
@@ -0,0 +1,10 @@
+package com.crossover.techtrial.exceptions;
+
+public class TooManyBooksIssuedException extends RuntimeException {
+
+    private static final String TOO_MANY_BOOKS_ISSUED = "Too many books issued";
+
+    public TooManyBooksIssuedException() {
+        super(TOO_MANY_BOOKS_ISSUED);
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/exceptions/TransactionNotFoundException.java b/src/main/java/com/crossover/techtrial/exceptions/TransactionNotFoundException.java
new file mode 100644
index 0000000..1ffd76f
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/exceptions/TransactionNotFoundException.java
@@ -0,0 +1,10 @@
+package com.crossover.techtrial.exceptions;
+
+public class TransactionNotFoundException extends RuntimeException {
+
+    private static final String TRANSACTION_NOT_FOUND = "Transaction not found";
+
+    public TransactionNotFoundException() {
+        super(TRANSACTION_NOT_FOUND);
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/exceptions/UserAlreadyExistsException.java b/src/main/java/com/crossover/techtrial/exceptions/UserAlreadyExistsException.java
new file mode 100644
index 0000000..50e8b12
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/exceptions/UserAlreadyExistsException.java
@@ -0,0 +1,10 @@
+package com.crossover.techtrial.exceptions;
+
+public class UserAlreadyExistsException extends RuntimeException {
+
+    private static final String USER_ALREADY_EXISTS = "This user already exists";
+
+    public UserAlreadyExistsException() {
+        super(USER_ALREADY_EXISTS);
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/factory/TransactionFactory.java b/src/main/java/com/crossover/techtrial/factory/TransactionFactory.java
new file mode 100644
index 0000000..9f68c92
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/factory/TransactionFactory.java
@@ -0,0 +1,33 @@
+package com.crossover.techtrial.factory;
+
+import com.crossover.techtrial.model.Book;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.model.Transaction;
+import java.time.Clock;
+import java.time.LocalDateTime;
+
+public class TransactionFactory {
+
+    private static TransactionFactory ourInstance = new TransactionFactory();
+
+    public static TransactionFactory getInstance() {
+        return ourInstance;
+    }
+
+    private TransactionFactory() {
+    }
+
+    public Transaction buildTransactionForBookAndMember(final Book book, final Member member) {
+        return buildTransactionForBookAndMember(book, member, Clock.systemDefaultZone());
+    }
+
+    Transaction buildTransactionForBookAndMember(final Book book, final Member member, final Clock clock) {
+        final Transaction transaction = new Transaction();
+
+        transaction.setBook(book);
+        transaction.setMember(member);
+        transaction.setDateOfIssue(LocalDateTime.now(clock));
+
+        return transaction;
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/model/Book.java b/src/main/java/com/crossover/techtrial/model/Book.java
index b0ecd65..9c0b38b 100644
--- a/src/main/java/com/crossover/techtrial/model/Book.java
+++ b/src/main/java/com/crossover/techtrial/model/Book.java
@@ -1,5 +1,5 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.model;
 
@@ -13,76 +13,81 @@ import javax.persistence.Table;
 
 /**
  * @author kshah
- *
  */
 @Entity
 @Table(name = "book")
-public class Book implements Serializable{
+public class Book implements Serializable {
+
+    /**
+     *
+     */
+    private static final long serialVersionUID = -5241781253380015253L;
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    @Column(name = "title")
+    private String title;
 
-  /**
-   * 
-   */
-  private static final long serialVersionUID = -5241781253380015253L;
-  
-  @Id
-  @GeneratedValue(strategy = GenerationType.IDENTITY)
-  Long id;
+    public Long getId() {
+        return id;
+    }
 
-  @Column(name = "title")
-  String title;
+    public void setId(final Long id) {
+        this.id = id;
+    }
 
-  public Long getId() {
-    return id;
-  }
+    public String getTitle() {
+        return title;
+    }
 
-  public void setId(Long id) {
-    this.id = id;
-  }
+    public void setTitle(final String title) {
+        this.title = title;
+    }
 
-  public String getTitle() {
-    return title;
-  }
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + ((id == null) ? 0 : id.hashCode());
+        result = prime * result + ((title == null) ? 0 : title.hashCode());
+        return result;
+    }
 
-  public void setTitle(String title) {
-    this.title = title;
-  }
-  
-  @Override
-  public int hashCode() {
-    final int prime = 31;
-    int result = 1;
-    result = prime * result + ((id == null) ? 0 : id.hashCode());
-    result = prime * result + ((title == null) ? 0 : title.hashCode());
-    return result;
-  }
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        Book other = (Book) obj;
+        if (id == null) {
+            if (other.id != null) {
+                return false;
+            }
+        } else if (!id.equals(other.id)) {
+            return false;
+        }
+        if (title == null) {
+            if (other.title != null) {
+                return false;
+            }
+        } else if (!title.equals(other.title)) {
+            return false;
+        }
+        return true;
+    }
 
-  @Override
-  public boolean equals(Object obj) {
-    if (this == obj)
-      return true;
-    if (obj == null)
-      return false;
-    if (getClass() != obj.getClass())
-      return false;
-    Book other = (Book) obj;
-    if (id == null) {
-      if (other.id != null)
-        return false;
-    } else if (!id.equals(other.id))
-      return false;
-    if (title == null) {
-      if (other.title != null)
-        return false;
-    } else if (!title.equals(other.title))
-      return false;
-    return true;
-  }
+    @Override
+    public String toString() {
+        return "Book [id=" + id + ", title=" + title + "]";
+    }
 
-  @Override
-  public String toString() {
-    return "Book [id=" + id + ", title=" + title + "]";
-  }
-  
-  
 
 }
diff --git a/src/main/java/com/crossover/techtrial/model/Member.java b/src/main/java/com/crossover/techtrial/model/Member.java
index 99cfb29..4029df3 100644
--- a/src/main/java/com/crossover/techtrial/model/Member.java
+++ b/src/main/java/com/crossover/techtrial/model/Member.java
@@ -1,5 +1,5 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.model;
 
@@ -13,116 +13,124 @@ import javax.persistence.GeneratedValue;
 import javax.persistence.GenerationType;
 import javax.persistence.Id;
 import javax.persistence.Table;
+import javax.validation.constraints.Pattern;
 
 /**
  * @author kshah
- *
  */
 @Entity
 @Table(name = "member")
-public class Member implements Serializable{
-  
-  private static final long serialVersionUID = 9045098179799205444L;
-  
-  @Id
-  @GeneratedValue(strategy = GenerationType.IDENTITY)
-  Long id;
-
-  @Column(name = "name")
-  String name;
-
-  @Column(name = "email")
-  String email;
-  
-  @Enumerated(EnumType.STRING)
-  MembershipStatus membershipStatus;
-  
-  @Column(name = "membership_start_date")
-  LocalDateTime membershipStartDate;
-
-  public Long getId() {
-    return id;
-  }
-
-  public void setId(Long id) {
-    this.id = id;
-  }
-
-  public String getName() {
-    return name;
-  }
-
-  public void setName(String name) {
-    this.name = name;
-  }
-
-  public String getEmail() {
-    return email;
-  }
-
-  public void setEmail(String email) {
-    this.email = email;
-  }
-
-  public MembershipStatus getMembershipStatus() {
-    return membershipStatus;
-  }
-
-  public void setMembershipStatus(MembershipStatus membershipStatus) {
-    this.membershipStatus = membershipStatus;
-  }
-
-  public LocalDateTime getMembershipStartDate() {
-    return membershipStartDate;
-  }
-
-  public void setMembershipStartDate(LocalDateTime membershipStartDate) {
-    this.membershipStartDate = membershipStartDate;
-  }
-
-  @Override
-  public int hashCode() {
-    final int prime = 31;
-    int result = 1;
-    result = prime * result + ((email == null) ? 0 : email.hashCode());
-    result = prime * result + ((id == null) ? 0 : id.hashCode());
-    result = prime * result + ((name == null) ? 0 : name.hashCode());
-    return result;
-  }
-
-  @Override
-  public boolean equals(Object obj) {
-    if (this == obj)
-      return true;
-    if (obj == null)
-      return false;
-    if (getClass() != obj.getClass())
-      return false;
-    Member other = (Member) obj;
-    if (email == null) {
-      if (other.email != null)
-        return false;
-    } else if (!email.equals(other.email))
-      return false;
-    if (id == null) {
-      if (other.id != null)
-        return false;
-    } else if (!id.equals(other.id))
-      return false;
-    if (name == null) {
-      if (other.name != null)
-        return false;
-    } else if (!name.equals(other.name))
-      return false;
-    return true;
-  }
-
-  @Override
-  public String toString() {
-    return "Member [id=" + id + ", name=" + name + ", email=" + email + "]";
-  }
-  
-  
-  
+public class Member implements Serializable {
+
+    private static final long serialVersionUID = 9045098179799205444L;
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    @Column(name = "name")
+    @Pattern(regexp = "([a-zA-Z])([\\w\\d\\s]{1,99})", message = "Name must be between 2 and 100 characters")
+    private String name;
+
+    @Column(name = "email")
+    private String email;
+
+    @Enumerated(EnumType.STRING)
+    private MembershipStatus membershipStatus;
+
+    @Column(name = "membership_start_date")
+    private LocalDateTime membershipStartDate;
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(final Long id) {
+        this.id = id;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(final String name) {
+        this.name = name;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(final String email) {
+        this.email = email;
+    }
+
+    public MembershipStatus getMembershipStatus() {
+        return membershipStatus;
+    }
+
+    public void setMembershipStatus(final MembershipStatus membershipStatus) {
+        this.membershipStatus = membershipStatus;
+    }
+
+    public LocalDateTime getMembershipStartDate() {
+        return membershipStartDate;
+    }
+
+    public void setMembershipStartDate(final LocalDateTime membershipStartDate) {
+        this.membershipStartDate = membershipStartDate;
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + ((email == null) ? 0 : email.hashCode());
+        result = prime * result + ((id == null) ? 0 : id.hashCode());
+        result = prime * result + ((name == null) ? 0 : name.hashCode());
+        return result;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        Member other = (Member) obj;
+        if (email == null) {
+            if (other.email != null) {
+                return false;
+            }
+        } else if (!email.equals(other.email)) {
+            return false;
+        }
+        if (id == null) {
+            if (other.id != null) {
+                return false;
+            }
+        } else if (!id.equals(other.id)) {
+            return false;
+        }
+        if (name == null) {
+            if (other.name != null) {
+                return false;
+            }
+        } else if (!name.equals(other.name)) {
+            return false;
+        }
+        return true;
+    }
+
+    @Override
+    public String toString() {
+        return "Member [id=" + id + ", name=" + name + ", email=" + email + "]";
+    }
+
 
 }
diff --git a/src/main/java/com/crossover/techtrial/model/Transaction.java b/src/main/java/com/crossover/techtrial/model/Transaction.java
index 4a9a262..e147cab 100644
--- a/src/main/java/com/crossover/techtrial/model/Transaction.java
+++ b/src/main/java/com/crossover/techtrial/model/Transaction.java
@@ -1,5 +1,5 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.model;
 
@@ -11,85 +11,83 @@ import javax.persistence.GeneratedValue;
 import javax.persistence.GenerationType;
 import javax.persistence.Id;
 import javax.persistence.JoinColumn;
-import javax.persistence.OneToOne;
+import javax.persistence.ManyToOne;
 import javax.persistence.Table;
 
 
 /**
  * @author kshah
- *
  */
 @Entity
-@Table(name="transaction")
+@Table(name = "transaction")
 public class Transaction implements Serializable {
 
-  /**
-   * 
-   */
-  private static final long serialVersionUID = 8951221480021840448L;
-  
-  @Id
-  @GeneratedValue(strategy = GenerationType.IDENTITY)
-  Long id;
-  
-  @OneToOne
-  @JoinColumn(name = "book_id", referencedColumnName = "id")
-  Book book;
-  
-  @OneToOne
-  @JoinColumn(name="member_id", referencedColumnName="id")
-  Member member;
-  //Date and time of issuance of this book
-  @Column(name="date_of_issue")
-  LocalDateTime dateOfIssue;
-  
-  //Date and time of return of this book
-  @Column(name="date_of_return")
-  LocalDateTime dateOfReturn;
-
-  public Long getId() {
-    return id;
-  }
-
-  public void setId(Long id) {
-    this.id = id;
-  }
-
-  public Book getBook() {
-    return book;
-  }
-
-  public void setBook(Book book) {
-    this.book = book;
-  }
-
-  public Member getMember() {
-    return member;
-  }
-
-  public void setMember(Member member) {
-    this.member = member;
-  }
-
-  public LocalDateTime getDateOfIssue() {
-    return dateOfIssue;
-  }
-
-  public void setDateOfIssue(LocalDateTime dateOfIssue) {
-    this.dateOfIssue = dateOfIssue;
-  }
-
-  public LocalDateTime getDateOfReturn() {
-    return dateOfReturn;
-  }
-
-  public void setDateOfReturn(LocalDateTime dateOfReturn) {
-    this.dateOfReturn = dateOfReturn;
-  }
-
-  @Override
-  public String toString() {
-    return "Transaction [id=" + id + ", book=" + book + ", member=" + member + ", dateOfIssue=" + dateOfIssue + ", dateOfReturn=" + dateOfReturn + "]";
-  }
+    private static final long serialVersionUID = 8951221480021840448L;
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    @ManyToOne
+    @JoinColumn(name = "book_id", referencedColumnName = "id")
+    private Book book;
+
+    @ManyToOne
+    @JoinColumn(name = "member_id", referencedColumnName = "id")
+    private Member member;
+
+    //Date and time of issuance of this book
+    @Column(name = "date_of_issue")
+    private LocalDateTime dateOfIssue;
+
+    //Date and time of return of this book
+    @Column(name = "date_of_return")
+    private LocalDateTime dateOfReturn;
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(final Long id) {
+        this.id = id;
+    }
+
+    public Book getBook() {
+        return book;
+    }
+
+    public void setBook(final Book book) {
+        this.book = book;
+    }
+
+    public Member getMember() {
+        return member;
+    }
+
+    public void setMember(final Member member) {
+        this.member = member;
+    }
+
+    public LocalDateTime getDateOfIssue() {
+        return dateOfIssue;
+    }
+
+    public void setDateOfIssue(final LocalDateTime dateOfIssue) {
+        this.dateOfIssue = dateOfIssue;
+    }
+
+    public LocalDateTime getDateOfReturn() {
+        return dateOfReturn;
+    }
+
+    public void setDateOfReturn(final LocalDateTime dateOfReturn) {
+        this.dateOfReturn = dateOfReturn;
+    }
+
+    @Override
+    public String toString() {
+        return "Transaction [id=" + id + ", book=" + book + ", member=" + member + ", dateOfIssue=" + dateOfIssue
+                + ", dateOfReturn=" + dateOfReturn + "]";
+    }
 
 }
diff --git a/src/main/java/com/crossover/techtrial/repositories/MemberRepository.java b/src/main/java/com/crossover/techtrial/repositories/MemberRepository.java
index 303d98a..71816ce 100644
--- a/src/main/java/com/crossover/techtrial/repositories/MemberRepository.java
+++ b/src/main/java/com/crossover/techtrial/repositories/MemberRepository.java
@@ -1,5 +1,5 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.repositories;
 
@@ -11,10 +11,15 @@ import com.crossover.techtrial.model.Member;
 
 /**
  * Person repository for basic operations on Person entity.
+ *
  * @author crossover
  */
-@RestResource(exported=false)
+@RestResource(exported = false)
 public interface MemberRepository extends PagingAndSortingRepository<Member, Long> {
-  Optional<Member> findById(Long id);
-  List<Member> findAll();
+
+    Optional<Member> findById(Long id);
+
+    List<Member> findAll();
+
+    Member findByEmail(String email);
 }
diff --git a/src/main/java/com/crossover/techtrial/repositories/TransactionRepository.java b/src/main/java/com/crossover/techtrial/repositories/TransactionRepository.java
index cba1dbe..81dcd43 100644
--- a/src/main/java/com/crossover/techtrial/repositories/TransactionRepository.java
+++ b/src/main/java/com/crossover/techtrial/repositories/TransactionRepository.java
@@ -1,17 +1,24 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.repositories;
 
 import com.crossover.techtrial.model.Transaction;
+import java.time.LocalDateTime;
+import java.util.List;
+import java.util.Optional;
 import org.springframework.data.repository.CrudRepository;
 import org.springframework.data.rest.core.annotation.RestResource;
 
 /**
  * @author crossover
- *
  */
 @RestResource(exported = false)
 public interface TransactionRepository extends CrudRepository<Transaction, Long> {
 
+    Optional<Transaction> findByBook_IdAndDateOfReturnNull(Long bookId);
+
+    List<Transaction> findAllByDateOfReturnBetween(LocalDateTime startTime, LocalDateTime endTime);
+
+    List<Transaction> findAllByMember_IdAndAndDateOfReturnNull(Long memberId);
 }
diff --git a/src/main/java/com/crossover/techtrial/service/BookService.java b/src/main/java/com/crossover/techtrial/service/BookService.java
index 00dbba7..b230acc 100644
--- a/src/main/java/com/crossover/techtrial/service/BookService.java
+++ b/src/main/java/com/crossover/techtrial/service/BookService.java
@@ -1,5 +1,5 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.service;
 
@@ -8,15 +8,14 @@ import com.crossover.techtrial.model.Book;
 
 /**
  * BookService interface for Books.
- * @author cossover
  *
+ * @author cossover
  */
 public interface BookService {
-  
-  public List<Book> getAll();
-  
-  public Book save(Book p);
-  
-  public Book findById(Long bookId);
-  
+
+    List<Book> getAll();
+
+    Book save(Book p);
+
+    Book findById(Long bookId);
 }
diff --git a/src/main/java/com/crossover/techtrial/service/BookServiceImpl.java b/src/main/java/com/crossover/techtrial/service/BookServiceImpl.java
index a8422db..f5192a7 100644
--- a/src/main/java/com/crossover/techtrial/service/BookServiceImpl.java
+++ b/src/main/java/com/crossover/techtrial/service/BookServiceImpl.java
@@ -1,46 +1,43 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.service;
 
+import com.crossover.techtrial.exceptions.BookNotFoundException;
+import com.crossover.techtrial.model.Book;
+import com.crossover.techtrial.repositories.BookRepository;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Optional;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
-import com.crossover.techtrial.model.Book;
-import com.crossover.techtrial.repositories.BookRepository;
-import com.crossover.techtrial.repositories.TransactionRepository;
 
 /**
  * @author crossover
- *
  */
 @Service
-public class BookServiceImpl implements BookService{
-
-  @Autowired
-  BookRepository bookRepository;
-  
-  @Autowired
-  TransactionRepository transactionRepository;
-  
-  @Override
-  public List<Book> getAll() {
-    List<Book> personList = new ArrayList<>();
-    bookRepository.findAll().forEach(personList::add);
-    return personList;
-    
-  }
-  
-  public Book save(Book p) {
-    return bookRepository.save(p);
-  }
-
-  @Override
-  public Book findById(Long bookId) {
-    Optional<Book> dbPerson = bookRepository.findById(bookId);
-    return dbPerson.orElse(null);
-  }
+public class BookServiceImpl implements BookService {
+
+    private BookRepository bookRepository;
+
+    public BookServiceImpl(final BookRepository bookRepository) {
+        this.bookRepository = bookRepository;
+    }
+
+    @Override
+    public List<Book> getAll() {
+        final List<Book> personList = new ArrayList<>();
+        bookRepository.findAll().forEach(personList::add);
+        return personList;
+
+    }
+
+    public Book save(final Book p) {
+        return bookRepository.save(p);
+    }
 
+    @Override
+    public Book findById(final Long bookId) {
+        final Optional<Book> bookOptional = bookRepository.findById(bookId);
+        return bookOptional.orElseThrow(BookNotFoundException::new);
+    }
 }
diff --git a/src/main/java/com/crossover/techtrial/service/MemberService.java b/src/main/java/com/crossover/techtrial/service/MemberService.java
index a4fe6ce..f5244a1 100644
--- a/src/main/java/com/crossover/techtrial/service/MemberService.java
+++ b/src/main/java/com/crossover/techtrial/service/MemberService.java
@@ -1,5 +1,5 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.service;
 
@@ -8,15 +8,14 @@ import com.crossover.techtrial.model.Member;
 
 /**
  * RideService for rides.
- * @author crossover
  *
+ * @author crossover
  */
 public interface MemberService {
-  
-  public Member save(Member member);
-  
-  public Member findById(Long memberId);
-  
-  public List<Member> findAll();
-  
+
+    Member save(Member member);
+
+    Member findById(Long memberId);
+
+    List<Member> findAll();
 }
diff --git a/src/main/java/com/crossover/techtrial/service/MemberServiceImpl.java b/src/main/java/com/crossover/techtrial/service/MemberServiceImpl.java
index 5fbf1a1..9a4ba3b 100644
--- a/src/main/java/com/crossover/techtrial/service/MemberServiceImpl.java
+++ b/src/main/java/com/crossover/techtrial/service/MemberServiceImpl.java
@@ -1,38 +1,45 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.service;
 
+import com.crossover.techtrial.exceptions.UserAlreadyExistsException;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.repositories.MemberRepository;
 import java.util.List;
 import java.util.Optional;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
-import com.crossover.techtrial.model.Member;
-import com.crossover.techtrial.repositories.MemberRepository;
 
 /**
  * @author crossover
- *
  */
 @Service
-public class MemberServiceImpl implements MemberService{
+public class MemberServiceImpl implements MemberService {
+
+    private MemberRepository memberRepository;
+
+    public MemberServiceImpl(final MemberRepository memberRepository) {
+        this.memberRepository = memberRepository;
+    }
+
+    @Override
+    public Member save(final Member member) {
+        final Member existingMember = memberRepository.findByEmail(member.getEmail());
+        if (existingMember == null) {
+            return memberRepository.save(member);
+        } else {
+            throw new UserAlreadyExistsException();
+        }
+    }
 
-  @Autowired
-  MemberRepository memberRepository;
-  
-  public Member save(Member member) {
-    return memberRepository.save(member);
-  }
-  
-  public Member findById(Long memberId) {
-    Optional<Member> optionalMember = memberRepository.findById(memberId);
-    if (optionalMember.isPresent()) {
-      return optionalMember.get();
-    }else return null;
-  }
-  
-  public List<Member> findAll() {
-    return memberRepository.findAll();
-  }
+    @Override
+    public Member findById(final Long memberId) {
+        final Optional<Member> optionalMember = memberRepository.findById(memberId);
+        return optionalMember.orElse(null);
+    }
 
+    @Override
+    public List<Member> findAll() {
+        return memberRepository.findAll();
+    }
 }
diff --git a/src/main/java/com/crossover/techtrial/service/TopMemberService.java b/src/main/java/com/crossover/techtrial/service/TopMemberService.java
new file mode 100644
index 0000000..77a4d01
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/service/TopMemberService.java
@@ -0,0 +1,10 @@
+package com.crossover.techtrial.service;
+
+import com.crossover.techtrial.dto.TopMemberDTO;
+import java.time.LocalDateTime;
+import java.util.List;
+
+public interface TopMemberService {
+
+    List<TopMemberDTO> getTopFiveMembersFromStartTimeToEndTime(LocalDateTime startTime, LocalDateTime endTime);
+}
diff --git a/src/main/java/com/crossover/techtrial/service/TopMemberServiceImpl.java b/src/main/java/com/crossover/techtrial/service/TopMemberServiceImpl.java
new file mode 100644
index 0000000..9461d4a
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/service/TopMemberServiceImpl.java
@@ -0,0 +1,54 @@
+package com.crossover.techtrial.service;
+
+import com.crossover.techtrial.dto.TopMemberDTO;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.model.Transaction;
+import java.time.LocalDateTime;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Optional;
+import java.util.stream.Collectors;
+import org.springframework.stereotype.Service;
+
+@Service
+public class TopMemberServiceImpl implements TopMemberService {
+
+    private static final Integer TOP_FIVE_MEMBERS = 5;
+    private static final Integer NULL_BOOK_COUNT = 0;
+
+    private TransactionService transactionService;
+
+    public TopMemberServiceImpl(TransactionService transactionService) {
+        this.transactionService = transactionService;
+    }
+
+    @Override
+    public List<TopMemberDTO> getTopFiveMembersFromStartTimeToEndTime(final LocalDateTime startTime,
+            final LocalDateTime endTime) {
+        final List<Transaction> transactions = transactionService.findAllByDateOfReturnBetween(startTime, endTime);
+
+        final Map<Member, Integer> memberAndBookCountMap = getMemberIntegerMapFromTransactions(transactions);
+
+        return memberAndBookCountMap
+                .keySet()
+                .stream()
+                .sorted((member1, member2) -> Integer
+                        .compare(memberAndBookCountMap.get(member2), memberAndBookCountMap.get(member1)))
+                .limit(TOP_FIVE_MEMBERS)
+                .map(member -> new TopMemberDTO(member.getId(), member.getName(), member.getEmail(),
+                        memberAndBookCountMap.get(member)))
+                .collect(Collectors.toList());
+    }
+
+    private static Map<Member, Integer> getMemberIntegerMapFromTransactions(List<Transaction> transactions) {
+        final Map<Member, Integer> memberAndBookCountMap = new HashMap<>();
+
+        transactions.forEach(transaction -> {
+            final Member member = transaction.getMember();
+            final Integer bookCount = Optional.ofNullable(memberAndBookCountMap.get(member)).orElse(NULL_BOOK_COUNT);
+            memberAndBookCountMap.put(member, bookCount + 1);
+        });
+        return memberAndBookCountMap;
+    }
+}
diff --git a/src/main/java/com/crossover/techtrial/service/TransactionService.java b/src/main/java/com/crossover/techtrial/service/TransactionService.java
new file mode 100644
index 0000000..d59cd70
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/service/TransactionService.java
@@ -0,0 +1,15 @@
+package com.crossover.techtrial.service;
+
+import com.crossover.techtrial.dto.TransactionDTO;
+import com.crossover.techtrial.model.Transaction;
+import java.time.LocalDateTime;
+import java.util.List;
+
+public interface TransactionService {
+
+    Transaction issueBookToMember(TransactionDTO transactionDTO);
+
+    Transaction returnBookTransaction(Long transactionId);
+
+    List<Transaction> findAllByDateOfReturnBetween(LocalDateTime startTime, LocalDateTime endTime);
+}
diff --git a/src/main/java/com/crossover/techtrial/service/TransactionServiceImpl.java b/src/main/java/com/crossover/techtrial/service/TransactionServiceImpl.java
new file mode 100644
index 0000000..173fa18
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/service/TransactionServiceImpl.java
@@ -0,0 +1,98 @@
+package com.crossover.techtrial.service;
+
+import com.crossover.techtrial.dto.TransactionDTO;
+import com.crossover.techtrial.exceptions.BookAlreadyIssuedException;
+import com.crossover.techtrial.exceptions.BookAlreadyReturnedException;
+import com.crossover.techtrial.exceptions.InvalidTimeRangeException;
+import com.crossover.techtrial.exceptions.TooManyBooksIssuedException;
+import com.crossover.techtrial.exceptions.TransactionNotFoundException;
+import com.crossover.techtrial.factory.TransactionFactory;
+import com.crossover.techtrial.model.Book;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.model.Transaction;
+import com.crossover.techtrial.repositories.TransactionRepository;
+import java.time.LocalDateTime;
+import java.util.List;
+import java.util.Optional;
+import org.springframework.stereotype.Service;
+
+@Service
+public class TransactionServiceImpl implements TransactionService {
+
+    private static final String BOOK_ID_KEY = "bookId";
+    private static final String MEMBER_ID_KEY = "memberId";
+    private static final int MAX_PENDING_TRANSACTIONS = 5;
+
+    private TransactionRepository transactionRepository;
+    private BookService bookService;
+    private MemberService memberService;
+
+    public TransactionServiceImpl(final TransactionRepository transactionRepository, final BookService bookService,
+            final MemberService memberService) {
+        this.transactionRepository = transactionRepository;
+        this.bookService = bookService;
+        this.memberService = memberService;
+    }
+
+    /* @TODO: Handle member null, wrap MAP API */
+    @Override
+    public Transaction issueBookToMember(final TransactionDTO transactionDTO) {
+        final Long bookId = transactionDTO.getBookId();
+        final Long memberId = transactionDTO.getMemberId();
+
+        final Book book = bookService.findById(bookId);
+        final Member member = memberService.findById(memberId);
+
+        checkExistingTransactionsForBookId(bookId);
+
+        checkCurrentTransactionsForMemberId(memberId);
+
+        final Transaction transaction = TransactionFactory.getInstance().buildTransactionForBookAndMember(book, member);
+
+        return transactionRepository.save(transaction);
+    }
+
+    @Override
+    public Transaction returnBookTransaction(final Long transactionId) {
+        final Optional<Transaction> transactionOptional = transactionRepository.findById(transactionId);
+
+        if (transactionOptional.isPresent()) {
+            final Transaction transaction = transactionOptional.get();
+            if (transaction.getDateOfReturn() == null) {
+                transaction.setDateOfReturn(LocalDateTime.now());
+                return transactionRepository.save(transaction);
+            } else {
+                throw new BookAlreadyReturnedException();
+            }
+        } else {
+            throw new TransactionNotFoundException();
+        }
+    }
+
+    @Override
+    public List<Transaction> findAllByDateOfReturnBetween(final LocalDateTime startTime, final LocalDateTime endTime) {
+        if (startTime.isAfter(endTime)) {
+            throw new InvalidTimeRangeException();
+        }
+
+        return transactionRepository.findAllByDateOfReturnBetween(startTime, endTime);
+    }
+
+    private void checkExistingTransactionsForBookId(final Long bookId) {
+        final Optional<Transaction> transactionOptional = transactionRepository
+                .findByBook_IdAndDateOfReturnNull(bookId);
+
+        if (transactionOptional.isPresent() && transactionOptional.get().getDateOfReturn() == null) {
+            throw new BookAlreadyIssuedException();
+        }
+    }
+
+    private void checkCurrentTransactionsForMemberId(final Long memberId) {
+        final List<Transaction> currentTransactions = transactionRepository
+                .findAllByMember_IdAndAndDateOfReturnNull(memberId);
+
+        if (currentTransactions.size() >= MAX_PENDING_TRANSACTIONS) {
+            throw new TooManyBooksIssuedException();
+        }
+    }
+}
diff --git a/src/main/resources/db/changelog/db.changelog-2.0.xml b/src/main/resources/db/changelog/db.changelog-2.0.xml
new file mode 100644
index 0000000..1d86cb8
--- /dev/null
+++ b/src/main/resources/db/changelog/db.changelog-2.0.xml
@@ -0,0 +1,23 @@
+<?xml version="1.1" encoding="UTF-8" standalone="no"?>
+<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
+    <changeSet author="thomas_heniart" id="01082019_change_set">
+        <dropForeignKeyConstraint baseTableName="transaction" constraintName="fk_transaction_book"/>
+        <dropForeignKeyConstraint baseTableName="transaction" constraintName="fk_transaction_member"/>
+        <addForeignKeyConstraint baseColumnNames="book_id"
+            baseTableName="transaction"
+            constraintName="fk_transaction_book"
+            onDelete="NO ACTION"
+            onUpdate="RESTRICT"
+            referencedColumnNames="id"
+            referencedTableName="book"/>
+        <addForeignKeyConstraint baseColumnNames="member_id"
+            baseTableName="transaction"
+            constraintName="fk_transaction_member"
+            onDelete="NO ACTION"
+            onUpdate="RESTRICT"
+            referencedColumnNames="id"
+            referencedTableName="member"/>
+    </changeSet>
+</databaseChangeLog>
\ No newline at end of file
diff --git a/src/main/resources/db/changelog/db.changelog-master.xml b/src/main/resources/db/changelog/db.changelog-master.xml
index ea61ac5..9930574 100644
--- a/src/main/resources/db/changelog/db.changelog-master.xml
+++ b/src/main/resources/db/changelog/db.changelog-master.xml
@@ -1,6 +1,7 @@
 <databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
-  <include file="db/changelog/db.changelog-1.0.xml"/>
+    <include file="db/changelog/db.changelog-1.0.xml"/>
+    <include file="db/changelog/db.changelog-2.0.xml"/>
 </databaseChangeLog>
\ No newline at end of file
diff --git a/src/test/java/com/crossover/techtrial/controller/BookControllerTest.java b/src/test/java/com/crossover/techtrial/controller/BookControllerTest.java
new file mode 100644
index 0000000..a256102
--- /dev/null
+++ b/src/test/java/com/crossover/techtrial/controller/BookControllerTest.java
@@ -0,0 +1,111 @@
+package com.crossover.techtrial.controller;
+
+import static com.crossover.techtrial.util.HttpEntityHelper.getHttpEntityForJson;
+import static org.hamcrest.Matchers.is;
+import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.Mockito.doReturn;
+import static org.mockito.Mockito.doThrow;
+import static org.mockito.Mockito.when;
+
+import com.crossover.techtrial.exceptions.BookNotFoundException;
+import com.crossover.techtrial.model.Book;
+import com.crossover.techtrial.service.BookService;
+import java.util.Collections;
+import java.util.List;
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.ErrorCollector;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
+import org.springframework.boot.test.mock.mockito.MockBean;
+import org.springframework.boot.test.web.client.TestRestTemplate;
+import org.springframework.http.HttpEntity;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
+
+@RunWith(SpringJUnit4ClassRunner.class)
+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
+public class BookControllerTest {
+
+    private static final String GET_BOOKS_URL = "/api/book";
+    private static final String POST_BOOK_URL = "/api/book";
+    private static final String CREATE_BOOK_JSON = "{"
+            + "\"title\": \"My test book\""
+            + "}";
+    private static final Long BOOK_NOT_FOUND_ID = 111L;
+    private static final String GET_BOOK_NOT_FOUND_URL = "/api/book/111";
+    private static final Long BOOK_ID = 1L;
+    private static final String GET_BOOK_URL = "/api/book/" + BOOK_ID;
+
+    @Rule
+    public final ErrorCollector collector = new ErrorCollector();
+
+    @Autowired
+    private TestRestTemplate template;
+
+    @MockBean
+    private BookService bookService;
+
+    private Book bookMock;
+
+    @Before
+    public void setUp() throws Exception {
+        bookMock = new Book();
+    }
+
+    @Test
+    public void givenNoBooksWhenGetBooksThenEmpty() throws Exception {
+        //Arrange
+        when(bookService.getAll()).thenReturn(Collections.emptyList());
+
+        //Act
+        final ResponseEntity<List> response = template.getForEntity(GET_BOOKS_URL, List.class);
+
+        //Assert
+        collector.checkThat(response.getBody().isEmpty(), is(true));
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.OK));
+    }
+
+    @Test
+    public void givenBookJsonWhenSaveThenBookSaved() throws Exception {
+        //Arrange
+        doReturn(bookMock).when(bookService).save(any(Book.class));
+        final HttpEntity book = getHttpEntityForJson(CREATE_BOOK_JSON);
+
+        //Act
+        final ResponseEntity<Book> response = template.postForEntity(POST_BOOK_URL, book, Book.class);
+
+        //Assert
+        collector.checkThat(response.getBody(), is(bookMock));
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.OK));
+    }
+
+    @Test
+    public void givenWrongIdWhenGetRideByIdThenNotFound() throws Exception {
+        //Arrange
+        doThrow(new BookNotFoundException()).when(bookService).findById(BOOK_NOT_FOUND_ID);
+
+        //Act
+        final ResponseEntity<Book> response = template.getForEntity(GET_BOOK_NOT_FOUND_URL, Book.class);
+
+        //Assert
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.NOT_FOUND));
+    }
+
+    @Test
+    public void givenIdWhenGetRideByIdThenBookFound() throws Exception {
+        //Arrange
+        doReturn(bookMock).when(bookService).findById(BOOK_ID);
+
+        //Act
+        final ResponseEntity<Book> response = template.getForEntity(GET_BOOK_URL, Book.class);
+
+        //Assert
+        collector.checkThat(response.getBody(), is(bookMock));
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.OK));
+    }
+}
diff --git a/src/test/java/com/crossover/techtrial/controller/MemberControllerTest.java b/src/test/java/com/crossover/techtrial/controller/MemberControllerTest.java
index 0368a7e..c7d0c9c 100644
--- a/src/test/java/com/crossover/techtrial/controller/MemberControllerTest.java
+++ b/src/test/java/com/crossover/techtrial/controller/MemberControllerTest.java
@@ -1,71 +1,150 @@
 /**
- * 
+ *
  */
 package com.crossover.techtrial.controller;
 
-import org.junit.Assert;
+import static com.crossover.techtrial.util.HttpEntityHelper.getHttpEntityForJson;
+import static org.hamcrest.Matchers.is;
+import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.Mockito.doReturn;
+import static org.mockito.Mockito.doThrow;
+
+import com.crossover.techtrial.exceptions.InvalidTimeRangeException;
+import com.crossover.techtrial.exceptions.UserAlreadyExistsException;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.service.MemberService;
+import com.crossover.techtrial.service.TopMemberService;
+import java.time.LocalDateTime;
+import java.util.Arrays;
+import java.util.List;
 import org.junit.Before;
+import org.junit.Rule;
 import org.junit.Test;
+import org.junit.rules.ErrorCollector;
 import org.junit.runner.RunWith;
-import org.mockito.Mock;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
+import org.springframework.boot.test.mock.mockito.MockBean;
 import org.springframework.boot.test.web.client.TestRestTemplate;
 import org.springframework.http.HttpEntity;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.MediaType;
+import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
-import org.springframework.test.web.servlet.MockMvc;
-import org.springframework.test.web.servlet.setup.MockMvcBuilders;
-import com.crossover.techtrial.model.Member;
-import com.crossover.techtrial.repositories.MemberRepository;
 
 /**
  * @author kshah
- *
  */
 @RunWith(SpringJUnit4ClassRunner.class)
 @SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
 public class MemberControllerTest {
-  
-  MockMvc mockMvc;
-  
-  @Mock
-  private MemberController memberController;
-  
-  @Autowired
-  private TestRestTemplate template;
-  
-  @Autowired
-  MemberRepository memberRepository;
-  
-  @Before
-  public void setup() throws Exception {
-    mockMvc = MockMvcBuilders.standaloneSetup(memberController).build();
-  }
-  
-  @Test
-  public void testMemberRegsitrationsuccessful() throws Exception {
-    HttpEntity<Object> member = getHttpEntity(
-        "{\"name\": \"test 1\", \"email\": \"test10000000000001@gmail.com\"," 
-            + " \"membershipStatus\": \"ACTIVE\",\"membershipStartDate\":\"2018-08-08T12:12:12\" }");
-    
-    ResponseEntity<Member> response = template.postForEntity(
-        "/api/member", member, Member.class);
-    
-    Assert.assertEquals("test 1", response.getBody().getName());
-    Assert.assertEquals(200,response.getStatusCode().value());
-    
-    //cleanup the user
-    memberRepository.deleteById(response.getBody().getId());
-  }
-
-  private HttpEntity<Object> getHttpEntity(Object body) {
-    HttpHeaders headers = new HttpHeaders();
-    headers.setContentType(MediaType.APPLICATION_JSON);
-    return new HttpEntity<Object>(body, headers);
-  }
 
+    private static final String GET_MEMBER_NOT_FOUND_URL = "/api/member/1111";
+    private static final Long MEMBER_ID = 1L;
+    private static final String GET_EXISTING_MEMBER_URL = "/api/member/" + MEMBER_ID;
+    private static final String REGISTRATION_URL = "/api/member";
+    private static final String MEMBER_CREATE_JSON =
+            "{\"name\": \"test 1\", \"email\": \"test10000000000001@gmail.com\","
+                    + " \"membershipStatus\": \"ACTIVE\",\"membershipStartDate\":\"2018-08-08T12:12:12\" }";
+    private static final String GET_ALL_MEMBERS = "/api/member";
+    private static final String GET_TOP_MEMBERS_URL = "/api/member/top-member";
+
+    @Rule
+    public final ErrorCollector collector = new ErrorCollector();
+
+    @Autowired
+    private TestRestTemplate template;
+
+    @MockBean
+    private MemberService memberService;
+    @MockBean
+    private TopMemberService topMemberService;
+
+    private Member basicMockedMember;
+
+    private List<Member> members;
+
+    @Before
+    public void setUp() throws Exception {
+        basicMockedMember = new Member();
+        final Member secondMockedMember = new Member();
+        final Member thirdMockedMember = new Member();
+
+        members = Arrays.asList(basicMockedMember, secondMockedMember, thirdMockedMember);
+    }
+
+    @Test
+    public void givenMemberJsonWhenRegistrationThenMemberRegistered() throws Exception {
+        //Arrange
+        doReturn(basicMockedMember).when(memberService).save(any(Member.class));
+        final HttpEntity<Object> member = getHttpEntityForJson(MEMBER_CREATE_JSON);
+
+        //Act
+        final ResponseEntity<Member> response = template.postForEntity(REGISTRATION_URL, member, Member.class);
+
+        //Assert
+        collector.checkThat(response.getBody(), is(basicMockedMember));
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.OK));
+    }
+
+    @Test
+    public void givenNoMemberWhenGetMemberByIdThenMemberNotFound() throws Exception {
+        //Act
+        final ResponseEntity<Member> response = template.getForEntity(GET_MEMBER_NOT_FOUND_URL, Member.class);
+
+        //Assert
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.NOT_FOUND));
+    }
+
+    @Test
+    public void givenExistingMemberWhenGetMemberByIdThenMemberFound() throws Exception {
+        //Arrange
+        doReturn(basicMockedMember).when(memberService).findById(MEMBER_ID);
+
+        //Act
+        final ResponseEntity<Member> response = template.getForEntity(GET_EXISTING_MEMBER_URL, Member.class);
+
+        //Assert
+        collector.checkThat(response.getBody(), is(basicMockedMember));
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.OK));
+    }
+
+    @Test
+    public void givenMembersWhenGetAllThenMembers() throws Exception {
+        //Arrange
+        doReturn(members).when(memberService).findAll();
+
+        //Act
+        final ResponseEntity<List> response = template.getForEntity(GET_ALL_MEMBERS, List.class);
+
+        //Assert
+        collector.checkThat(response.getBody().size(), is(members.size()));
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.OK));
+    }
+
+    @Test
+    public void givenMemberAlreadyExistsWhenRegistrationThenBadRequest() throws Exception {
+        //Arrange
+        doThrow(new UserAlreadyExistsException()).when(memberService).save(any(Member.class));
+        final HttpEntity<Object> member = getHttpEntityForJson(MEMBER_CREATE_JSON);
+
+        //Act
+        final ResponseEntity<Member> response = template.postForEntity(REGISTRATION_URL, member, Member.class);
+
+        //Assert
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.BAD_REQUEST));
+    }
+
+    @Test
+    public void givenInvalidTimeRangeWhenGetTopMembersThenBadRequest() throws Exception {
+        //Arrange
+        doThrow(new InvalidTimeRangeException()).when(topMemberService)
+                .getTopFiveMembersFromStartTimeToEndTime(any(LocalDateTime.class), any(LocalDateTime.class));
+
+        //Act
+        final ResponseEntity<Object> response = template.getForEntity(GET_TOP_MEMBERS_URL, Object.class);
+
+        //Assert
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.BAD_REQUEST));
+    }
 }
diff --git a/src/test/java/com/crossover/techtrial/controller/TransactionControllerTest.java b/src/test/java/com/crossover/techtrial/controller/TransactionControllerTest.java
new file mode 100644
index 0000000..e55a202
--- /dev/null
+++ b/src/test/java/com/crossover/techtrial/controller/TransactionControllerTest.java
@@ -0,0 +1,73 @@
+package com.crossover.techtrial.controller;
+
+import static com.crossover.techtrial.util.HttpEntityHelper.getHttpEntityForJson;
+import static org.hamcrest.Matchers.is;
+import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.Mockito.doThrow;
+
+import com.crossover.techtrial.dto.TransactionDTO;
+import com.crossover.techtrial.exceptions.BookAlreadyIssuedException;
+import com.crossover.techtrial.exceptions.BookNotFoundException;
+import com.crossover.techtrial.model.Transaction;
+import com.crossover.techtrial.service.TransactionService;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.ErrorCollector;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
+import org.springframework.boot.test.mock.mockito.MockBean;
+import org.springframework.boot.test.web.client.TestRestTemplate;
+import org.springframework.http.HttpEntity;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
+
+@RunWith(SpringJUnit4ClassRunner.class)
+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
+public class TransactionControllerTest {
+
+    private static final String TRANSACTION_POST_URL = "/api/transaction";
+    private static final String POST_TRANSACTION_JSON = "{"
+            + "\"bookId\":1,"
+            + "\"memberId\":1"
+            + "}";
+
+    @Rule
+    public final ErrorCollector collector = new ErrorCollector();
+
+    @Autowired
+    private TestRestTemplate template;
+
+    @MockBean
+    private TransactionService transactionService;
+
+    @Test
+    public void givenBookAlreadyIssuedWhenIssueBookThenForbidden() throws Exception {
+        //Arrange
+        doThrow(new BookAlreadyIssuedException()).when(transactionService).issueBookToMember(any(TransactionDTO.class));
+        final HttpEntity<Object> transactionJson = getHttpEntityForJson(POST_TRANSACTION_JSON);
+
+        //Act
+        final ResponseEntity<Transaction> response = template
+                .postForEntity(TRANSACTION_POST_URL, transactionJson, Transaction.class);
+
+        //Assert
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.FORBIDDEN));
+    }
+
+    @Test
+    public void givenBookNotFoundWhenIssueBookThenNotFound() throws Exception {
+        //Arrange
+        doThrow(new BookNotFoundException()).when(transactionService).issueBookToMember(any(TransactionDTO.class));
+        final HttpEntity<Object> transactionJson = getHttpEntityForJson(POST_TRANSACTION_JSON);
+
+        //Act
+        final ResponseEntity<Transaction> response = template
+                .postForEntity(TRANSACTION_POST_URL, transactionJson, Transaction.class);
+
+        //Assert
+        collector.checkThat(response.getStatusCode(), is(HttpStatus.NOT_FOUND));
+    }
+}
diff --git a/src/test/java/com/crossover/techtrial/factory/TransactionFactoryTest.java b/src/test/java/com/crossover/techtrial/factory/TransactionFactoryTest.java
new file mode 100644
index 0000000..5561b99
--- /dev/null
+++ b/src/test/java/com/crossover/techtrial/factory/TransactionFactoryTest.java
@@ -0,0 +1,54 @@
+package com.crossover.techtrial.factory;
+
+import static org.hamcrest.Matchers.is;
+
+import com.crossover.techtrial.model.Book;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.model.Transaction;
+import java.time.Clock;
+import java.time.LocalDateTime;
+import java.time.ZoneId;
+import java.time.ZoneOffset;
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.ErrorCollector;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.mockito.junit.MockitoJUnitRunner;
+
+@RunWith(MockitoJUnitRunner.class)
+public class TransactionFactoryTest {
+
+    private static final LocalDateTime FIXED_DATE = LocalDateTime.of(2019, 1, 8, 18, 18);
+
+    @Rule
+    public final ErrorCollector collector = new ErrorCollector();
+
+    @Mock
+    private Book book;
+    @Mock
+    private Member member;
+
+    private Clock testClock;
+    private LocalDateTime now;
+    private TransactionFactory transactionFactory;
+
+    @Before
+    public void setUp() throws Exception {
+        testClock = Clock.fixed(FIXED_DATE.toInstant(ZoneOffset.UTC), ZoneId.systemDefault());
+        now = LocalDateTime.now(testClock);
+        transactionFactory = TransactionFactory.getInstance();
+    }
+
+    @Test
+    public void givenBookAndMemberWhenBuildTransactionForBookAndMemberThenTransaction() throws Exception {
+        //Act
+        final Transaction transaction = transactionFactory.buildTransactionForBookAndMember(book, member, testClock);
+
+        //Assert
+        collector.checkThat(transaction.getBook(), is(book));
+        collector.checkThat(transaction.getMember(), is(member));
+        collector.checkThat(transaction.getDateOfIssue().isEqual(now), is(true));
+    }
+}
\ No newline at end of file
diff --git a/src/test/java/com/crossover/techtrial/service/BookServiceImplTest.java b/src/test/java/com/crossover/techtrial/service/BookServiceImplTest.java
new file mode 100644
index 0000000..d1155d5
--- /dev/null
+++ b/src/test/java/com/crossover/techtrial/service/BookServiceImplTest.java
@@ -0,0 +1,108 @@
+package com.crossover.techtrial.service;
+
+import static org.hamcrest.Matchers.is;
+import static org.junit.Assert.assertThat;
+import static org.mockito.Mockito.when;
+
+import com.crossover.techtrial.exceptions.BookNotFoundException;
+import com.crossover.techtrial.model.Book;
+import com.crossover.techtrial.repositories.BookRepository;
+import java.util.Collections;
+import java.util.List;
+import java.util.Optional;
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.ExpectedException;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.mockito.junit.MockitoJUnitRunner;
+
+@RunWith(MockitoJUnitRunner.class)
+public class BookServiceImplTest {
+
+    private static final Long NO_BOOK_ID = -1L;
+    private static final Long BOOK_ID = 1L;
+    private static final String BOOK_NOT_FOUND = "Book not found";
+
+    @Rule
+    public final ExpectedException exception = ExpectedException.none();
+
+    @Mock
+    private BookRepository bookRepository;
+    @Mock
+    private Book book;
+
+    private BookService bookService;
+
+    @Before
+    public void setUp() throws Exception {
+        bookService = new BookServiceImpl(bookRepository);
+    }
+
+    @Test
+    public void givenNoBooksWhenGetAllThenEmpty() throws Exception {
+        //Arrange
+        when(bookRepository.findAll()).thenReturn(Collections.emptyList());
+
+        //Act
+        final List<Book> books = bookService.getAll();
+
+        //Assert
+        assertThat(books.isEmpty(), is(true));
+    }
+
+    @Test
+    public void givenBooksWhenGetAllThenBooks() throws Exception {
+        //Arrange
+        final Iterable<Book> booksMocked = mockBooks();
+        when(bookRepository.findAll()).thenReturn(booksMocked);
+
+        //Act
+        final List<Book> books = bookService.getAll();
+
+        //Assert
+        assertThat(books, is(booksMocked));
+    }
+
+    @Test
+    public void givenBookWhenSaveThenBookSaved() throws Exception {
+        //Arrange
+        when(bookRepository.save(book)).thenReturn(book);
+
+        //Act
+        final Book bookSaved = bookService.save(book);
+
+        //Assert
+        assertThat(bookSaved, is(book));
+    }
+
+    @Test
+    public void givenNoBookWhenFindByIdThenException() throws Exception {
+        //Arrange
+        when(bookRepository.findById(NO_BOOK_ID)).thenReturn(Optional.empty());
+
+        //Assert
+        exception.expect(BookNotFoundException.class);
+        exception.expectMessage(BOOK_NOT_FOUND);
+
+        //Act
+        bookService.findById(NO_BOOK_ID);
+    }
+
+    @Test
+    public void givenBookWhenFindByIdThenBook() throws Exception {
+        //Arrange
+        when(bookRepository.findById(BOOK_ID)).thenReturn(Optional.of(book));
+
+        //Act
+        final Book bookFound = bookService.findById(BOOK_ID);
+
+        //Assert
+        assertThat(bookFound, is(book));
+    }
+
+    private Iterable<Book> mockBooks() {
+        return Collections.singletonList(book);
+    }
+}
diff --git a/src/test/java/com/crossover/techtrial/service/MemberServiceImplTest.java b/src/test/java/com/crossover/techtrial/service/MemberServiceImplTest.java
new file mode 100644
index 0000000..c28c0db
--- /dev/null
+++ b/src/test/java/com/crossover/techtrial/service/MemberServiceImplTest.java
@@ -0,0 +1,107 @@
+package com.crossover.techtrial.service;
+
+import static org.hamcrest.CoreMatchers.is;
+import static org.hamcrest.Matchers.nullValue;
+import static org.junit.Assert.assertThat;
+import static org.junit.Assert.assertTrue;
+import static org.mockito.Mockito.when;
+
+import com.crossover.techtrial.exceptions.UserAlreadyExistsException;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.repositories.MemberRepository;
+import java.util.Collections;
+import java.util.List;
+import java.util.Optional;
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.ExpectedException;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.mockito.junit.MockitoJUnitRunner;
+
+@RunWith(MockitoJUnitRunner.class)
+public class MemberServiceImplTest {
+
+    private static final Long WRONG_ID = -1L;
+    private static final Long MEMBER_ID = 1L;
+    private static final String ALREADY_EXISTS_EMAIL = "already@exists.com";
+    private static final String USER_ALREADY_EXISTS = "This user already exists";
+
+    @Rule
+    public final ExpectedException exception = ExpectedException.none();
+
+    @Mock
+    private Member member;
+    @Mock
+    private MemberRepository memberRepository;
+
+    private MemberService memberService;
+
+    @Before
+    public void setUp() throws Exception {
+        memberService = new MemberServiceImpl(memberRepository);
+    }
+
+    @Test
+    public void givenMemberWhenSaveThenMemberSaved() throws Exception {
+        //Arrange
+        when(memberRepository.save(member)).thenReturn(member);
+
+        //Act
+        final Member memberSaved = memberService.save(member);
+
+        //Assert
+        assertThat(memberSaved, is(member));
+    }
+
+    @Test
+    public void givenWrongIdWhenFindByIdThenNull() throws Exception {
+        //Arrange
+        when(memberRepository.findById(WRONG_ID)).thenReturn(Optional.empty());
+
+        //Act
+        final Member memberFound = memberService.findById(WRONG_ID);
+
+        //Assert
+        assertThat(memberFound, nullValue());
+    }
+
+    @Test
+    public void givenIdWhenFindByIdThenMemberNotFound() throws Exception {
+        //Arrange
+        when(memberRepository.findById(MEMBER_ID)).thenReturn(Optional.of(member));
+
+        //Act
+        final Member memberFound = memberService.findById(MEMBER_ID);
+
+        //Assert
+        assertThat(memberFound, is(member));
+    }
+
+    @Test
+    public void givenNoMembersWhenFindAllThenEmptyList() throws Exception {
+        //Arrange
+        when(memberRepository.findAll()).thenReturn(Collections.emptyList());
+
+        //Act
+        final List<Member> allMembers = memberService.findAll();
+
+        //Assert
+        assertTrue(allMembers.isEmpty());
+    }
+
+    @Test
+    public void givenEmailAlreadyExistsWhenSaveThenException() throws Exception {
+        //Arrange
+        when(member.getEmail()).thenReturn(ALREADY_EXISTS_EMAIL);
+        when(memberRepository.findByEmail(ALREADY_EXISTS_EMAIL)).thenReturn(member);
+
+        //Assert
+        exception.expect(UserAlreadyExistsException.class);
+        exception.expectMessage(USER_ALREADY_EXISTS);
+
+        //Act
+        memberService.save(member);
+    }
+}
\ No newline at end of file
diff --git a/src/test/java/com/crossover/techtrial/service/TopMemberServiceImplTest.java b/src/test/java/com/crossover/techtrial/service/TopMemberServiceImplTest.java
new file mode 100644
index 0000000..955bf31
--- /dev/null
+++ b/src/test/java/com/crossover/techtrial/service/TopMemberServiceImplTest.java
@@ -0,0 +1,94 @@
+package com.crossover.techtrial.service;
+
+import static org.hamcrest.Matchers.is;
+import static org.mockito.Mockito.when;
+
+import com.crossover.techtrial.dto.TopMemberDTO;
+import com.crossover.techtrial.model.Book;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.model.Transaction;
+import java.time.LocalDateTime;
+import java.util.ArrayList;
+import java.util.List;
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.ErrorCollector;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.mockito.junit.MockitoJUnitRunner;
+
+@RunWith(MockitoJUnitRunner.class)
+public class TopMemberServiceImplTest {
+
+    private static final LocalDateTime NOW = LocalDateTime.now();
+    private static final LocalDateTime BEFORE_NOW = NOW.minusHours(1);
+    private static final Integer TOP_MEMBERS_SIZE = 5;
+    private static final Long BOOK_ID = 1L;
+
+    @Rule
+    public final ErrorCollector collector = new ErrorCollector();
+
+    @Mock
+    private TransactionService transactionService;
+
+    private TopMemberService topMemberService;
+
+    @Before
+    public void setUp() throws Exception {
+        topMemberService = new TopMemberServiceImpl(transactionService);
+    }
+
+    @Test
+    public void givenTransactionsForSixMembersWhenGetTopMembersFromStartTimeToEndTimeThenFiveTopMembers() throws Exception {
+        //Arrange
+        final List<Transaction> transactions = mockTransactionsForSixMembers();
+        when(transactionService.findAllByDateOfReturnBetween(BEFORE_NOW, NOW)).thenReturn(transactions);
+
+        //Act
+        final List<TopMemberDTO> topMemberDTOS = topMemberService
+                .getTopFiveMembersFromStartTimeToEndTime(BEFORE_NOW, NOW);
+
+        //Assert
+        assertFiveTopMembers(topMemberDTOS);
+    }
+
+    private void assertFiveTopMembers(final List<TopMemberDTO> topMemberDTOS) {
+        collector.checkThat(topMemberDTOS.size(), is(TOP_MEMBERS_SIZE));
+        long i = TOP_MEMBERS_SIZE;
+        for (TopMemberDTO topMemberDTO : topMemberDTOS) {
+            collector.checkThat(topMemberDTO.getMemberId(), is(i));
+            collector.checkThat(topMemberDTO.getEmail(), is("member" + i + "@email.com"));
+            collector.checkThat(topMemberDTO.getName(), is("member" + i));
+            collector.checkThat(topMemberDTO.getBookCount(), is((int) (i + 1)));
+            i--;
+        }
+    }
+
+    private List<Transaction> mockTransactionsForSixMembers() {
+        final List<Transaction> transactions = new ArrayList<>();
+
+        final Book bookMock = new Book();
+        bookMock.setId(BOOK_ID);
+
+        for (long i = 0; i < TOP_MEMBERS_SIZE + 1; i++) {
+            final Member memberMock = new Member();
+            memberMock.setId(i);
+            memberMock.setName("member" + i);
+            memberMock.setEmail("member" + i + "@email.com");
+
+            for (long j = 0; j < i + 1; j++) {
+                final Transaction transaction = new Transaction();
+                transaction.setDateOfIssue(BEFORE_NOW);
+                transaction.setDateOfReturn(NOW);
+                transaction.setId(j);
+                transaction.setMember(memberMock);
+                transaction.setBook(bookMock);
+
+                transactions.add(transaction);
+            }
+        }
+
+        return transactions;
+    }
+}
diff --git a/src/test/java/com/crossover/techtrial/service/TransactionServiceImplTest.java b/src/test/java/com/crossover/techtrial/service/TransactionServiceImplTest.java
new file mode 100644
index 0000000..7293c08
--- /dev/null
+++ b/src/test/java/com/crossover/techtrial/service/TransactionServiceImplTest.java
@@ -0,0 +1,199 @@
+package com.crossover.techtrial.service;
+
+import static org.hamcrest.Matchers.is;
+import static org.junit.Assert.assertThat;
+import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.Mockito.doReturn;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
+
+import com.crossover.techtrial.dto.TransactionDTO;
+import com.crossover.techtrial.exceptions.BookAlreadyIssuedException;
+import com.crossover.techtrial.exceptions.BookAlreadyReturnedException;
+import com.crossover.techtrial.exceptions.InvalidTimeRangeException;
+import com.crossover.techtrial.exceptions.TooManyBooksIssuedException;
+import com.crossover.techtrial.exceptions.TransactionNotFoundException;
+import com.crossover.techtrial.model.Book;
+import com.crossover.techtrial.model.Member;
+import com.crossover.techtrial.model.Transaction;
+import com.crossover.techtrial.repositories.TransactionRepository;
+import java.time.LocalDateTime;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
+import java.util.Optional;
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.ExpectedException;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.mockito.junit.MockitoJUnitRunner;
+
+@RunWith(MockitoJUnitRunner.class)
+public class TransactionServiceImplTest {
+
+    private static final LocalDateTime NOW = LocalDateTime.now();
+    private static final LocalDateTime AFTER_NOW = NOW.plusHours(1);
+
+    private static final String BOOK_ID_KEY = "bookId";
+    private static final Long BOOK_ID_VALUE = 1L;
+    private static final String MEMBER_ID_KEY = "memberId";
+    private static final Long MEMBER_ID_VALUE = 1L;
+    private static final String BOOK_ALREADY_ISSUED = "Book already issued";
+    private static final String BOOK_ALREADY_RETURNED = "Book already returned";
+    private static final Long TRANSACTION_ID = 1L;
+    private static final Long WRONG_TRANSACTION_ID = -1L;
+    private static final String TRANSACTION_NOT_FOUND = "Transaction not found";
+    private static final String INVALID_TIME_RANGE = "Invalid time range chosen";
+    private static final String TOO_MANY_BOOKS_ISSUED = "Too many books issued";
+
+    @Rule
+    public final ExpectedException exception = ExpectedException.none();
+
+    @Mock
+    private TransactionRepository transactionRepository;
+    @Mock
+    private BookService bookService;
+    @Mock
+    private MemberService memberService;
+    @Mock
+    private Book book;
+    @Mock
+    private Member member;
+    @Mock
+    private Transaction transaction;
+    @Mock
+    private TransactionDTO transactionDTO;
+
+    private TransactionService transactionService;
+
+    @Before
+    public void setUp() throws Exception {
+        transactionService = new TransactionServiceImpl(transactionRepository, bookService, memberService);
+        mockTransactionDTO();
+    }
+
+    @Test
+    public void givenParamsWhenIssueBookToMemberThenTransactionSaved() throws Exception {
+        //Arrange
+        when(bookService.findById(BOOK_ID_VALUE)).thenReturn(book);
+        when(memberService.findById(MEMBER_ID_VALUE)).thenReturn(member);
+        doReturn(transaction).when(transactionRepository).save(any(Transaction.class));
+
+        //Act
+        final Transaction resultTransaction = transactionService.issueBookToMember(transactionDTO);
+
+        //Assert
+        assertThat(resultTransaction, is(transaction));
+    }
+
+    @Test
+    public void givenAlreadyIssuedBookWhenIssuedBookToMemberThenException() throws Exception {
+        //Arrange
+        when(transactionRepository.findByBook_IdAndDateOfReturnNull(BOOK_ID_VALUE))
+                .thenReturn(Optional.of(transaction));
+        when(transaction.getDateOfReturn()).thenReturn(null);
+
+        //Assert
+        exception.expect(BookAlreadyIssuedException.class);
+        exception.expectMessage(BOOK_ALREADY_ISSUED);
+
+        //Act
+        transactionService.issueBookToMember(transactionDTO);
+    }
+
+    @Test
+    public void givenTransactionIdWhenReturnBookTransactionThenTransactionDateUpdated() throws Exception {
+        //Arrange
+        when(transactionRepository.findById(TRANSACTION_ID)).thenReturn(Optional.of(transaction));
+        when(transactionRepository.save(transaction)).thenReturn(transaction);
+
+        //Act
+        final Transaction transactionUpdated = transactionService.returnBookTransaction(TRANSACTION_ID);
+
+        //Assert
+        assertThat(transactionUpdated, is(transaction));
+        verify(transaction).setDateOfReturn(any(LocalDateTime.class));
+        verify(transactionRepository).save(transaction);
+    }
+
+    @Test
+    public void givenTransactionAlreadyReturnsWhenReturnBookTransactionThenException() throws Exception {
+        //Arrange
+        when(transactionRepository.findById(TRANSACTION_ID)).thenReturn(Optional.of(transaction));
+        when(transaction.getDateOfReturn()).thenReturn(NOW);
+
+        //Assert
+        exception.expect(BookAlreadyReturnedException.class);
+        exception.expectMessage(BOOK_ALREADY_RETURNED);
+
+        //Act
+        transactionService.returnBookTransaction(TRANSACTION_ID);
+    }
+
+    @Test
+    public void givenWrongTransactionIdWhenReturnBookTransactionThenException() throws Exception {
+        //Arrange
+        when(transactionRepository.findById(WRONG_TRANSACTION_ID)).thenReturn(Optional.empty());
+
+        //Assert
+        exception.expect(TransactionNotFoundException.class);
+        exception.expectMessage(TRANSACTION_NOT_FOUND);
+
+        //Act
+        transactionService.returnBookTransaction(WRONG_TRANSACTION_ID);
+    }
+
+    @Test
+    public void givenStartTimeAfterEndTimeWhenFindAllInRangeThenException() throws Exception {
+        //Assert
+        exception.expect(InvalidTimeRangeException.class);
+        exception.expectMessage(INVALID_TIME_RANGE);
+
+        //Act
+        transactionService.findAllByDateOfReturnBetween(AFTER_NOW, NOW);
+    }
+
+    @Test
+    public void givenStartTimeAndEndTimeWhenFindAllInRangeThenTransactions() throws Exception {
+        //Arrange
+        final List<Transaction> transactionList = mockTransactions();
+        when(transactionRepository.findAllByDateOfReturnBetween(NOW, AFTER_NOW))
+                .thenReturn(transactionList);
+
+        //Act
+        final List<Transaction> result = transactionService.findAllByDateOfReturnBetween(NOW, AFTER_NOW);
+
+        //Assert
+        assertThat(result, is(transactionList));
+    }
+
+    @Test
+    public void givenFiveBooksIssuedAndNotReturnedWhenIssueBookToMemberThenException() throws Exception {
+        //Arrange
+        final List<Transaction> transactionList = mockFiveTransactionsNotReturned();
+        when(transactionRepository.findAllByMember_IdAndAndDateOfReturnNull(MEMBER_ID_VALUE))
+                .thenReturn(transactionList);
+
+        //Assert
+        exception.expect(TooManyBooksIssuedException.class);
+        exception.expectMessage(TOO_MANY_BOOKS_ISSUED);
+
+        //Act
+        transactionService.issueBookToMember(transactionDTO);
+    }
+
+    private void mockTransactionDTO() {
+        when(transactionDTO.getBookId()).thenReturn(BOOK_ID_VALUE);
+        when(transactionDTO.getMemberId()).thenReturn(MEMBER_ID_VALUE);
+    }
+
+    private List<Transaction> mockTransactions() {
+        return Collections.singletonList(transaction);
+    }
+
+    private List<Transaction> mockFiveTransactionsNotReturned() {
+        return Arrays.asList(transaction, transaction, transaction, transaction, transaction);
+    }
+}
diff --git a/src/test/java/com/crossover/techtrial/util/HttpEntityHelper.java b/src/test/java/com/crossover/techtrial/util/HttpEntityHelper.java
new file mode 100644
index 0000000..17c2ef5
--- /dev/null
+++ b/src/test/java/com/crossover/techtrial/util/HttpEntityHelper.java
@@ -0,0 +1,20 @@
+package com.crossover.techtrial.util;
+
+import org.springframework.http.HttpEntity;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.MediaType;
+
+public class HttpEntityHelper {
+
+    private static final String INSTANTIATION_ERROR = "This class cannot be instantiate";
+
+    private HttpEntityHelper() {
+        throw new RuntimeException(INSTANTIATION_ERROR);
+    }
+
+    public static HttpEntity<Object> getHttpEntityForJson(final String body) {
+        final HttpHeaders httpHeaders = new HttpHeaders();
+        httpHeaders.setContentType(MediaType.APPLICATION_JSON);
+        return new HttpEntity<>(body, httpHeaders);
+    }
+}
-- 
2.15.0

